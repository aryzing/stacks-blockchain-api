{"item":[{"id":"5ac6448f-31c6-486d-8e3c-36cee222b8de","name":"Accounts","description":{"content":"Read-only endpoints to obtain Stacks account details","type":"text/plain"},"item":[{"id":"297766ea-9b71-41e1-9fb8-5d120a8cbbad","name":"Get account balances","request":{"name":"Get account balances","description":{"content":"Retrieves total account balance information for a given Address or Contract Identifier. This includes the balances of  STX Tokens, Fungible Tokens and Non-Fungible Tokens for the account.","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","balances"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"},{"disabled":false,"key":"until_block","value":"pariatur proident laboris ut in","description":"returned data representing the state up until that point in time, rather than the current block."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","auth":null},"response":[{"id":"688ae43f-52b6-40e7-ae82-61679d1c5e70","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","balances"],"host":["{{baseUrl}}"],"query":[{"key":"unanchored","value":"true"},{"key":"until_block","value":"pariatur proident laboris ut in"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"stx\": {\n  \"balance\": \"1000000\",\n  \"total_sent\": \"0\",\n  \"total_received\": \"1000000\",\n  \"lock_tx_id\": \"0xec94e7d20af8979b44d17a0520c126bf742b999a0fc7ddbcbe0ab21b228ecc8c\",\n  \"locked\": \"50000\",\n  \"lock_height\": 100,\n  \"burnchain_lock_height\": 100,\n  \"burnchain_unlock_height\": 200\n },\n \"fungible_tokens\": {},\n \"non_fungible_tokens\": {}\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"deed8654-7d88-446b-856f-b49d4d5dc12e","name":"Get account STX balance","request":{"name":"Get account STX balance","description":{"content":"Retrieves STX token balance for a given Address or Contract Identifier.","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","stx"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks."},{"disabled":false,"key":"until_block","value":"pariatur proident laboris ut in","description":"returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier."}]},"method":"GET","auth":null},"response":[{"id":"ce3e670d-6453-465f-bf1c-944d9028d425","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","stx"],"host":["{{baseUrl}}"],"query":[{"key":"unanchored","value":"true"},{"key":"until_block","value":"pariatur proident laboris ut in"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier."}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"balance\": \"1000000\",\n \"total_sent\": \"0\",\n \"total_received\": \"1000000\",\n \"lock_tx_id\": \"0xec94e7d20af8979b44d17a0520c126bf742b999a0fc7ddbcbe0ab21b228ecc8c\",\n \"locked\": \"50000\",\n \"lock_height\": 100,\n \"burnchain_lock_height\": 100,\n \"burnchain_unlock_height\": 200\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"b589cb1d-4dcf-4f1c-9722-93ab56bd72c3","name":"Get account transactions","request":{"name":"Get account transactions","description":{"content":"Retrieves a list of all Transactions for a given Address or Contract Identifier. More information on Transaction types can be found [here](https://docs.stacks.co/understand-stacks/transactions#types).\n\nIf you need to actively monitor new transactions for an address or contract id, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.\n","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","transactions"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"42000","description":"max number of account transactions to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first account transaction to fetch"},{"disabled":false,"key":"height","value":"42000","description":"Filter for transactions only at this given block height"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"},{"disabled":false,"key":"until_block","value":"pariatur proident laboris ut in","description":"returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","auth":null},"response":[{"id":"c2d4ecbf-43c4-4ae9-9821-500a41e6b65a","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","transactions"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"42000"},{"key":"offset","value":"42000"},{"key":"height","value":"42000"},{"key":"unanchored","value":"true"},{"key":"until_block","value":"pariatur proident laboris ut in"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"total\": 4989,\n \"results\": [\n  {\n   \"tx_id\": \"0xb16077b94222bc1466396d30df13db460864e85ce929a20aae0a2ac80b31e4e2\",\n   \"tx_status\": \"success\",\n   \"tx_type\": \"coinbase\",\n   \"fee_rate\": \"0\",\n   \"sender_address\": \"ST2TJRHDHMYBQ417HFB0BDX430TQA5PXRX6495G1V\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"block_hash\": \"0x83f84f814c1b00ddb672d93b97d06c8326f76746d90a979c12b69e54beb73f69\",\n   \"block_height\": 5603,\n   \"burn_block_time\": 1594335838,\n   \"canonical\": true,\n   \"is_unanchored\": false,\n   \"microblock_hash\": \"0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df\",\n   \"microblock_sequence\": 5,\n   \"microblock_canonical\": true,\n   \"tx_index\": 0,\n   \"coinbase_payload\": {\n    \"data\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"c6395af0-264c-4f70-a6da-65463be97b58","name":"Get account transaction information for specific transaction","request":{"name":"Get account transaction information for specific transaction","description":{"content":"Retrieves transaction details for a given Transaction Id `tx_id`, for a given account or contract Identifier.","type":"text/plain"},"url":{"path":["extended","v1","address",":principal",":tx_id","with_transfers"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE","key":"principal","description":"(Required) Stacks address or a contract identifier"},{"disabled":false,"type":"any","value":"0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448","key":"tx_id","description":"(Required) Transaction id"}]},"method":"GET","auth":null},"response":[{"id":"e051eb6a-c487-40eb-a716-f24644e38502","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal",":tx_id","with_transfers"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE","key":"principal","description":"(Required) Stacks address or a contract identifier"},{"disabled":false,"type":"any","value":"0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448","key":"tx_id","description":"(Required) Transaction id"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"tx_id\": \"0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448\",\n \"tx_type\": \"contract_call\",\n \"nonce\": 11,\n \"fee_rate\": \"346\",\n \"sender_address\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n \"sponsored\": false,\n \"post_condition_mode\": \"deny\",\n \"tx_status\": \"success\",\n \"block_hash\": \"0x13d1b4ad35c95bca209397420fb8af104d2929d91993ba056d7a1ca5470095f9\",\n \"block_height\": 3246,\n \"burn_block_time\": 1613009951,\n \"burn_block_time_iso\": \"2021-02-11T02:19:11.000Z\",\n \"canonical\": true,\n \"is_unanchored\": false,\n \"microblock_hash\": \"0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df\",\n \"microblock_sequence\": 5,\n \"microblock_canonical\": true,\n \"tx_index\": 1,\n \"tx_result\": {\n  \"hex\": \"0x0703\",\n  \"repr\": \"(ok true)\"\n },\n \"post_conditions\": [\n  {\n   \"type\": \"stx\",\n   \"condition_code\": \"sent_equal_to\",\n   \"amount\": \"350\",\n   \"principal\": {\n    \"type_id\": \"principal_standard\",\n    \"address\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\"\n   }\n  }\n ],\n \"contract_call\": {\n  \"contract_id\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo\",\n  \"function_name\": \"send-many\",\n  \"function_signature\": \"(define-public (send-many (recipients (list 200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))\",\n  \"function_args\": [\n   {\n    \"hex\": \"0x0b000000020c00000003046d656d6f020000000966697273746d656d6f02746f05168c031b2db5895ece0cdfbf76e0b0e8af67226a6f047573747801000000000000000000000000000000960c00000003046d656d6f020000000a7365636f6e646d656d6f02746f05168974da696d74a16d0955bc8e55720dfd39e789cf047573747801000000000000000000000000000000c8\",\n    \"repr\": \"(list (tuple (memo 0x66697273746d656d6f) (to SP26066SDPP4NXKGCVYZQDR5GX2QPE8KADZ0YK2J7) (ustx u150)) (tuple (memo 0x7365636f6e646d656d6f) (to SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP) (ustx u200)))\",\n    \"name\": \"recipients\",\n    \"type\": \"(list 200 (tuple (memo (buff 34)) (to principal) (ustx uint)))\"\n   }\n  ]\n },\n \"events\": [],\n \"event_count\": 4\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"e0d6fe96-cf00-4462-bfbe-98a0acaa31e6","name":"Not found","originalRequest":{"url":{"path":["extended","v1","address",":principal",":tx_id","with_transfers"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE","key":"principal","description":"(Required) Stacks address or a contract identifier"},{"disabled":false,"type":"any","value":"0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448","key":"tx_id","description":"(Required) Transaction id"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"No matching transaction found\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"712a8702-cc7b-4ffa-a371-dd5f67f6044d","name":"Get account transactions including STX transfers for each transaction.","request":{"name":"Get account transactions including STX transfers for each transaction.","description":{"content":"Retrieve all transactions for an account or contract identifier including STX transfers for each transaction.","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","transactions_with_transfers"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"20","description":"max number of account transactions to fetch"},{"disabled":false,"key":"offset","value":"10","description":"index of first account transaction to fetch"},{"disabled":false,"key":"height","value":"66119","description":"Filter for transactions only at this given block height"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"},{"disabled":false,"key":"until_block","value":"pariatur proident laboris ut in","description":"returned data representing the state up until that point in time, rather than the current block."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","auth":null},"response":[{"id":"d571b0d4-6dee-4e25-aaeb-0d801d655638","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","transactions_with_transfers"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"20"},{"key":"offset","value":"10"},{"key":"height","value":"66119"},{"key":"unanchored","value":"true"},{"key":"until_block","value":"pariatur proident laboris ut in"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"total\": 2,\n \"results\": [\n  {\n   \"tx\": {\n    \"tx_id\": \"0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448\",\n    \"tx_type\": \"contract_call\",\n    \"nonce\": 11,\n    \"fee_rate\": \"346\",\n    \"sender_address\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n    \"sponsored\": false,\n    \"post_condition_mode\": \"deny\",\n    \"tx_status\": \"success\",\n    \"block_hash\": \"0x13d1b4ad35c95bca209397420fb8af104d2929d91993ba056d7a1ca5470095f9\",\n    \"block_height\": 3246,\n    \"burn_block_time\": 1613009951,\n    \"burn_block_time_iso\": \"2021-02-11T02:19:11.000Z\",\n    \"canonical\": true,\n    \"is_unanchored\": false,\n    \"microblock_hash\": \"0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df\",\n    \"microblock_sequence\": 5,\n    \"microblock_canonical\": true,\n    \"tx_index\": 1,\n    \"tx_result\": {\n     \"hex\": \"0x0703\",\n     \"repr\": \"(ok true)\"\n    },\n    \"post_conditions\": [\n     {\n      \"type\": \"stx\",\n      \"condition_code\": \"sent_equal_to\",\n      \"amount\": \"350\",\n      \"principal\": {\n       \"type_id\": \"principal_standard\",\n       \"address\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\"\n      }\n     }\n    ],\n    \"contract_call\": {\n     \"contract_id\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo\",\n     \"function_name\": \"send-many\",\n     \"function_signature\": \"(define-public (send-many (recipients (list 200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))\",\n     \"function_args\": [\n      {\n       \"hex\": \"0x0b000000020c00000003046d656d6f020000000966697273746d656d6f02746f05168c031b2db5895ece0cdfbf76e0b0e8af67226a6f047573747801000000000000000000000000000000960c00000003046d656d6f020000000a7365636f6e646d656d6f02746f05168974da696d74a16d0955bc8e55720dfd39e789cf047573747801000000000000000000000000000000c8\",\n       \"repr\": \"(list (tuple (memo 0x66697273746d656d6f) (to SP26066SDPP4NXKGCVYZQDR5GX2QPE8KADZ0YK2J7) (ustx u150)) (tuple (memo 0x7365636f6e646d656d6f) (to SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP) (ustx u200)))\",\n       \"name\": \"recipients\",\n       \"type\": \"(list 200 (tuple (memo (buff 34)) (to principal) (ustx uint)))\"\n      }\n     ]\n    },\n    \"events\": [],\n    \"event_count\": 4\n   },\n   \"stx_sent\": \"696\",\n   \"stx_received\": \"0\",\n   \"stx_transfers\": [\n    {\n     \"amount\": \"200\",\n     \"sender\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n     \"recipient\": \"SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP\"\n    },\n    {\n     \"amount\": \"150\",\n     \"sender\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n     \"recipient\": \"SP26066SDPP4NXKGCVYZQDR5GX2QPE8KADZ0YK2J7\"\n    }\n   ],\n   \"ft_transfers\": [\n    {\n     \"amount\": \"103\",\n     \"asset_identifier\": \"SP466FNC0P7JWTNM2R9T199QRZN1MYEDTAR0KP27.miamicoin-token::miamicoin\",\n     \"sender\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n     \"recipient\": \"SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP\"\n    }\n   ],\n   \"nft_transfers\": [\n    {\n     \"asset_identifier\": \"SP497E7RX3233ATBS2AB9G4WTHB63X5PBSP5VGAQ.boom-nfts::boom\",\n     \"value\": {\n      \"hex\": \"0x00\",\n      \"repr\": \"0\"\n     },\n     \"sender\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n     \"recipient\": \"SP24Q9PK9DNTA2V89APY8WNBJ1QYKKSW9SWB04RJP\"\n    }\n   ]\n  },\n  {\n   \"tx\": {\n    \"tx_id\": \"0x628045bff13658396277d618e9a3e4d468a4b3876eff4941d2f13ed88cd7abb7\",\n    \"tx_type\": \"token_transfer\",\n    \"nonce\": 8,\n    \"fee_rate\": \"180\",\n    \"sender_address\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n    \"sponsored\": false,\n    \"post_condition_mode\": \"deny\",\n    \"tx_status\": \"success\",\n    \"block_hash\": \"0x2b8599696f64e2456c67b1ab5e63078f99d87bd1d903c37fdcfd73b1890a7551\",\n    \"block_height\": 1761,\n    \"burn_block_time\": 1611968237,\n    \"burn_block_time_iso\": \"2021-01-30T00:57:17.000Z\",\n    \"canonical\": true,\n    \"is_unanchored\": false,\n    \"microblock_hash\": \"\",\n    \"microblock_sequence\": 2147483647,\n    \"microblock_canonical\": true,\n    \"tx_index\": 2,\n    \"tx_result\": {\n     \"hex\": \"0x0703\",\n     \"repr\": \"(ok true)\"\n    },\n    \"token_transfer\": {\n     \"recipient_address\": \"SPRSM0R2JZWBCZ39NQBARWTMX9TE99K3JK8D5KMX\",\n     \"amount\": \"100000\",\n     \"memo\": \"0x57656c636f6d6520746f20426f6f6d2e000000000000000000000000000000000000\"\n    },\n    \"events\": [],\n    \"event_count\": 1\n   },\n   \"stx_sent\": \"100180\",\n   \"stx_received\": \"0\",\n   \"stx_transfers\": [\n    {\n     \"amount\": \"100000\",\n     \"sender\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE\",\n     \"recipient\": \"SPRSM0R2JZWBCZ39NQBARWTMX9TE99K3JK8D5KMX\"\n    }\n   ],\n   \"ft_transfers\": [],\n   \"nft_transfers\": []\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"a3a709d5-d8e2-4dc8-b47c-2d376b2e8e59","name":"Get the latest nonce used by an account","request":{"name":"Get the latest nonce used by an account","description":{"content":"Retrieves the latest nonce values used by an account by inspecting the mempool, microblock transactions, and anchored transactions.","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","nonces"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"block_height","value":"66119","description":"Optionally get the nonce at a given block height."},{"disabled":false,"key":"block_hash","value":"0x72d53f3cba39e149dcd42708e535bdae03d73e60d2fe853aaf61c0b392f521e9","description":"Optionally get the nonce at a given block hash. Note - Use either of the query parameters but not both at a time."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address"}]},"method":"GET","auth":null},"response":[{"id":"f6704618-5ba7-4711-bfee-1a025de2b661","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","nonces"],"host":["{{baseUrl}}"],"query":[{"key":"block_height","value":"66119"},{"key":"block_hash","value":"0x72d53f3cba39e149dcd42708e535bdae03d73e60d2fe853aaf61c0b392f521e9"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"last_mempool_tx_nonce\": 5,\n \"last_executed_tx_nonce\": 2,\n \"possible_next_nonce\": 6,\n \"detected_missing_nonces\": [\n  3,\n  4\n ],\n \"detected_mempool_nonces\": []\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"9fb81901-50c6-4c89-b133-f5bf2ec7b748","name":"Get account assets","request":{"name":"Get account assets","description":{"content":"Retrieves a list of all assets events associated with an account or a Contract Identifier. This includes Transfers, Mints.","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","assets"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"20","description":"max number of account assets to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first account assets to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"},{"disabled":false,"key":"until_block","value":"pariatur proident laboris ut in","description":"returned data representing the state at that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","auth":null},"response":[{"id":"7817df73-7369-4648-b627-afb672607bce","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","assets"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"20"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"},{"key":"until_block","value":"pariatur proident laboris ut in"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"total\": 0,\n \"results\": [\n  {\n   \"event_index\": 0,\n   \"event_type\": \"stx_asset\",\n   \"tx_id\": \"0xb31df5a363dad31723324cb5e0eefa04d491519fd30827a521cbc830114aa50c\",\n   \"asset\": {\n    \"asset_event_type\": \"transfer\",\n    \"sender\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n    \"recipient\": \"ST2TJRHDHMYBQ417HFB0BDX430TQA5PXRX6495G1V\",\n    \"amount\": \"500000\"\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"d0d861cc-38e2-4234-9ef5-f728e41cc843","name":"Get inbound STX transfers","request":{"name":"Get inbound STX transfers","description":{"content":"Retrieves a list of STX transfers with memos to the given principal. This includes regular transfers from a stx-transfer transaction type,\nand transfers from contract-call transactions a the `send-many-memo` bulk sending contract.\n","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","stx_inbound"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"62802150","description":"number of items to return"},{"disabled":false,"key":"offset","value":"42000","description":"number of items to skip"},{"disabled":false,"key":"height","value":"63511940.702307254","description":"Filter for transfers only at this given block height"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"},{"disabled":false,"key":"until_block","value":"pariatur proident laboris ut in","description":"returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","auth":null},"response":[{"id":"618f3319-ba07-4c14-8c37-ced0e5925c0b","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","stx_inbound"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"62802150"},{"key":"offset","value":"42000"},{"key":"height","value":"63511940.702307254"},{"key":"unanchored","value":"true"},{"key":"until_block","value":"pariatur proident laboris ut in"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"total\": 0,\n \"results\": [\n  {\n   \"sender\": \"ST1RZG804V6Y0N4XHQD3ZE2GE3XSCV3VHRKMA3GB0\",\n   \"amount\": \"123456789\",\n   \"memo\": \"0x00000000000000000000000000000000000000000000000000000000000000000000\",\n   \"block_height\": 12345,\n   \"tx_id\": \"0x29e25515652dad41ef675bd0670964e3d537b80ec19cf6ca6f1dd65d5bc642c5\",\n   \"transfer_type\": \"bulk-send\",\n   \"tx_index\": 3\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"3586f037-b7d5-40f1-860d-47201461cc0d","name":"Get nft events","request":{"name":"Get nft events","description":{"content":"**NOTE:** This endpoint is deprecated in favor of [Non-Fungible Token holdings](#operation/get_nft_holdings).\n\nRetrieves a list of all nfts owned by an address, contains the clarity value of the identifier of the nft.\n","type":"text/plain"},"url":{"path":["extended","v1","address",":principal","nft_events"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"62802150","description":"number of items to return"},{"disabled":false,"key":"offset","value":"42000","description":"number of items to skip"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"},{"disabled":false,"key":"until_block","value":"pariatur proident laboris ut in","description":"returned data representing the state up until that point in time, rather than the current block. Note - Use either of the query parameters but not both at a time."}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","auth":null},"response":[{"id":"09a08727-52a5-4016-9167-302b42560ec8","name":"Success","originalRequest":{"url":{"path":["extended","v1","address",":principal","nft_events"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"62802150"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"},{"key":"until_block","value":"pariatur proident laboris ut in"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"total\": 1,\n \"nft_events\": [\n  {\n   \"sender\": \"none\",\n   \"recipient\": \"ST1HB64MAJ1MBV4CQ80GF01DZS4T1DSMX20ADCRA4\",\n   \"asset_identifier\": \"some-asset\",\n   \"value\": {\n    \"hex\": \"0x00\",\n    \"repr\": \"0\"\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"c5ce9942-88d5-486b-8247-82f20389f1af","name":"Get account info","request":{"name":"Get account info","description":{"content":"Retrieves the account data for a given Account or a Contract Identifier\n\nWhere balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings.\n\nFor non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0.\n","type":"text/plain"},"url":{"path":["v2","accounts",":principal"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"proof","value":"62802150","description":"Returns object without the proof field if set to 0"},{"disabled":false,"key":"tip","value":"occaecat consequat laboris","description":"The Stacks chain tip to query from"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","auth":null},"response":[{"id":"2c10ec23-a908-41f7-90be-3274a1822ef8","name":"Success","originalRequest":{"url":{"path":["v2","accounts",":principal"],"host":["{{baseUrl}}"],"query":[{"key":"proof","value":"62802150"},{"key":"tip","value":"occaecat consequat laboris"}],"variable":[{"disabled":false,"type":"any","value":"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0","key":"principal","description":"(Required) Stacks address or a Contract identifier"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"balance\": \"0x0000000000000000000000000007a120\",\n \"locked\": \"0x0000000000000000000000000007a120\",\n \"unlock_height\": 126,\n \"nonce\": 2867,\n \"balance_proof\": \"0xabce\",\n \"nonce_proof\": \"0xabcd\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"be3bac7d-0ddc-4536-9095-d4dd3dd517ca","name":"Blocks","description":{"content":"Read-only endpoints to obtain Stacks block details","type":"text/plain"},"item":[{"id":"94284658-51ba-4382-95d9-bde9439c9e74","name":"Get recent blocks","request":{"name":"Get recent blocks","description":{"content":"Retrieves a list of recently mined blocks\n\nIf you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.\n","type":"text/plain"},"url":{"path":["extended","v1","block"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"20","description":"max number of blocks to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first block to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"d3ef7b6c-1d9a-4600-8dbd-c7bc8f639390","name":"List of blocks","originalRequest":{"url":{"path":["extended","v1","block"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"20"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 1,\n \"offset\": 0,\n \"total\": 21707,\n \"results\": [\n  {\n   \"canonical\": true,\n   \"height\": 21698,\n   \"hash\": \"0x9be3e38eab9c7d094fd51792383c66706838d6392e95bc05cc730b8f7520e352\",\n   \"parent_block_hash\": \"0x76ee36d1d6c88e56b5c0e80f0d7bc7d3492141faf1b900efb19fcd00457d4654\",\n   \"burn_block_time\": 1626281749,\n   \"burn_block_time_iso\": \"2021-07-14T16:55:49.000Z\",\n   \"burn_block_hash\": \"0x0000000000000000000ea16f8e906e85ee1cb4dff1e5424e93843b3cec8b0bcb\",\n   \"burn_block_height\": 691014,\n   \"miner_txid\": \"0x118f7122a69441d13e6a3dfd4c3b0f9950be25195bb8126aae7fadea1aa9185d\",\n   \"parent_microblock_hash\": \"0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04\",\n   \"parent_microblock_sequence\": 3,\n   \"txs\": [\n    \"0x76f58b2eaff65a07a5971b241c4e71fee92ee0f9396809f911f90839f9004cac\",\n    \"0x32972d9052b068f218f6e13451f7aff937099b74bbf95fac7d9402295b1b3941\",\n    \"0x8cd30724c02a9cc1d8879a34dc136ebfdb2008420badcfb5947b92f85ebce79b\",\n    \"0xf5c1577f42d3753a508101e045dd2dc60491eb0aa552e0ecd0ad37cc697143f4\",\n    \"0x35e4c20e2838f999e0cf0b40c5fabce154c2df1912a1074150d26784c53f7a20\",\n    \"0x501eb42b82e5b7a7350b47fa143cd4e90bb46d43e4a7d22830b2bf2aa70b7922\"\n   ],\n   \"microblocks_accepted\": [\n    \"0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04\",\n    \"0xdaf61d2b355f35c94cf019af99aeb73d8e7db7301c7cd693a464ebd1cfc2228c\",\n    \"0xb9e9b308cf9621ecbf66ca7b4689fe384b9b67c4588ec827d8163ab602fb935e\",\n    \"0x754562cba6ec243f90485e97778ab472f462fd123ef5b83cc79d8759ca8875f5\"\n   ],\n   \"microblocks_streamed\": [\n    \"0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04\",\n    \"0xdaf61d2b355f35c94cf019af99aeb73d8e7db7301c7cd693a464ebd1cfc2228c\",\n    \"0xb9e9b308cf9621ecbf66ca7b4689fe384b9b67c4588ec827d8163ab602fb935e\",\n    \"0x754562cba6ec243f90485e97778ab472f462fd123ef5b83cc79d8759ca8875f5\"\n   ]\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"6b883847-1939-4c7d-bdc5-7b0eb6c48035","name":"Get block by hash","request":{"name":"Get block by hash","description":{"content":"Retrieves block details of a specific block for a given chain height. You can use the hash from your latest block ('get_block_list' API) to get your block details.","type":"text/plain"},"url":{"path":["extended","v1","block",":hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79","key":"hash","description":"(Required) Hash of the block"}]},"method":"GET","auth":null},"response":[{"id":"95914026-4fbc-4747-8fad-21fd2a479f24","name":"Block","originalRequest":{"url":{"path":["extended","v1","block",":hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79","key":"hash","description":"(Required) Hash of the block"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"canonical\": true,\n \"height\": 3275,\n \"hash\": \"0xe77ba8cf6bb7c0e4f64adc83356289ed467d31a22354907b4bb814590058430f\",\n \"index_block_hash\": \"0x918697ef63f9d8bdf844c3312b299e72a231cde542f3173f7755bb8c1cdaf3a7\",\n \"parent_block_hash\": \"0x75ab21ef25cbff2caa14c27d830ed7886a4d1522e1b6f9e5dc3b59ccf73ed49f\",\n \"burn_block_time\": 1594233639,\n \"burn_block_time_iso\": \"2020-08-27T16:41:26.000Z\",\n \"burn_block_hash\": \"0xb154c008df2101023a6d0d54986b3964cee58119eed14f5bed98e15678e18fe2\",\n \"burn_block_height\": 654439,\n \"miner_txid\": \"0xd7d56070277ccd87b42acf0c91f915dd181f9db4cf878a4e95518bc397c240cc\",\n \"parent_microblock_hash\": \"0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df\",\n \"parent_microblock_sequence\": 2,\n \"txs\": [\n  \"0x4262db117659d1ca9406970c8f44ffd3d8f11f8e18c591d2e3960f4070107754\",\n  \"0x383632cd3b5464dffb684082750fcfaddd1f52625bbb9f884ed8f45d2b1f0547\",\n  \"0xc99fe597e44b8bd15a50eec660c6e679a7144a5a8553d214b9d5f1406d278c22\"\n ],\n \"microblocks_accepted\": [\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\",\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\",\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\"\n ],\n \"microblocks_streamed\": [\n  \"0xb5650ef855f7d90fc146942e85cf9fac3a8c47ec408aca02f3cf9ed7c82f6cc6\",\n  \"0xeeb9aa5741d84aa0bc5de4f2fbdeae57ae29694479475d45a67ae7bd7e2c98f3\",\n  \"0x4f4c368d5f06fdf6065c5bafd9cb37391fddc9c279cfc57be35e4bf8ee932cbd\",\n  \"0xde2fc8d99872c827f144c752c002d29f9315dfc09472a09572ac7447ae623dea\"\n ],\n \"execution_cost_read_count\": 2477,\n \"execution_cost_read_length\": 1659409,\n \"execution_cost_runtime\": 2520952000,\n \"execution_cost_write_count\": 608,\n \"execution_cost_write_length\": 80170,\n \"microblock_tx_count\": {\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\": 5,\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\": 6,\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\": 9\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"22ec55d6-d61a-436e-948d-21d421cc949d","name":"Cannot find block with given ID","originalRequest":{"url":{"path":["extended","v1","block",":hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79","key":"hash","description":"(Required) Hash of the block"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"cannot find block by hash 0xabc123\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"a611a2a7-74fa-4291-a1c4-6ac9b38f6f53","name":"Get block by height","request":{"name":"Get block by height","description":{"content":"Retrieves block details of a specific block at a given block height","type":"text/plain"},"url":{"path":["extended","v1","block","by_height",":height"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"10000","key":"height","description":"(Required) Height of the block"}]},"method":"GET","auth":null},"response":[{"id":"4664d298-3312-45a3-9816-d432e43da0a2","name":"Block","originalRequest":{"url":{"path":["extended","v1","block","by_height",":height"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"10000","key":"height","description":"(Required) Height of the block"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"canonical\": true,\n \"height\": 3275,\n \"hash\": \"0xe77ba8cf6bb7c0e4f64adc83356289ed467d31a22354907b4bb814590058430f\",\n \"index_block_hash\": \"0x918697ef63f9d8bdf844c3312b299e72a231cde542f3173f7755bb8c1cdaf3a7\",\n \"parent_block_hash\": \"0x75ab21ef25cbff2caa14c27d830ed7886a4d1522e1b6f9e5dc3b59ccf73ed49f\",\n \"burn_block_time\": 1594233639,\n \"burn_block_time_iso\": \"2020-08-27T16:41:26.000Z\",\n \"burn_block_hash\": \"0xb154c008df2101023a6d0d54986b3964cee58119eed14f5bed98e15678e18fe2\",\n \"burn_block_height\": 654439,\n \"miner_txid\": \"0xd7d56070277ccd87b42acf0c91f915dd181f9db4cf878a4e95518bc397c240cc\",\n \"parent_microblock_hash\": \"0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df\",\n \"parent_microblock_sequence\": 2,\n \"txs\": [\n  \"0x4262db117659d1ca9406970c8f44ffd3d8f11f8e18c591d2e3960f4070107754\",\n  \"0x383632cd3b5464dffb684082750fcfaddd1f52625bbb9f884ed8f45d2b1f0547\",\n  \"0xc99fe597e44b8bd15a50eec660c6e679a7144a5a8553d214b9d5f1406d278c22\"\n ],\n \"microblocks_accepted\": [\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\",\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\",\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\"\n ],\n \"microblocks_streamed\": [\n  \"0xb5650ef855f7d90fc146942e85cf9fac3a8c47ec408aca02f3cf9ed7c82f6cc6\",\n  \"0xeeb9aa5741d84aa0bc5de4f2fbdeae57ae29694479475d45a67ae7bd7e2c98f3\",\n  \"0x4f4c368d5f06fdf6065c5bafd9cb37391fddc9c279cfc57be35e4bf8ee932cbd\",\n  \"0xde2fc8d99872c827f144c752c002d29f9315dfc09472a09572ac7447ae623dea\"\n ],\n \"execution_cost_read_count\": 2477,\n \"execution_cost_read_length\": 1659409,\n \"execution_cost_runtime\": 2520952000,\n \"execution_cost_write_count\": 608,\n \"execution_cost_write_length\": 80170,\n \"microblock_tx_count\": {\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\": 5,\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\": 6,\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\": 9\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"e581aa03-9d30-46df-8714-15262be37302","name":"Cannot find block with given height","originalRequest":{"url":{"path":["extended","v1","block","by_height",":height"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"10000","key":"height","description":"(Required) Height of the block"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"cannot find block by hash 0xabc123\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"d9bb07f4-631d-47f6-a503-3673be54dd50","name":"Get block by burnchain block hash","request":{"name":"Get block by burnchain block hash","description":{"content":"Retrieves block details of a specific block for a given burnchain block hash","type":"text/plain"},"url":{"path":["extended","v1","block","by_burn_block_hash",":burn_block_hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x00000000000000000002bba732926cf68b6eda3e2cdbc2a85af79f10efeeeb10","key":"burn_block_hash","description":"(Required) Hash of the burnchain block"}]},"method":"GET","auth":null},"response":[{"id":"dd915dbb-f7e9-46e9-bbf2-b4b8c886672d","name":"Block","originalRequest":{"url":{"path":["extended","v1","block","by_burn_block_hash",":burn_block_hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x00000000000000000002bba732926cf68b6eda3e2cdbc2a85af79f10efeeeb10","key":"burn_block_hash","description":"(Required) Hash of the burnchain block"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"canonical\": true,\n \"height\": 3275,\n \"hash\": \"0xe77ba8cf6bb7c0e4f64adc83356289ed467d31a22354907b4bb814590058430f\",\n \"index_block_hash\": \"0x918697ef63f9d8bdf844c3312b299e72a231cde542f3173f7755bb8c1cdaf3a7\",\n \"parent_block_hash\": \"0x75ab21ef25cbff2caa14c27d830ed7886a4d1522e1b6f9e5dc3b59ccf73ed49f\",\n \"burn_block_time\": 1594233639,\n \"burn_block_time_iso\": \"2020-08-27T16:41:26.000Z\",\n \"burn_block_hash\": \"0xb154c008df2101023a6d0d54986b3964cee58119eed14f5bed98e15678e18fe2\",\n \"burn_block_height\": 654439,\n \"miner_txid\": \"0xd7d56070277ccd87b42acf0c91f915dd181f9db4cf878a4e95518bc397c240cc\",\n \"parent_microblock_hash\": \"0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df\",\n \"parent_microblock_sequence\": 2,\n \"txs\": [\n  \"0x4262db117659d1ca9406970c8f44ffd3d8f11f8e18c591d2e3960f4070107754\",\n  \"0x383632cd3b5464dffb684082750fcfaddd1f52625bbb9f884ed8f45d2b1f0547\",\n  \"0xc99fe597e44b8bd15a50eec660c6e679a7144a5a8553d214b9d5f1406d278c22\"\n ],\n \"microblocks_accepted\": [\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\",\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\",\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\"\n ],\n \"microblocks_streamed\": [\n  \"0xb5650ef855f7d90fc146942e85cf9fac3a8c47ec408aca02f3cf9ed7c82f6cc6\",\n  \"0xeeb9aa5741d84aa0bc5de4f2fbdeae57ae29694479475d45a67ae7bd7e2c98f3\",\n  \"0x4f4c368d5f06fdf6065c5bafd9cb37391fddc9c279cfc57be35e4bf8ee932cbd\",\n  \"0xde2fc8d99872c827f144c752c002d29f9315dfc09472a09572ac7447ae623dea\"\n ],\n \"execution_cost_read_count\": 2477,\n \"execution_cost_read_length\": 1659409,\n \"execution_cost_runtime\": 2520952000,\n \"execution_cost_write_count\": 608,\n \"execution_cost_write_length\": 80170,\n \"microblock_tx_count\": {\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\": 5,\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\": 6,\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\": 9\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"61c334f2-8846-4158-a6db-c7124dadeb0b","name":"Cannot find block with given height","originalRequest":{"url":{"path":["extended","v1","block","by_burn_block_hash",":burn_block_hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x00000000000000000002bba732926cf68b6eda3e2cdbc2a85af79f10efeeeb10","key":"burn_block_hash","description":"(Required) Hash of the burnchain block"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"cannot find block by hash 0xabc123\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"0b69d421-992e-46c9-a191-66a419173d70","name":"Get block by burnchain height","request":{"name":"Get block by burnchain height","description":{"content":"Retrieves block details of a specific block for a given burn chain height","type":"text/plain"},"url":{"path":["extended","v1","block","by_burn_block_height",":burn_block_height"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"744603","key":"burn_block_height","description":"(Required) Height of the burn chain block"}]},"method":"GET","auth":null},"response":[{"id":"397bd8ac-4511-436d-b433-9c16eaa98d85","name":"Block","originalRequest":{"url":{"path":["extended","v1","block","by_burn_block_height",":burn_block_height"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"744603","key":"burn_block_height","description":"(Required) Height of the burn chain block"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"canonical\": true,\n \"height\": 3275,\n \"hash\": \"0xe77ba8cf6bb7c0e4f64adc83356289ed467d31a22354907b4bb814590058430f\",\n \"index_block_hash\": \"0x918697ef63f9d8bdf844c3312b299e72a231cde542f3173f7755bb8c1cdaf3a7\",\n \"parent_block_hash\": \"0x75ab21ef25cbff2caa14c27d830ed7886a4d1522e1b6f9e5dc3b59ccf73ed49f\",\n \"burn_block_time\": 1594233639,\n \"burn_block_time_iso\": \"2020-08-27T16:41:26.000Z\",\n \"burn_block_hash\": \"0xb154c008df2101023a6d0d54986b3964cee58119eed14f5bed98e15678e18fe2\",\n \"burn_block_height\": 654439,\n \"miner_txid\": \"0xd7d56070277ccd87b42acf0c91f915dd181f9db4cf878a4e95518bc397c240cc\",\n \"parent_microblock_hash\": \"0x590a1bb1d7bcbeafce0a9fc8f8a69e369486192d14687fe95fbe4dc1c71d49df\",\n \"parent_microblock_sequence\": 2,\n \"txs\": [\n  \"0x4262db117659d1ca9406970c8f44ffd3d8f11f8e18c591d2e3960f4070107754\",\n  \"0x383632cd3b5464dffb684082750fcfaddd1f52625bbb9f884ed8f45d2b1f0547\",\n  \"0xc99fe597e44b8bd15a50eec660c6e679a7144a5a8553d214b9d5f1406d278c22\"\n ],\n \"microblocks_accepted\": [\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\",\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\",\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\"\n ],\n \"microblocks_streamed\": [\n  \"0xb5650ef855f7d90fc146942e85cf9fac3a8c47ec408aca02f3cf9ed7c82f6cc6\",\n  \"0xeeb9aa5741d84aa0bc5de4f2fbdeae57ae29694479475d45a67ae7bd7e2c98f3\",\n  \"0x4f4c368d5f06fdf6065c5bafd9cb37391fddc9c279cfc57be35e4bf8ee932cbd\",\n  \"0xde2fc8d99872c827f144c752c002d29f9315dfc09472a09572ac7447ae623dea\"\n ],\n \"execution_cost_read_count\": 2477,\n \"execution_cost_read_length\": 1659409,\n \"execution_cost_runtime\": 2520952000,\n \"execution_cost_write_count\": 608,\n \"execution_cost_write_length\": 80170,\n \"microblock_tx_count\": {\n  \"0xce0b1a4099d3fc7d5885cc7a3baa952b6d999f9709d0683b98b843597208231c\": 5,\n  \"0x4c0529b6448a5885991c5021bd869cc97f1692c128a98b382729dc962203c326\": 6,\n  \"0x64968846291dfea1015228a9d4bbd60aac81378cd6774b810b08e59e6b0e7494\": 9\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"5b51eb2c-9cc4-48b4-8e18-33ed328948fb","name":"Cannot find block with given height","originalRequest":{"url":{"path":["extended","v1","block","by_burn_block_height",":burn_block_height"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"744603","key":"burn_block_height","description":"(Required) Height of the burn chain block"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"cannot find block by hash 0xabc123\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"42791dbf-377c-4c77-8b62-1e1a8130d343","name":"Faucets","description":{"content":"Endpoints to request STX or BTC tokens (not possible on Mainnet)","type":"text/plain"},"item":[{"id":"a905d096-af5d-46a9-958c-ad66b7aef34a","name":"Get STX testnet tokens","request":{"name":"Get STX testnet tokens","description":{"content":"Add 500 STX tokens to the specified testnet address. Testnet STX addresses begin with `ST`. If the `stacking`\nparameter is set to `true`, the faucet will add the required number of tokens for individual stacking to the\nspecified testnet address.\n\nThe endpoint returns the transaction ID, which you can use to view the transaction in the\n[Stacks Explorer](https://explorer.hiro.so/?chain=testnet). The tokens are delivered once the transaction has\nbeen included in an anchor block.\n\nA common reason for failed faucet transactions is that the faucet has run out of tokens. If you are experiencing\nfailed faucet transactions to a testnet address, you can get help in [Discord](https://stacks.chat).\n\n**Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet.\n","type":"text/plain"},"url":{"path":["extended","v1","faucets","stx"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"address","value":"ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ","description":"(Required) A valid testnet STX address"},{"disabled":false,"key":"stacking","value":"false","description":"Request the amount of STX tokens needed for individual address stacking"}],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"address\": \"ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ\",\n    \"stacking\": false\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"d6c42768-e189-4ea2-9feb-39ce446020ea","name":"Success","originalRequest":{"url":{"path":["extended","v1","faucets","stx"],"host":["{{baseUrl}}"],"query":[{"key":"address","value":"ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ"},{"key":"stacking","value":"false"}],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"address\": \"ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ\",\n    \"stacking\": false\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"success\": true,\n \"txId\": \"0xf2f0402f9f4c4d43b382690c4f7b97e24d5ff5dd5c619e3615daa64dca7ef4bc\",\n \"txRaw\": \"80800000000400164247d6f2b425ac5771423ae6c80c754f7172b0000000000000003200000000000000b400008537046ff1008368baaa3ff2235122c556b89dad4f9df0639b924cf32a44b866497e49846b24191e711b21faaae96ca0542e4a140168484740b94211cececb3303020000000000051ab52c45b1a7977204f17ac0b6f48306aea2dbb8e9000000000007a12046617563657400000000000000000000000000000000000000000000000000000000\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"3a559980-636b-4d41-b2ce-8ed736b68fde","name":"Faucet call failed","originalRequest":{"url":{"path":["extended","v1","faucets","stx"],"host":["{{baseUrl}}"],"query":[{"key":"address","value":"ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ"},{"key":"stacking","value":"false"}],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"address\": \"ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ\",\n    \"stacking\": false\n}","options":{"raw":{"language":"json"}}}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"eff3eea1-9a46-4ec6-9058-b248ef57c964","name":"Add testnet BTC tokens to address","request":{"name":"Add testnet BTC tokens to address","description":{"content":"Add 1 BTC token to the specified testnet BTC address.\n\nThe endpoint returns the transaction ID, which you can use to view the transaction in a testnet Bitcoin block\nexplorer. The tokens are delivered once the transaction has been included in a block.\n\n**Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet.\n","type":"text/plain"},"url":{"path":["extended","v1","faucets","btc"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"address","value":"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts","description":"(Required) A valid testnet BTC address"}],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"address\": \"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts\"\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"2c3a60b7-6adb-474a-87fc-65c4abcefd28","name":"Success","originalRequest":{"url":{"path":["extended","v1","faucets","btc"],"host":["{{baseUrl}}"],"query":[{"key":"address","value":"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts"}],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"address\": \"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts\"\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"success\": true,\n \"txId\": \"0xf2f0402f9f4c4d43b382690c4f7b97e24d5ff5dd5c619e3615daa64dca7ef4bc\",\n \"txRaw\": \"80800000000400164247d6f2b425ac5771423ae6c80c754f7172b0000000000000003200000000000000b400008537046ff1008368baaa3ff2235122c556b89dad4f9df0639b924cf32a44b866497e49846b24191e711b21faaae96ca0542e4a140168484740b94211cececb3303020000000000051ab52c45b1a7977204f17ac0b6f48306aea2dbb8e9000000000007a12046617563657400000000000000000000000000000000000000000000000000000000\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"d2055924-a62b-4fd1-8190-743d7a8651e4","name":"BTC Faucet not fully configured","originalRequest":{"url":{"path":["extended","v1","faucets","btc"],"host":["{{baseUrl}}"],"query":[{"key":"address","value":"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts"}],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"address\": \"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts\"\n}","options":{"raw":{"language":"json"}}}},"status":"Forbidden","code":403,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"BTC Faucet not fully configured\",\n \"success\": false\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"8d4ae5dc-da24-4ada-abc3-b13df8daed30","name":"Faucet call failed","originalRequest":{"url":{"path":["extended","v1","faucets","btc"],"host":["{{baseUrl}}"],"query":[{"key":"address","value":"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts"}],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"address\": \"2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts\"\n}","options":{"raw":{"language":"json"}}}},"status":"Internal Server Error","code":500,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"}],"event":[]}],"event":[]},{"id":"b4a11c27-3056-4f3b-9815-c8f87d5b2a10","name":"Fees","description":{"content":"Read-only endpoints to obtain fee details","type":"text/plain"},"item":[{"id":"23274f3e-11cb-430f-bcb8-ebb500ab893d","name":"Get estimated fee","request":{"name":"Get estimated fee","description":{"content":"Retrieves an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer","type":"text/plain"},"url":{"path":["v2","fees","transfer"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"85463c96-cab1-41e3-8161-d86ad50c9ff5","name":"Success","originalRequest":{"url":{"path":["v2","fees","transfer"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"1","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"64cae680-1976-4f89-9f9d-053810435ba9","name":"Fetch fee rate","request":{"name":"Fetch fee rate","description":{"content":"**NOTE:** This endpoint is deprecated in favor of [Get approximate fees for a given transaction](#operation/post_fee_transaction).\n\nRetrieves estimated fee rate.\n","type":"text/plain"},"url":{"path":["extended","v1","fee_rate"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"transaction\": \"0x5e9f3933e358df6a73fec0d47ce3e1062c20812c129f5294e6f37a8d27c051d9\"\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"6dae7e9e-9709-4961-9988-8878d5ee70e0","name":"Transaction fee rate","originalRequest":{"url":{"path":["extended","v1","fee_rate"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"transaction\": \"0x5e9f3933e358df6a73fec0d47ce3e1062c20812c129f5294e6f37a8d27c051d9\"\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"fee_rate\": 360\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"a8be12e9-e71c-435f-9dfe-c3b8a9ea55bb","name":"Get approximate fees for a given transaction","request":{"name":"Get approximate fees for a given transaction","description":{"content":"Get an estimated fee for the supplied transaction.  This\nestimates the execution cost of the transaction, the current\nfee rate of the network, and returns estimates for fee\namounts.\n* `transaction_payload` is a hex-encoded serialization of\n  the TransactionPayload for the transaction.\n* `estimated_len` is an optional argument that provides the\n  endpoint with an estimation of the final length (in bytes)\n  of the transaction, including any post-conditions and\n  signatures\nIf the node cannot provide an estimate for the transaction\n(e.g., if the node has never seen a contract-call for the\ngiven contract and function) or if estimation is not\nconfigured on this node, a 400 response is returned.\nThe 400 response will be a JSON error containing a `reason`\nfield which can be one of the following:\n* `DatabaseError` - this Stacks node has had an internal\n  database error while trying to estimate the costs of the\n  supplied transaction.\n* `NoEstimateAvailable` - this Stacks node has not seen this\n  kind of contract-call before, and it cannot provide an\n  estimate yet.\n* `CostEstimationDisabled` - this Stacks node does not perform\n  fee or cost estimation, and it cannot respond on this\n  endpoint.\nThe 200 response contains the following data:\n* `estimated_cost` - the estimated multi-dimensional cost of\n  executing the Clarity VM on the provided transaction.\n* `estimated_cost_scalar` - a unitless integer that the Stacks\n  node uses to compare how much of the block limit is consumed\n  by different transactions. This value incorporates the\n  estimated length of the transaction and the estimated\n  execution cost of the transaction. The range of this integer\n  may vary between different Stacks nodes. In order to compute\n  an estimate of total fee amount for the transaction, this\n  value is multiplied by the same Stacks node's estimated fee\n  rate.\n* `cost_scalar_change_by_byte` - a float value that indicates how\n  much the `estimated_cost_scalar` value would increase for every\n  additional byte in the final transaction.\n* `estimations` - an array of estimated fee rates and total fees to\n  pay in microSTX for the transaction. This array provides a range of\n  estimates (default: 3) that may be used. Each element of the array\n  contains the following fields:\n    * `fee_rate` - the estimated value for the current fee\n      rates in the network\n    * `fee` - the estimated value for the total fee in\n      microSTX that the given transaction should pay. These\n      values are the result of computing:\n      `fee_rate` x `estimated_cost_scalar`.\n      If the estimated fees are less than the minimum relay\n      fee `(1 ustx x estimated_len)`, then that minimum relay\n      fee will be returned here instead.\nNote: If the final transaction's byte size is larger than\nsupplied to `estimated_len`, then applications should increase\nthis fee amount by:\n  `fee_rate` x `cost_scalar_change_by_byte` x (`final_size` - `estimated_size`)\n","type":"text/plain"},"url":{"path":["v2","fees","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"estimated_len\": 350,\n    \"transaction_payload\": \"021af942874ce525e87f21bbe8c121b12fac831d02f4086765742d696e666f0b7570646174652d696e666f00000000\"\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"4882d9ea-1002-4fd8-92d8-d1435fd05075","name":"Estimated fees for the transaction","originalRequest":{"url":{"path":["v2","fees","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"estimated_len\": 350,\n    \"transaction_payload\": \"021af942874ce525e87f21bbe8c121b12fac831d02f4086765742d696e666f0b7570646174652d696e666f00000000\"\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"cost_scalar_change_by_byte\": 0.00476837158203125,\n \"estimated_cost\": {\n  \"read_count\": 19,\n  \"read_length\": 4814,\n  \"runtime\": 7175000,\n  \"write_count\": 2,\n  \"write_length\": 1020\n },\n \"estimated_cost_scalar\": 14,\n \"estimations\": [\n  {\n   \"fee\": 17,\n   \"fee_rate\": 1.2410714285714286\n  },\n  {\n   \"fee\": 125,\n   \"fee_rate\": 8.958333333333332\n  },\n  {\n   \"fee\": 140,\n   \"fee_rate\": 10\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"f890035d-9a3e-49e8-bbab-926c5cb96a10","name":"Fungible Tokens","description":{"content":"Read-only endpoints to obtain fungible token details","type":"text/plain"},"item":[{"id":"a8946ea4-b186-46e6-9cd0-579851b77afd","name":"Fungible tokens metadata list","request":{"name":"Fungible tokens metadata list","description":{"content":"**NOTE:** This endpoint is deprecated in favor of the [Token Metadata Service](https://github.com/hirosystems/token-metadata-service).\n\nRetrieves list of fungible tokens with their metadata. More information on Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#fungible-tokens).\n","type":"text/plain"},"url":{"path":["extended","v1","tokens","ft","metadata"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"100","description":"max number of tokens to fetch."},{"disabled":false,"key":"offset","value":"42000","description":"index of first tokens to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"00a115bb-a384-4b7a-a005-09b6a73549c1","name":"List of fungible tokens metadata","originalRequest":{"url":{"path":["extended","v1","tokens","ft","metadata"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"100"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 1,\n \"offset\": 0,\n \"total\": 500,\n \"results\": [\n  {\n   \"token_uri\": \"https://heystack.xyz/token-metadata.json\",\n   \"name\": \"Heystack\",\n   \"description\": \"Heystack is a SIP-010-compliant fungible token on the Stacks Blockchain, used on the Heystack app\",\n   \"image_uri\": \"https://heystack.xyz/assets/Stacks128w.png\",\n   \"image_canonical_uri\": \"https://heystack.xyz/assets/Stacks128w.png\",\n   \"tx_id\": \"0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0\",\n   \"sender_address\": \"ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA\",\n   \"symbol\": \"HEY\",\n   \"decimals\": 5\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"3b1ae5b9-5503-48f8-9ef1-d41173cb349d","name":"Fungible tokens metadata for contract id","request":{"name":"Fungible tokens metadata for contract id","description":{"content":"**NOTE:** This endpoint is deprecated in favor of the [Token Metadata Service](https://github.com/hirosystems/token-metadata-service).\n\nRetrieves the metadata for fungible tokens for a given contract id\n","type":"text/plain"},"url":{"path":["extended","v1","tokens",":contractId","ft","metadata"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11.newyorkcitycoin-token-v2","key":"contractId","description":"(Required) token's contract id"}]},"method":"GET","auth":null},"response":[{"id":"45e4213f-7f45-4481-92ac-c6dd382faafb","name":"Fungible tokens metadata for contract id","originalRequest":{"url":{"path":["extended","v1","tokens",":contractId","ft","metadata"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11.newyorkcitycoin-token-v2","key":"contractId","description":"(Required) token's contract id"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"token_uri\": \"https://heystack.xyz/token-metadata.json\",\n \"name\": \"Heystack\",\n \"description\": \"Heystack is a SIP-010-compliant fungible token on the Stacks Blockchain, used on the Heystack app\",\n \"image_uri\": \"https://heystack.xyz/assets/Stacks128w.png\",\n \"image_canonical_uri\": \"https://heystack.xyz/assets/Stacks128w.png\",\n \"tx_id\": \"0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0\",\n \"sender_address\": \"ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA\",\n \"symbol\": \"HEY\",\n \"decimals\": 5\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"16d419a5-2725-4b3a-8dd1-e55f552283b6","name":"Info","description":{"content":"Read-only endpoints to obtain network, Proof-of-Transfer, Stacking, STX token, and node information","type":"text/plain"},"item":[{"id":"5ff6bc29-033d-4cf2-87ff-98e57c9e76cc","name":"Get Core API info","request":{"name":"Get Core API info","description":{"content":"Retrieves information about the Core API including the server version","type":"text/plain"},"url":{"path":["v2","info"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"0789c560-233a-45d6-adbb-15f360986837","name":"Success","originalRequest":{"url":{"path":["v2","info"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"peer_version\": 385875968,\n \"pox_consensus\": \"17f76e597bab45646956f38dd39573085d72cbc0\",\n \"burn_block_height\": 16,\n \"stable_pox_consensus\": \"8e0561978fc5506b68a589c402dad97e862edb59\",\n \"stable_burn_block_height\": 15,\n \"server_version\": \"blockstack-core 0.0.1 => 23.0.0.0 (, release build, linux [x86_64])\",\n \"network_id\": 2147483648,\n \"parent_network_id\": 3669344250,\n \"stacks_tip_height\": 15,\n \"stacks_tip\": \"b1807a2d3f7f8c7922f7c1d60d7c34145ade05d789640dc7dc9ec1021e07bb54\",\n \"stacks_tip_consensus_hash\": \"17f76e597bab45646956f38dd39573085d72cbc0\",\n \"unanchored_tip\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n \"exit_at_block_height\": null\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"67750ca9-1610-4a14-b848-c72446384f87","name":"API status","request":{"name":"API status","description":{"content":"Retrieves the running status of the Stacks Blockchain API, including the server version and current chain tip information.","type":"text/plain"},"url":{"path":["extended","v1","status"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"df9a4d1a-5ad4-47fa-9d06-52e5b66b4bd9","name":"Success","originalRequest":{"url":{"path":["extended","v1","status"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"server_version\": \"stacks-blockchain-api v1.0.7 (master:77b25878)\",\n \"status\": \"ready\",\n \"chain_tip\": {\n  \"block_height\": 48902,\n  \"block_hash\": \"0xa5a2923c405f8356925213bb8c479beb06d3b68ca66dd2b7397b54f8c08c5eac\",\n  \"index_block_hash\": \"0xf46401bf3cb6a6b6181536b7de414a1fd9e004a6ece99a05de72a781b17f9819\",\n  \"microblock_hash\": \"0xec89a572d3583b959e490bc45e0f521b775ed51d7ed13087b6df8eb82cbe75d3\",\n  \"microblock_sequence\": 0\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"5ea47a4c-b515-4281-afbb-d4f47e2f3f28","name":"Get the network target block time","request":{"name":"Get the network target block time","description":{"content":"Retrieves the target block times for mainnet and testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.","type":"text/plain"},"url":{"path":["extended","v1","info","network_block_times"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"82529bc0-58ff-494a-afbc-ad912f424ac9","name":"Success","originalRequest":{"url":{"path":["extended","v1","info","network_block_times"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"testnet\": {\n  \"target_block_time\": 120\n },\n \"mainnet\": {\n  \"target_block_time\": 600\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"d7b0f495-bf6a-4c73-95d0-6ed0676e975a","name":"Get a given network's target block time","request":{"name":"Get a given network's target block time","description":{"content":"Retrieves the target block time for a given network. The network can be mainnet or testnet. The block time is hardcoded and will change throughout the implementation phases of the testnet.","type":"text/plain"},"url":{"path":["extended","v1","info","network_block_time",":network"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"mainnet","key":"network","description":"(Required) the target block time for a given network (testnet, mainnet)."}]},"method":"GET","auth":null},"response":[{"id":"35824676-c3de-4e55-a0bb-a520f4bb71ec","name":"Success","originalRequest":{"url":{"path":["extended","v1","info","network_block_time",":network"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"mainnet","key":"network","description":"(Required) the target block time for a given network (testnet, mainnet)."}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"target_block_time\": 600\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"a08f208b-b0bb-41ad-8b77-fe8e47a9cb53","name":"Get total and unlocked STX supply","request":{"name":"Get total and unlocked STX supply","description":{"content":"Retrieves the total and unlocked STX supply. More information on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking).\n**Note:** This uses the estimated future total supply for the year 2050.\n","type":"text/plain"},"url":{"path":["extended","v1","stx_supply"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"height","value":"200","description":"Supply details are queried from specified block height. If the block height is not specified, the latest block height is taken as default value. Note that the `block height` is referred to the stacks blockchain."}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"1ed74bb5-9bda-487b-baba-798a51168cb1","name":"Success","originalRequest":{"url":{"path":["extended","v1","stx_supply"],"host":["{{baseUrl}}"],"query":[{"key":"height","value":"200"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"unlocked_percent\": \"71.99\",\n \"total_stx\": \"1352464600.000000\",\n \"unlocked_stx\": \"973705260.219817\",\n \"block_height\": 3210\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"f5f8db54-1246-4a22-9bac-70a0d9ac1d62","name":"Get total STX supply in plain text format","request":{"name":"Get total STX supply in plain text format","description":{"content":"Retrieves the total supply for STX tokens as plain text.\n**Note:** this uses the estimated future total supply for the year 2050.\n","type":"text/plain"},"url":{"path":["extended","v1","stx_supply","total","plain"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"fbc05f65-6a4f-4f36-8e68-5a4db6dbd88e","name":"success","originalRequest":{"url":{"path":["extended","v1","stx_supply","total","plain"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"123.456789","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"4a6188ac-0222-4124-8d9e-899b95557fce","name":"Get circulating STX supply in plain text format","request":{"name":"Get circulating STX supply in plain text format","description":{"content":"Retrieves the STX tokens currently in circulation that have been unlocked as plain text.","type":"text/plain"},"url":{"path":["extended","v1","stx_supply","circulating","plain"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"2dc9e49f-daf0-4248-b8e3-ee20e9d0a323","name":"success","originalRequest":{"url":{"path":["extended","v1","stx_supply","circulating","plain"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"123.456789","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"f1f7ac1b-e6b9-43b5-b4b4-b2fb7f36f502","name":"Get total and unlocked STX supply (results formatted the same as the legacy 1.0 API)","request":{"name":"Get total and unlocked STX supply (results formatted the same as the legacy 1.0 API)","description":{"content":"Retrieves total supply of STX tokens including those currently in circulation that have been unlocked.\n**Note:** this uses the estimated future total supply for the year 2050.\n","type":"text/plain"},"url":{"path":["extended","v1","stx_supply","legacy_format"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"height","value":"200","description":"Supply details are queried from specified block height. If the block height is not specified, the latest block height is taken as default value."}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"14181e03-ec09-45f1-abf8-8e7e07677b73","name":"Success","originalRequest":{"url":{"path":["extended","v1","stx_supply","legacy_format"],"host":["{{baseUrl}}"],"query":[{"key":"height","value":"200"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"unlockedPercent\": \"71.99\",\n \"totalStacks\": \"1352464600.000000\",\n \"totalStacksFormatted\": \"1,352,464,600.000000\",\n \"unlockedSupply\": \"973705260.219817\",\n \"unlockedSupplyFormatted\": \"973,705,260.219817\",\n \"blockHeight\": \"665746\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"6381d7df-3b09-4a47-b484-056bd1d7017e","name":"Get Proof-of-Transfer details","request":{"name":"Get Proof-of-Transfer details","description":{"content":"Retrieves Proof-of-Transfer (PoX) information. Can be used for Stacking.","type":"text/plain"},"url":{"path":["v2","pox"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"5a4f2dbd-3665-48d1-9775-bedc64ab8d3e","name":"Success","originalRequest":{"url":{"path":["v2","pox"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"contract_id\": \"SP000000000000000000002Q6VF78.pox\",\n \"pox_activation_threshold_ustx\": 67694186237302,\n \"first_burnchain_block_height\": 666050,\n \"prepare_phase_block_length\": 100,\n \"reward_phase_block_length\": 2000,\n \"reward_slots\": 4000,\n \"rejection_fraction\": 25,\n \"total_liquid_supply_ustx\": 1353883724746042,\n \"current_cycle\": {\n  \"id\": 50,\n  \"min_threshold_ustx\": 100000000000,\n  \"stacked_ustx\": 391056240478955,\n  \"is_pox_active\": true\n },\n \"next_cycle\": {\n  \"id\": 51,\n  \"min_threshold_ustx\": 90000000000,\n  \"min_increment_ustx\": 67694186237,\n  \"stacked_ustx\": 350473977597161,\n  \"prepare_phase_start_block_height\": 773050,\n  \"blocks_until_prepare_phase\": 227,\n  \"reward_phase_start_block_height\": 773150,\n  \"blocks_until_reward_phase\": 327,\n  \"ustx_until_pox_rejection\": 338470931186500\n },\n \"min_amount_ustx\": 90000000000,\n \"prepare_cycle_length\": 100,\n \"reward_cycle_id\": 50,\n \"reward_cycle_length\": 2100,\n \"rejection_votes_left_required\": 338470931186500,\n \"next_reward_cycle_in\": 327\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"36a3ac5e-2c42-4ba7-99eb-21d24324472a","name":"Microblocks","description":{"content":"Read-only endpoints to obtain microblocks details","type":"text/plain"},"item":[{"id":"92e954f5-f21d-49fb-a3da-27c9b9350b6e","name":"Get recent microblocks","request":{"name":"Get recent microblocks","description":{"content":"Retrieves a list of microblocks.\n\nIf you need to actively monitor new microblocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.\n","type":"text/plain"},"url":{"path":["extended","v1","microblock"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"100","description":"Max number of microblocks to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"Index of the first microblock to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"1744921f-ead8-4917-aa85-58316bd5a90c","name":"List of microblocks","originalRequest":{"url":{"path":["extended","v1","microblock"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"100"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"results\": [\n  {\n   \"canonical\": true,\n   \"microblock_canonical\": false,\n   \"microblock_hash\": \"Duis nulla elit\",\n   \"microblock_sequence\": -76113242,\n   \"microblock_parent_hash\": \"in tempor irure culpa\",\n   \"block_height\": 9301697,\n   \"parent_block_height\": 47118183,\n   \"parent_block_hash\": \"sed consequat commodo dolore in\",\n   \"block_hash\": \"laborum sunt magna velit\",\n   \"txs\": [\n    \"laborum sed consectetur dolor\",\n    \"sit quis reprehenderit fugiat\"\n   ],\n   \"parent_burn_block_time\": 93156216,\n   \"parent_burn_block_time_iso\": \"labore in\",\n   \"parent_burn_block_hash\": \"Lorem dolor consequat ullamco\",\n   \"parent_burn_block_height\": -79133623\n  },\n  {\n   \"canonical\": false,\n   \"microblock_canonical\": false,\n   \"microblock_hash\": \"sunt\",\n   \"microblock_sequence\": -22397595,\n   \"microblock_parent_hash\": \"quis \",\n   \"block_height\": -4860741,\n   \"parent_block_height\": 95176570,\n   \"parent_block_hash\": \"de\",\n   \"block_hash\": \"enim mollit\",\n   \"txs\": [\n    \"mollit incididunt ex adipisicing\",\n    \"consequat non\"\n   ],\n   \"parent_burn_block_time\": -26605925,\n   \"parent_burn_block_time_iso\": \"laborum\",\n   \"parent_burn_block_hash\": \"incididunt veniam laborum est\",\n   \"parent_burn_block_height\": 13601077\n  }\n ],\n \"limit\": -26248152,\n \"offset\": 0,\n \"total\": -60567210\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"213486e0-79e8-4de4-91cd-8f40fde2e192","name":"Get microblock","request":{"name":"Get microblock","description":{"content":"Retrieves a specific microblock by `hash`","type":"text/plain"},"url":{"path":["extended","v1","microblock",":hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x3bfcdf84b3012adb544cf0f6df4835f93418c2269a3881885e27b3d58eb82d47","key":"hash","description":"(Required) Hash of the microblock"}]},"method":"GET","auth":null},"response":[{"id":"ce50b284-bfa3-4ffb-8b72-0c467bb0e826","name":"Microblock","originalRequest":{"url":{"path":["extended","v1","microblock",":hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x3bfcdf84b3012adb544cf0f6df4835f93418c2269a3881885e27b3d58eb82d47","key":"hash","description":"(Required) Hash of the microblock"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"canonical\": false,\n \"microblock_canonical\": false,\n \"microblock_hash\": \"eiusmod\",\n \"microblock_sequence\": 86130273,\n \"microblock_parent_hash\": \"ad\",\n \"block_height\": 76427516,\n \"parent_block_height\": -41868897,\n \"parent_block_hash\": \"consectetur et\",\n \"block_hash\": \"non sunt et\",\n \"txs\": [\n  \"eiusmod ad nulla Ut magna\",\n  \"dolore ad\"\n ],\n \"parent_burn_block_time\": 97858098,\n \"parent_burn_block_time_iso\": \"repreh\",\n \"parent_burn_block_hash\": \"laboris eu ipsum in\",\n \"parent_burn_block_height\": -22755201\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"0a9bd64b-d05f-4439-a1b6-3e4b176aa738","name":"Cannot find microblock with given hash","originalRequest":{"url":{"path":["extended","v1","microblock",":hash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x3bfcdf84b3012adb544cf0f6df4835f93418c2269a3881885e27b3d58eb82d47","key":"hash","description":"(Required) Hash of the microblock"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"cannot find microblock by hash 0xabc123\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"cd63a3a4-4fa5-48de-9907-ca00942d8fd1","name":"Get the list of current transactions that belong to unanchored microblocks","request":{"name":"Get the list of current transactions that belong to unanchored microblocks","description":{"content":"Retrieves transactions that have been streamed in microblocks but not yet accepted or rejected in an anchor block","type":"text/plain"},"url":{"path":["extended","v1","microblock","unanchored","txs"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"70b13797-0cae-4e71-b179-8141de18f987","name":"Transactions","originalRequest":{"url":{"path":["extended","v1","microblock","unanchored","txs"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"results\": [],\n \"total\": -40630163\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"69dc4152-9050-4fa6-bb7a-2761e630b955","name":"Names","description":{"content":"Read-only endpoints realted to the Blockchain Naming System on Stacks","type":"text/plain"},"item":[{"id":"a2108dc7-b7df-4dd7-93b1-0b6bb54d1f6c","name":"Get Namespace Price","request":{"name":"Get Namespace Price","description":{"content":"Retrieves the price of a namespace. The `amount` given will be in the smallest possible units of the currency.","type":"text/plain"},"url":{"path":["v2","prices","namespaces",":tld"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"id","key":"tld","description":"(Required) the namespace to fetch price for"}]},"method":"GET","auth":null},"response":[{"id":"9d653c82-f940-4b12-bc61-ef1b0668babc","name":"Success","originalRequest":{"url":{"path":["v2","prices","namespaces",":tld"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"id","key":"tld","description":"(Required) the namespace to fetch price for"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"units\": \"Ut\",\n \"amount\": \"250\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"4338cf13-a0a3-4068-a660-0e5e0dc986ae","name":"Get Name Price","request":{"name":"Get Name Price","description":{"content":"Retrieves the price of a name. The `amount` given will be in the smallest possible units of the currency.","type":"text/plain"},"url":{"path":["v2","prices","names",":name"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) the name to query price information for"}]},"method":"GET","auth":null},"response":[{"id":"d8df3f0f-6900-4992-b463-1e90ffee08a7","name":"Success","originalRequest":{"url":{"path":["v2","prices","names",":name"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) the name to query price information for"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"units\": \"irure in\",\n \"amount\": \"8\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"2c748798-9711-4502-a305-8b33c64c2f0c","name":"Get All Namespaces","request":{"name":"Get All Namespaces","description":{"content":"Retrieves a list of all namespaces known to the node.","type":"text/plain"},"url":{"path":["v1","namespaces"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"8b961d7b-9bac-4ce8-af93-fd53678b2b69","name":"Success","originalRequest":{"url":{"path":["v1","namespaces"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"namespaces\": [\n  \"id\",\n  \"helloworld\",\n  \"podcast\",\n  \"graphite\",\n  \"blockstack\"\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"2eee2bd8-9a5e-4a51-b498-939104fc4e1b","name":"Get Namespace Names","request":{"name":"Get Namespace Names","description":{"content":"Retrieves a list of names within a given namespace.","type":"text/plain"},"url":{"path":["v1","namespaces",":tld","names"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"page","value":"22","description":"namespace values are defaulted to page 1 with 100 results. You can query specific page results by using the 'page' query parameter."}],"variable":[{"disabled":false,"type":"any","value":"id","key":"tld","description":"(Required) the namespace to fetch names from."}]},"method":"GET","auth":null},"response":[{"id":"e122eae8-c2d6-4774-9400-2c8917131a97","name":"Success","originalRequest":{"url":{"path":["v1","namespaces",":tld","names"],"host":["{{baseUrl}}"],"query":[{"key":"page","value":"22"}],"variable":[{"disabled":false,"type":"any","value":"id","key":"tld","description":"(Required) the namespace to fetch names from."}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"[\n \"aldenquimby.id\",\n \"aldeoryn.id\",\n \"alderete.id\",\n \"aldert.id\",\n \"aldi.id\",\n \"aldighieri.id\"\n]","cookie":[],"_postman_previewlanguage":"json"},{"id":"964663ea-3611-46c8-8b21-eee244bb85d2","name":"Error","originalRequest":{"url":{"path":["v1","namespaces",":tld","names"],"host":["{{baseUrl}}"],"query":[{"key":"page","value":"22"}],"variable":[{"disabled":false,"type":"any","value":"id","key":"tld","description":"(Required) the namespace to fetch names from."}]},"method":"GET","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"Invalid page\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"46280572-228d-4457-86eb-271c01e9f219","name":"Error","originalRequest":{"url":{"path":["v1","namespaces",":tld","names"],"host":["{{baseUrl}}"],"query":[{"key":"page","value":"22"}],"variable":[{"disabled":false,"type":"any","value":"id","key":"tld","description":"(Required) the namespace to fetch names from."}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"No such namespace\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"6c6dac6c-5558-42d5-88fa-bdad6a23b640","name":"Get All Names","request":{"name":"Get All Names","description":{"content":"Retrieves a list of all names known to the node.","type":"text/plain"},"url":{"path":["v1","names"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"page","value":"22","description":"names are defaulted to page 1 with 100 results. You can query specific page results by using the 'page' query parameter."}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"2b1da5a2-2450-4aef-9ce7-ff27b9bd835e","name":"Success","originalRequest":{"url":{"path":["v1","names"],"host":["{{baseUrl}}"],"query":[{"key":"page","value":"22"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"[\n \"aldenquimby.id\",\n \"aldeoryn.id\",\n \"alderete.id\",\n \"aldert.id\",\n \"aldi.id\",\n \"aldighieri.id\"\n]","cookie":[],"_postman_previewlanguage":"json"},{"id":"0df9e1ac-3c8e-4073-9a74-7be36da5c37d","name":"Error","originalRequest":{"url":{"path":["v1","names"],"host":["{{baseUrl}}"],"query":[{"key":"page","value":"22"}],"variable":[]},"method":"GET","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"Invalid page\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"83a753c8-297e-495b-bb52-2cfcc1b8ceff","name":"Get Name Details","request":{"name":"Get Name Details","description":{"content":"Retrieves details of a given name including the `address`, `status` and last transaction id - `last_txid`.","type":"text/plain"},"url":{"path":["v1","names",":name"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","auth":null},"response":[{"id":"0a3075ea-bc53-4a9d-84f6-f15c4c1d9c20","name":"Success","originalRequest":{"url":{"path":["v1","names",":name"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"address\": \"1J3PUxY5uDShUnHRrMyU6yKtoHEUPhKULs\",\n \"blockchain\": \"bitcoin\",\n \"expire_block\": 599266,\n \"grace_period\": false,\n \"last_txid\": \"1edfa419f7b83f33e00830bc9409210da6c6d1db60f99eda10c835aa339cad6b\",\n \"renewal_deadline\": 604266,\n \"resolver\": null,\n \"status\": \"registered\",\n \"zonefile\": \"$ORIGIN muneeb.id\\n$TTL 3600\\n_http._tcp IN URI 10 1 \\\"https://gaia.blockstack.org/hub/1J3PUxY5uDShUnHRrMyU6yKtoHEUPhKULs/0/profile.json\\\"\\n\",\n \"zonefile_hash\": \"37aecf837c6ae9bdc9dbd98a268f263dacd00361\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"8906c319-69a5-407a-b621-885f03a45929","name":"Error","originalRequest":{"url":{"path":["v1","names",":name"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"Invalid name or subdomain\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"745944a6-7168-47e5-abe6-0a87cee15131","name":"Error","originalRequest":{"url":{"path":["v1","names",":name"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"No such name\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"6f9355da-547a-43ee-8fb5-f84fc6f4f254","name":"Get Name Subdomains","request":{"name":"Get Name Subdomains","description":{"content":"Retrieves the list of subdomains for a specific name","type":"text/plain"},"url":{"path":["v1","names",":name","subdomains"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"id.blockstack","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","auth":null},"response":[{"id":"92da7ffb-963e-475f-9f98-4bbb3e83dc53","name":"Success","originalRequest":{"url":{"path":["v1","names",":name","subdomains"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"id.blockstack","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"[\n \"address_test.id.blockstack\",\n \"previous_subdomain.id.blockstack\",\n \"subdomain.id.blockstack\",\n \"zonefile_test.id.blockstack\",\n \"zone_test.id.blockstack\"\n]","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"6bccecb5-3930-48d2-b014-058f66d39e91","name":"Get Zone File","request":{"name":"Get Zone File","description":{"content":"Retrieves a user’s raw zone file. This only works for RFC-compliant zone files. This method returns an error for names that have non-standard zone files.","type":"text/plain"},"url":{"path":["v1","names",":name","zonefile"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"bar.test","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","auth":null},"response":[{"id":"3f2b09d8-44d4-4740-acc8-d284490932fa","name":"Success","originalRequest":{"url":{"path":["v1","names",":name","zonefile"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"bar.test","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"zonefile\": \"$ORIGIN bar.test\\n$TTL 3600\\n_https._tcp URI 10 1 \\\"https://gaia.blockstack.org/hub/17Zijx61Sp7SbVfRTdETo7PhizJHYEUxbY/profile.json\\\"\\n\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"8fc7e345-3db0-411c-bac9-321a685b014e","name":"Error","originalRequest":{"url":{"path":["v1","names",":name","zonefile"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"bar.test","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"Invalid name or subdomain\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"49f9dcb0-3217-4c4b-aa38-c07f946a4e11","name":"Error","originalRequest":{"url":{"path":["v1","names",":name","zonefile"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"bar.test","key":"name","description":"(Required) fully-qualified name"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"No zone file for name\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"a52877a0-9109-4e3b-961f-74af35c28685","name":"Get Historical Zone File","request":{"name":"Get Historical Zone File","description":{"content":"Retrieves the historical zonefile specified by the username and zone hash.","type":"text/plain"},"url":{"path":["v1","names",":name","zonefile",":zoneFileHash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"},{"disabled":false,"type":"any","value":"b100a68235244b012854a95f9114695679002af9","key":"zoneFileHash","description":"(Required) zone file hash"}]},"method":"GET","auth":null},"response":[{"id":"e3ad361e-b89d-4c32-b9e7-fc93f78dfffe","name":"Success","originalRequest":{"url":{"path":["v1","names",":name","zonefile",":zoneFileHash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"},{"disabled":false,"type":"any","value":"b100a68235244b012854a95f9114695679002af9","key":"zoneFileHash","description":"(Required) zone file hash"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"title\": \"BnsFetchHistoricalZoneFileResponse\",\n \"description\": \"Fetches the historical zonefile specified by the username and zone hash.\",\n \"anyOf\": [\n  {\n   \"type\": \"object\",\n   \"properties\": {\n    \"zonefile\": {\n     \"type\": \"string\"\n    }\n   }\n  },\n  {\n   \"type\": \"object\",\n   \"properties\": {\n    \"error\": {\n     \"type\": \"string\"\n    }\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"4a8afb8c-8fd8-4def-aca9-47138850b79f","name":"Error","originalRequest":{"url":{"path":["v1","names",":name","zonefile",":zoneFileHash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"},{"disabled":false,"type":"any","value":"b100a68235244b012854a95f9114695679002af9","key":"zoneFileHash","description":"(Required) zone file hash"}]},"method":"GET","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"Invalid name or subdomain\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"8de0c5f2-4bd8-4c42-b0fb-32eb57fc6d80","name":"Error","originalRequest":{"url":{"path":["v1","names",":name","zonefile",":zoneFileHash"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"muneeb.id","key":"name","description":"(Required) fully-qualified name"},{"disabled":false,"type":"any","value":"b100a68235244b012854a95f9114695679002af9","key":"zoneFileHash","description":"(Required) zone file hash"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"No zone file for name\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"a9357c3e-b48d-4771-ae6d-7f66add88763","name":"Get Names Owned by Address","request":{"name":"Get Names Owned by Address","description":{"content":"Retrieves a list of names owned by the address provided.","type":"text/plain"},"url":{"path":["v1","addresses",":blockchain",":address"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"bitcoin","key":"blockchain","description":"(Required) the layer-1 blockchain for the address"},{"disabled":false,"type":"any","value":"1QJQxDas5JhdiXhEbNS14iNjr8auFT96GP","key":"address","description":"(Required) the address to lookup"}]},"method":"GET","auth":null},"response":[{"id":"77f25b59-0556-41a2-940b-439b9e22e4c0","name":"Success","originalRequest":{"url":{"path":["v1","addresses",":blockchain",":address"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"bitcoin","key":"blockchain","description":"(Required) the layer-1 blockchain for the address"},{"disabled":false,"type":"any","value":"1QJQxDas5JhdiXhEbNS14iNjr8auFT96GP","key":"address","description":"(Required) the address to lookup"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"names\": [\n  \"muneeb.id\"\n ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"bb4601a4-f406-4b38-9ea3-0972d9cb1ad1","name":"Error","originalRequest":{"url":{"path":["v1","addresses",":blockchain",":address"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"bitcoin","key":"blockchain","description":"(Required) the layer-1 blockchain for the address"},{"disabled":false,"type":"any","value":"1QJQxDas5JhdiXhEbNS14iNjr8auFT96GP","key":"address","description":"(Required) the address to lookup"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"Unsupported blockchain\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"aee59471-ea1c-4e0a-8d4f-97a9d22d1777","name":"Non-Fungible Tokens","description":{"content":"Read-only endpoints to obtain non-fungible token details","type":"text/plain"},"item":[{"id":"7dbda234-8442-4391-9982-a369b01b097f","name":"Non-Fungible Token holdings","request":{"name":"Non-Fungible Token holdings","description":{"content":"Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID).\nResults can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.\n\nMore information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n","type":"text/plain"},"url":{"path":["extended","v1","tokens","nft","holdings"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"principal","value":"SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v3","description":"(Required) token owner's STX address or Smart Contract ID"},{"disabled":false,"key":"asset_identifiers","value":"fugiat non ex","description":"identifiers of the token asset classes to filter for"},{"disabled":false,"key":"asset_identifiers","value":"amet officia quis","description":"identifiers of the token asset classes to filter for"},{"disabled":false,"key":"limit","value":"50","description":"max number of tokens to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first tokens to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"whether or not to include tokens from unconfirmed transactions"},{"disabled":false,"key":"tx_metadata","value":"false","description":"whether or not to include the complete transaction metadata instead of just `tx_id`. Enabling this option can affect performance and response times."}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"4b0951b1-770a-4388-9a9c-c77fc31e79de","name":"List of Non-Fungible Token holdings","originalRequest":{"url":{"path":["extended","v1","tokens","nft","holdings"],"host":["{{baseUrl}}"],"query":[{"key":"principal","value":"SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v3"},{"key":"asset_identifiers","value":"sit occaecat in ea"},{"key":"asset_identifiers","value":"et aute"},{"key":"limit","value":"50"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"},{"key":"tx_metadata","value":"false"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 50,\n \"offset\": 0,\n \"total\": 3,\n \"results\": [\n  {\n   \"asset_identifier\": \"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild\",\n   \"value\": {\n    \"hex\": \"0x0100000000000000000000000000000803\",\n    \"repr\": \"u2051\"\n   },\n   \"block_height\": 36442,\n   \"tx_id\": \"0x12e6f88724d0e630de26c376f172cf1781e25435e2b4ee54d36a949b244e429c\"\n  },\n  {\n   \"asset_identifier\": \"SP2BE8TZATXEVPGZ8HAFZYE5GKZ02X0YDKAN7ZTGW.arties::arties\",\n   \"value\": {\n    \"hex\": \"0x01000000000000000000000000000004f3\",\n    \"repr\": \"u1267\"\n   },\n   \"block_height\": 37477,\n   \"tx_id\": \"0xddc464c5e20a78dc5ac351913e0d9b9cce76fc955cc4599e0cccad960998f130\"\n  },\n  {\n   \"asset_identifier\": \"SP000000000000000000002Q6VF78.bns::names\",\n   \"value\": {\n    \"hex\": \"0x0c00000002046e616d65020000000672616661656c096e616d6573706163650200000003627463\",\n    \"repr\": \"(tuple (name 0x72616661656c) (namespace 0x627463))\"\n   },\n   \"block_height\": 17250,\n   \"tx_id\": \"0x0153a41ed24a0e1d32f66ea98338df09f942571ca66359e28bdca79ccd0305cf\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"49ac1eff-3a35-4a55-8b18-7465461cb5ee","name":"Non-Fungible Token history","request":{"name":"Non-Fungible Token history","description":{"content":"Retrieves all events relevant to a Non-Fungible Token. Useful to determine the ownership history of a particular asset.\n\nMore information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n","type":"text/plain"},"url":{"path":["extended","v1","tokens","nft","history"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"asset_identifier","value":"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild","description":"(Required) token asset class identifier"},{"disabled":false,"key":"value","value":"0x0100000000000000000000000000000803","description":"(Required) hex representation of the token's unique value"},{"disabled":false,"key":"limit","value":"50","description":"max number of events to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first event to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"whether or not to include events from unconfirmed transactions"},{"disabled":false,"key":"tx_metadata","value":"false","description":"whether or not to include the complete transaction metadata instead of just `tx_id`. Enabling this option can affect performance and response times."}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"7d572cc0-64df-4ab4-a707-c0068c797107","name":"Non-Fungible Token event history","originalRequest":{"url":{"path":["extended","v1","tokens","nft","history"],"host":["{{baseUrl}}"],"query":[{"key":"asset_identifier","value":"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild"},{"key":"value","value":"0x0100000000000000000000000000000803"},{"key":"limit","value":"50"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"},{"key":"tx_metadata","value":"false"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 50,\n \"offset\": 0,\n \"total\": 2,\n \"results\": [\n  {\n   \"sender\": \"SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3\",\n   \"recipient\": \"SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v4\",\n   \"event_index\": 0,\n   \"asset_event_type\": \"transfer\",\n   \"tx_id\": \"0x4510e6cff6414747f402126b92e35d90165f9f5e1f2750f50ed2b8e052b25108\"\n  },\n  {\n   \"sender\": null,\n   \"recipient\": \"SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3\",\n   \"event_index\": 1,\n   \"asset_event_type\": \"mint\",\n   \"tx_id\": \"0x3ab1ac33ba0a4fb473ee5a2e9d73208a7aceef2d40fea283e3126bda61524ad0\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"0f259507-e902-47aa-9838-703764c80f70","name":"Non-Fungible Token mints","request":{"name":"Non-Fungible Token mints","description":{"content":"Retrieves all mint events for a Non-Fungible Token asset class. Useful to determine which NFTs of a particular collection have been claimed.\n\nMore information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n","type":"text/plain"},"url":{"path":["extended","v1","tokens","nft","mints"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"asset_identifier","value":"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild","description":"(Required) token asset class identifier"},{"disabled":false,"key":"limit","value":"50","description":"max number of events to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first event to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"whether or not to include events from unconfirmed transactions"},{"disabled":false,"key":"tx_metadata","value":"false","description":"whether or not to include the complete transaction metadata instead of just `tx_id`. Enabling this option can affect performance and response times."}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"57111cac-04a1-4b40-b9fd-3ed95449f1c2","name":"Non-Fungible Token mints","originalRequest":{"url":{"path":["extended","v1","tokens","nft","mints"],"host":["{{baseUrl}}"],"query":[{"key":"asset_identifier","value":"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild"},{"key":"limit","value":"50"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"},{"key":"tx_metadata","value":"false"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 5,\n \"offset\": 0,\n \"total\": 2503,\n \"results\": [\n  {\n   \"recipient\": \"SP25KJH4N4YNKTVXSWSHDPVCWDFAN2BA4H2VQVN0G\",\n   \"event_index\": 1,\n   \"value\": {\n    \"hex\": \"0x01000000000000000000000000000009c7\",\n    \"repr\": \"u2503\"\n   },\n   \"tx_id\": \"0xd5c199447bc5f08d1821350455f4c103ad769976c7a6b745182782d53b5c7922\"\n  },\n  {\n   \"recipient\": \"SPZGN4KG2AKNNPEWVXXB6EWN1W9WV1JWMGBVVNK3\",\n   \"event_index\": 1,\n   \"value\": {\n    \"hex\": \"0x01000000000000000000000000000009c5\",\n    \"repr\": \"u2501\"\n   },\n   \"tx_id\": \"0x3ab1ac33ba0a4fb473ee5a2e9d73208a7aceef2d40fea283e3126bda61524ad0\"\n  },\n  {\n   \"recipient\": \"SPYZ2K1ZTG8NGKNY8VCX8NDKCGCCE9WZT85AGQR\",\n   \"event_index\": 1,\n   \"value\": {\n    \"hex\": \"0x01000000000000000000000000000009c6\",\n    \"repr\": \"u2502\"\n   },\n   \"tx_id\": \"0xaaff669db77380600b069fbd3ba481e5764e3672246f952bdd976cd3528019e8\"\n  },\n  {\n   \"recipient\": \"SP2EV985DXEHEB2FKW3Z642R0QWQGXTRDYXNRVCYY\",\n   \"event_index\": 1,\n   \"value\": {\n    \"hex\": \"0x01000000000000000000000000000009b6\",\n    \"repr\": \"u2486\"\n   },\n   \"tx_id\": \"0xc416218ed09e2252888a620d89a5e8fdff43188c1c4ef46b6bbc4e1901609ef6\"\n  },\n  {\n   \"recipient\": \"SPP1VDQKF2H90QZVRBN0K6Z90EKES9NSMYKXHVGH\",\n   \"event_index\": 9,\n   \"value\": {\n    \"hex\": \"0x01000000000000000000000000000009bb\",\n    \"repr\": \"u2491\"\n   },\n   \"tx_id\": \"0xbd272748e0d632f8122126f8b000fa0f84c96f464e6fb91b03bb8b9c5c12ed12\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"b2542410-ba72-4169-82e1-cbedcbbc7c78","name":"Non fungible tokens metadata list","request":{"name":"Non fungible tokens metadata list","description":{"content":"**NOTE:** This endpoint is deprecated in favor of the [Token Metadata Service](https://github.com/hirosystems/token-metadata-service).\n\nRetrieves a list of non fungible tokens with their metadata. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n","type":"text/plain"},"url":{"path":["extended","v1","tokens","nft","metadata"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"1","description":"max number of tokens to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first tokens to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"b074cd07-313a-4ae8-a9a7-8e7327c6ffb7","name":"List of non fungible tokens metadata","originalRequest":{"url":{"path":["extended","v1","tokens","nft","metadata"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"1"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 1,\n \"offset\": 0,\n \"total\": 500,\n \"results\": [\n  {\n   \"token_uri\": \"https://pool.friedger.de/nft.json\",\n   \"name\": \"Friedger Pool\",\n   \"description\": \"Enjoying the stacking pool.\",\n   \"image_uri\": \"https://pool.friedger.de/nft.webp\",\n   \"image_canonical_uri\": \"https://pool.friedger.de/nft.webp\",\n   \"tx_id\": \"0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0\",\n   \"sender_address\": \"ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"efc1b517-1225-46ce-bcc2-7598d9547eca","name":"Non fungible tokens metadata for contract ID","request":{"name":"Non fungible tokens metadata for contract ID","description":{"content":"**NOTE:** This endpoint is deprecated in favor of the [Token Metadata Service](https://github.com/hirosystems/token-metadata-service).\n\nRetrieves metadata for non fungible tokens for a given contract id. More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n","type":"text/plain"},"url":{"path":["extended","v1","tokens",":contractId","nft","metadata"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"occaecat consequat laboris","key":"contractId","description":"(Required) token's contract id"}]},"method":"GET","auth":null},"response":[{"id":"18f0db3a-1fe4-441a-b7b2-5d5317755f04","name":"Non fungible tokens metadata for contract id","originalRequest":{"url":{"path":["extended","v1","tokens",":contractId","nft","metadata"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"occaecat consequat laboris","key":"contractId","description":"(Required) token's contract id"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"token_uri\": \"https://pool.friedger.de/nft.json\",\n \"name\": \"Friedger Pool\",\n \"description\": \"Enjoying the stacking pool.\",\n \"image_uri\": \"https://pool.friedger.de/nft.webp\",\n \"image_canonical_uri\": \"https://pool.friedger.de/nft.webp\",\n \"tx_id\": \"0xef2ac1126e16f46843228b1dk4830e19eb7599129e4jf392cab9e65ae83a45c0\",\n \"sender_address\": \"ST399W7Z9WS0GMSNQGJGME5JAENKN56D65VGMGKGA\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"433717d1-a30b-4cc2-9e71-9b784dba9291","name":"Rosetta","description":{"content":"Endpoints to support the Rosetta API open blockchain standard","type":"text/plain"},"item":[{"id":"480a6960-1a0b-47fd-9ea1-affe859084e6","name":"Get List of Available Networks","request":{"name":"Get List of Available Networks","description":{"content":"Retrieves a list of NetworkIdentifiers that the Rosetta server supports.","type":"text/plain"},"url":{"path":["rosetta","v1","network","list"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","auth":null},"response":[{"id":"5018924c-a66d-4a7e-b41b-7f195b4978e2","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","network","list"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"network_identifiers\": [\n  {\n   \"blockchain\": \"sed enim id dolore velit\",\n   \"network\": \"ut ex\",\n   \"sub_network_identifier\": {\n    \"network\": \"ipsum Excepteur veniam cupidatat eiusmod\",\n    \"metadata\": {\n     \"producer\": \"fugiat Ut v\"\n    }\n   }\n  },\n  {\n   \"blockchain\": \"in Ut ut\",\n   \"network\": \"elit voluptate Ut do\",\n   \"sub_network_identifier\": {\n    \"network\": \"ut velit esse\",\n    \"metadata\": {\n     \"producer\": \"occaecat\"\n    }\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"8257f51e-046c-48ca-b2b8-0b7423551640","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","network","list"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"3f6809fd-237d-44f8-95ee-0a9bfbbf23a5","name":"Get Network Options","request":{"name":"Get Network Options","description":{"content":"Retrieves the version information and allowed network-specific types for a NetworkIdentifier.\nAny NetworkIdentifier returned by /network/list should be accessible here.\nBecause options are retrievable in the context of a NetworkIdentifier, it is possible to define unique options for each network.\n","type":"text/plain"},"url":{"path":["rosetta","v1","network","options"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"response":[{"id":"cba6efaf-7a24-4c88-afe2-5afcb8a8f351","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","network","options"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"version\": {\n  \"rosetta_version\": \"ex qui culpa adipisicing proident\",\n  \"node_version\": \"mollit ullamco irure reprehenderit laboris\",\n  \"middleware_version\": \"adipisicing fugiat ut\",\n  \"metadata\": {}\n },\n \"allow\": {\n  \"operation_statuses\": [\n   {\n    \"status\": \"est Lorem mag\",\n    \"successful\": true\n   },\n   {\n    \"status\": \"occaecat fugiat consectetur Ut\",\n    \"successful\": true\n   }\n  ],\n  \"operation_types\": [\n   \"elit nisi non incididunt\",\n   \"si\"\n  ],\n  \"errors\": [\n   {\n    \"code\": -68243068,\n    \"message\": \"nostrud\",\n    \"retriable\": false\n   },\n   {\n    \"code\": -4860817,\n    \"message\": \"aliquip sunt velit minim\",\n    \"retriable\": true\n   }\n  ],\n  \"historical_balance_lookup\": false\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"820a96f2-3eb3-4b00-adfa-b47bff7b36cf","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","network","options"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"793eee9e-20f5-4341-b0ad-861585a6818b","name":"Get Network Status","request":{"name":"Get Network Status","description":{"content":"Retrieves the current status of the network requested.\nAny NetworkIdentifier returned by /network/list should be accessible here.\n","type":"text/plain"},"url":{"path":["rosetta","v1","network","status"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"response":[{"id":"1a2b62e9-5536-4365-9f70-67b9bd55d4af","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","network","status"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"current_block_identifier\": {},\n \"current_block_timestamp\": -24477557,\n \"genesis_block_identifier\": {\n  \"index\": 47026346,\n  \"hash\": \"nisi do non\"\n },\n \"peers\": [\n  {\n   \"peer_id\": \"exercitation culpa\",\n   \"metadata\": {}\n  },\n  {\n   \"peer_id\": \"dolor\",\n   \"metadata\": {}\n  }\n ],\n \"oldest_block_identifier\": {\n  \"index\": 93445044,\n  \"hash\": \"cupidatat dolor\"\n },\n \"sync_status\": {\n  \"current_index\": -17705678,\n  \"target_index\": 35339218,\n  \"stage\": \"ut sit dolore consectetur\",\n  \"synced\": false\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"78832fb9-ea28-493d-98f8-48c708a552ff","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","network","status"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"82ed10bb-a599-4615-9920-7da8adb4d4e7","name":"Get an Account Balance","request":{"name":"Get an Account Balance","description":{"content":"An AccountBalanceRequest is utilized to make a balance request on the /account/balance endpoint.\nIf the block_identifier is populated, a historical balance query should be performed.\n","type":"text/plain"},"url":{"path":["rosetta","v1","account","balance"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"account_identifier\": {\n        \"address\": \"SP2W6477BT5CRWVC5D5RFNPNAR8R2NW63SMMCAWMC\",\n        \"metadata\": {}\n    }\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"9720bfe6-3533-4a21-90ac-b5b9ca3a4f9a","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","account","balance"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"account_identifier\": {\n        \"address\": \"SP2W6477BT5CRWVC5D5RFNPNAR8R2NW63SMMCAWMC\",\n        \"metadata\": {}\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"block_identifier\": {},\n \"balances\": [\n  {\n   \"value\": \"ulla\",\n   \"currency\": {\n    \"symbol\": \"labore\",\n    \"decimals\": -2570053,\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  },\n  {\n   \"value\": \"eiusmod aute nulla tempor amet\",\n   \"currency\": {\n    \"symbol\": \"pariatur\",\n    \"decimals\": -82661226,\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  }\n ],\n \"coins\": [\n  {\n   \"coin_identifier\": {\n    \"identifier\": \"ullamco cillum\"\n   },\n   \"amount\": {\n    \"value\": \"ips\",\n    \"currency\": {\n     \"symbol\": \"sint esse\",\n     \"decimals\": -64831300,\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   }\n  },\n  {\n   \"coin_identifier\": {\n    \"identifier\": \"dolor elit\"\n   },\n   \"amount\": {\n    \"value\": \"id irure\",\n    \"currency\": {\n     \"symbol\": \"id eiusmod nisi proident\",\n     \"decimals\": 42495993,\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   }\n  }\n ],\n \"metadata\": {\n  \"sequence_number\": -53105555\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"6e7d32c6-9ff9-4c4f-b1e4-022cfc9d746f","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","account","balance"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"account_identifier\": {\n        \"address\": \"SP2W6477BT5CRWVC5D5RFNPNAR8R2NW63SMMCAWMC\",\n        \"metadata\": {}\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"1e7c1619-a6d5-48df-b359-f268c9d4d808","name":"Get a Block","request":{"name":"Get a Block","description":{"content":"Retrieves the Block information for a given block identifier including a list of all transactions in the block.","type":"text/plain"},"url":{"path":["rosetta","v1","block"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"block_identifier\": {\n        \"index\": 71107,\n        \"hash\": \"0xce7e16561150f3a379845f4e96c3dd8f8396e397495821c9eec6b429391c529c\"\n    }\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"7f8e7dd1-dcb9-4988-bfc4-1c198d312144","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","block"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"block_identifier\": {\n        \"index\": 71107,\n        \"hash\": \"0xce7e16561150f3a379845f4e96c3dd8f8396e397495821c9eec6b429391c529c\"\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"block\": {\n  \"block_identifier\": {},\n  \"parent_block_identifier\": {\n   \"index\": 55058955,\n   \"hash\": \"dolore nostru\"\n  },\n  \"timestamp\": -86409601,\n  \"transactions\": [\n   {\n    \"transaction_identifier\": {\n     \"hash\": \"in in\"\n    },\n    \"operations\": [\n     {\n      \"operation_identifier\": {\n       \"index\": 43256046,\n       \"network_index\": 12864691\n      },\n      \"type\": \"laborum sed ull\",\n      \"related_operations\": [\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"status\": \"veniam exercitation\",\n      \"account\": {\n       \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sub_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"amount\": {\n       \"value\": \"ut amet exercitation eiusmod ut\",\n       \"currency\": {\n        \"symbol\": \"eiusmod do nisi\",\n        \"decimals\": -82309136,\n        \"metadata\": {}\n       },\n       \"metadata\": {}\n      },\n      \"coin_change\": {\n       \"coin_identifier\": {\n        \"identifier\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"coin_action\": \"coin_spent\"\n      },\n      \"metadata\": {}\n     },\n     {\n      \"operation_identifier\": {\n       \"index\": -35453585,\n       \"network_index\": 19120638\n      },\n      \"type\": \"sit dolore culpa aliquip\",\n      \"related_operations\": [\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"status\": \"eiusmod do Lorem esse\",\n      \"account\": {\n       \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sub_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"amount\": {\n       \"value\": \"aute aliqua\",\n       \"currency\": {\n        \"symbol\": \"elit velit\",\n        \"decimals\": 88011638,\n        \"metadata\": {}\n       },\n       \"metadata\": {}\n      },\n      \"coin_change\": {\n       \"coin_identifier\": {\n        \"identifier\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"coin_action\": \"coin_created\"\n      },\n      \"metadata\": {}\n     }\n    ],\n    \"metadata\": {\n     \"memo\": \"mollit veniam elit dolore\",\n     \"size\": 74488492,\n     \"lockTime\": -23817622\n    }\n   },\n   {\n    \"transaction_identifier\": {\n     \"hash\": \"do ex labore\"\n    },\n    \"operations\": [\n     {\n      \"operation_identifier\": {\n       \"index\": -63219934,\n       \"network_index\": 3718813\n      },\n      \"type\": \"dolore ad\",\n      \"related_operations\": [\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"status\": \"ut nulla Lorem in esse\",\n      \"account\": {\n       \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sub_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"amount\": {\n       \"value\": \"consectetur\",\n       \"currency\": {\n        \"symbol\": \"Duis eu voluptate\",\n        \"decimals\": 99386255,\n        \"metadata\": {}\n       },\n       \"metadata\": {}\n      },\n      \"coin_change\": {\n       \"coin_identifier\": {\n        \"identifier\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"coin_action\": \"coin_spent\"\n      },\n      \"metadata\": {}\n     },\n     {\n      \"operation_identifier\": {\n       \"index\": -74412812,\n       \"network_index\": -92152898\n      },\n      \"type\": \"ut sunt exercitation dolor\",\n      \"related_operations\": [\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       {\n        \"index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"network_index\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       }\n      ],\n      \"status\": \"et adipisicing dolore enim cillum\",\n      \"account\": {\n       \"address\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"sub_account\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      },\n      \"amount\": {\n       \"value\": \"dolor eiusmod laboris\",\n       \"currency\": {\n        \"symbol\": \"in pariatur nostrud aute sint\",\n        \"decimals\": -35630228,\n        \"metadata\": {}\n       },\n       \"metadata\": {}\n      },\n      \"coin_change\": {\n       \"coin_identifier\": {\n        \"identifier\": {\n         \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n       },\n       \"coin_action\": \"coin_created\"\n      },\n      \"metadata\": {}\n     }\n    ],\n    \"metadata\": {\n     \"memo\": \"ad commodo ex anim amet\",\n     \"size\": 94944980,\n     \"lockTime\": 1390649\n    }\n   }\n  ],\n  \"metadata\": {\n   \"transactions_root\": \"adipisicing sit\",\n   \"difficulty\": \"mollit non i\"\n  }\n },\n \"other_transactions\": [\n  {\n   \"hash\": \"cillum sint eu nulla\"\n  },\n  {\n   \"hash\": \"est adipisicing labore consectetur\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"4b4aeb5e-6d56-456d-be96-39a86cf3ce9b","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","block"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"block_identifier\": {\n        \"index\": 71107,\n        \"hash\": \"0xce7e16561150f3a379845f4e96c3dd8f8396e397495821c9eec6b429391c529c\"\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"233d57e6-aeeb-44da-babc-28006a7faeeb","name":"Get a Block Transaction","request":{"name":"Get a Block Transaction","description":{"content":"Retrieves a Transaction included in a block that is not returned in a BlockResponse.","type":"text/plain"},"url":{"path":["rosetta","v1","block","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"block_identifier\": {\n        \"hash\": \"0xce7e16561150f3a379845f4e96c3dd8f8396e397495821c9eec6b429391c529c\"\n    },\n    \"transaction_identifier\": {\n        \"hash\": \"0x49354cc7b18dc5296c945a8e89f7d758dac14f1ab38d4c33dfe45ec1765ab339\"\n    }\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"9711b133-a948-4d3a-83b9-3b8192cbfa1a","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","block","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"block_identifier\": {\n        \"hash\": \"0xce7e16561150f3a379845f4e96c3dd8f8396e397495821c9eec6b429391c529c\"\n    },\n    \"transaction_identifier\": {\n        \"hash\": \"0x49354cc7b18dc5296c945a8e89f7d758dac14f1ab38d4c33dfe45ec1765ab339\"\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"transaction\": {\n  \"transaction_identifier\": {\n   \"hash\": \"pariatur et irure\"\n  },\n  \"operations\": [\n   {\n    \"operation_identifier\": {\n     \"index\": 21386899,\n     \"network_index\": 4619594\n    },\n    \"type\": \"laborum esse eu Ut\",\n    \"related_operations\": [\n     {\n      \"index\": -62721154,\n      \"network_index\": -13233349\n     },\n     {\n      \"index\": -74345703,\n      \"network_index\": -44772292\n     }\n    ],\n    \"status\": \"proident elit Excepteur reprehenderit\",\n    \"account\": {\n     \"address\": \"exercitation\",\n     \"sub_account\": {\n      \"address\": \"quis nulla voluptate\",\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"amount\": {\n     \"value\": \"enim occaecat\",\n     \"currency\": {\n      \"symbol\": \"ut laboris veniam exercitation\",\n      \"decimals\": -4432855,\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"coin_change\": {\n     \"coin_identifier\": {\n      \"identifier\": \"enim labore dolore Ut\"\n     },\n     \"coin_action\": \"coin_created\"\n    },\n    \"metadata\": {}\n   },\n   {\n    \"operation_identifier\": {\n     \"index\": 71087657,\n     \"network_index\": -46158144\n    },\n    \"type\": \"dolore proident nostrud Excepteur\",\n    \"related_operations\": [\n     {\n      \"index\": 56756126,\n      \"network_index\": 80624455\n     },\n     {\n      \"index\": -36266729,\n      \"network_index\": 59069377\n     }\n    ],\n    \"status\": \"consectetur sunt labore culpa\",\n    \"account\": {\n     \"address\": \"mollit aliquip nulla Excepteur\",\n     \"sub_account\": {\n      \"address\": \"proident Duis\",\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"amount\": {\n     \"value\": \"aute in ipsum ad\",\n     \"currency\": {\n      \"symbol\": \"aute velit reprehenderit\",\n      \"decimals\": 35700392,\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"coin_change\": {\n     \"coin_identifier\": {\n      \"identifier\": \"aliqua magna deserunt \"\n     },\n     \"coin_action\": \"coin_created\"\n    },\n    \"metadata\": {}\n   }\n  ],\n  \"metadata\": {\n   \"memo\": \"ut incididunt\",\n   \"size\": 62525794,\n   \"lockTime\": 5515674\n  }\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"5d7fe372-0c8e-46a4-a6e9-a1758009efab","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","block","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"block_identifier\": {\n        \"hash\": \"0xce7e16561150f3a379845f4e96c3dd8f8396e397495821c9eec6b429391c529c\"\n    },\n    \"transaction_identifier\": {\n        \"hash\": \"0x49354cc7b18dc5296c945a8e89f7d758dac14f1ab38d4c33dfe45ec1765ab339\"\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"63e78277-b083-4f7b-a42a-00293f682347","name":"Get All Mempool Transactions","request":{"name":"Get All Mempool Transactions","description":{"content":"Retrieves a list of transactions currently in the mempool for a given network.","type":"text/plain"},"url":{"path":["rosetta","v1","mempool"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"response":[{"id":"72eddb64-e3fe-4a8b-adcf-57a62d127b5b","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","mempool"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"transaction_identifiers\": [\n  {\n   \"hash\": \"do Excepteur adip\"\n  },\n  {\n   \"hash\": \"veniam adipisicing sed et\"\n  }\n ],\n \"metadata\": {}\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"497ffe62-6a7e-4df8-948d-bedd40068c68","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","mempool"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"[\n    {\n        \"network_identifier\": {\n            \"blockchain\": \"stacks\",\n            \"network\": \"mainnet\"\n        },\n        \"metadata\": {}\n    }\n]","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"d943d666-778f-48b3-a476-d14d8e91e974","name":"Get a Mempool Transaction","request":{"name":"Get a Mempool Transaction","description":{"content":"Retrieves transaction details from the mempool for a given transaction id from a given network.","type":"text/plain"},"url":{"path":["rosetta","v1","mempool","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"et magna reprehenderit sint\",\n        \"network\": \"consectetur ex aliquip Ut\",\n        \"sub_network_identifier\": {\n            \"network\": \"pariatur sint occaecat sunt\",\n            \"metadata\": {\n                \"producer\": \"commodo aute Duis eiusmod veniam\"\n            }\n        }\n    },\n    \"transaction_identifier\": {\n        \"hash\": \"Duis velit voluptate quis\"\n    }\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"aa12dc0d-f735-4e9f-be29-e8520183f7d7","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","mempool","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"et magna reprehenderit sint\",\n        \"network\": \"consectetur ex aliquip Ut\",\n        \"sub_network_identifier\": {\n            \"network\": \"pariatur sint occaecat sunt\",\n            \"metadata\": {\n                \"producer\": \"commodo aute Duis eiusmod veniam\"\n            }\n        }\n    },\n    \"transaction_identifier\": {\n        \"hash\": \"Duis velit voluptate quis\"\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"transaction\": {\n  \"transaction_identifier\": {\n   \"hash\": \"et\"\n  },\n  \"operations\": [\n   {\n    \"operation_identifier\": {\n     \"index\": -45896671,\n     \"network_index\": -92176270\n    },\n    \"type\": \"nulla\",\n    \"related_operations\": [\n     {\n      \"index\": -31654870,\n      \"network_index\": 35465691\n     },\n     {\n      \"index\": -66230389,\n      \"network_index\": 70533089\n     }\n    ],\n    \"status\": \"cillum incididunt reprehenderit nostrud\",\n    \"account\": {\n     \"address\": \"in adipisicing deserunt anim\",\n     \"sub_account\": {\n      \"address\": \"minim dolore dolor\",\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"amount\": {\n     \"value\": \"ad quis do\",\n     \"currency\": {\n      \"symbol\": \"non amet ullamco sit ipsum\",\n      \"decimals\": 34816806,\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"coin_change\": {\n     \"coin_identifier\": {\n      \"identifier\": \"commodo\"\n     },\n     \"coin_action\": \"coin_created\"\n    },\n    \"metadata\": {}\n   },\n   {\n    \"operation_identifier\": {\n     \"index\": -50665699,\n     \"network_index\": -11852886\n    },\n    \"type\": \"occaecat labore proident adipisicing\",\n    \"related_operations\": [\n     {\n      \"index\": -64839738,\n      \"network_index\": 35928907\n     },\n     {\n      \"index\": -30408582,\n      \"network_index\": -68291944\n     }\n    ],\n    \"status\": \"elit dolore ex\",\n    \"account\": {\n     \"address\": \"pariatur\",\n     \"sub_account\": {\n      \"address\": \"aliqua quis\",\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"amount\": {\n     \"value\": \"laborum amet quis\",\n     \"currency\": {\n      \"symbol\": \"elit Excepteur occaecat veniam\",\n      \"decimals\": 96024648,\n      \"metadata\": {}\n     },\n     \"metadata\": {}\n    },\n    \"coin_change\": {\n     \"coin_identifier\": {\n      \"identifier\": \"labore nisi in ipsum nul\"\n     },\n     \"coin_action\": \"coin_spent\"\n    },\n    \"metadata\": {}\n   }\n  ],\n  \"metadata\": {\n   \"memo\": \"nulla velit mollit\",\n   \"size\": 67301993,\n   \"lockTime\": 94389617\n  }\n },\n \"metadata\": {}\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"d6f96b9f-c8dd-4cb0-86bb-034149b611fe","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","mempool","transaction"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"et magna reprehenderit sint\",\n        \"network\": \"consectetur ex aliquip Ut\",\n        \"sub_network_identifier\": {\n            \"network\": \"pariatur sint occaecat sunt\",\n            \"metadata\": {\n                \"producer\": \"commodo aute Duis eiusmod veniam\"\n            }\n        }\n    },\n    \"transaction_identifier\": {\n        \"hash\": \"Duis velit voluptate quis\"\n    }\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"a0aa33a5-fa03-49f4-8f3a-305af485bbe6","name":"Derive an AccountIdentifier from a PublicKey","request":{"name":"Derive an AccountIdentifier from a PublicKey","description":{"content":"Retrieves the Account Identifier information based on a Public Key for a given network","type":"text/plain"},"url":{"path":["rosetta","v1","construction","derive"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"public_key\": {\n        \"hex_bytes\": \"025c13b2fc2261956d8a4ad07d481b1a3b2cbf93a24f992249a61c3a1c4de79c51\",\n        \"curve_type\": \"secp256k1\"\n    },\n    \"metadata\": {}\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"b0b7ab58-c8a8-4429-b71e-6a8c6c1de1c2","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","derive"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"public_key\": {\n        \"hex_bytes\": \"025c13b2fc2261956d8a4ad07d481b1a3b2cbf93a24f992249a61c3a1c4de79c51\",\n        \"curve_type\": \"secp256k1\"\n    },\n    \"metadata\": {}\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"address\": \"aliquip aute id do\",\n \"account_identifier\": {\n  \"address\": \"nulla aliqua est in\",\n  \"sub_account\": {\n   \"address\": \"quis dolor consectetur mollit\",\n   \"metadata\": {}\n  },\n  \"metadata\": {}\n },\n \"metadata\": {}\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"4e431d73-dc82-47c1-a332-cc49bfc848c0","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","derive"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"public_key\": {\n        \"hex_bytes\": \"025c13b2fc2261956d8a4ad07d481b1a3b2cbf93a24f992249a61c3a1c4de79c51\",\n        \"curve_type\": \"secp256k1\"\n    },\n    \"metadata\": {}\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"86188947-a6b4-4eab-abfa-3dad4855152c","name":"Get the Hash of a Signed Transaction","request":{"name":"Get the Hash of a Signed Transaction","description":{"content":"Retrieves the network-specific transaction hash for a signed transaction.","type":"text/plain"},"url":{"path":["rosetta","v1","construction","hash"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"signed_transaction\": \"0x80800000000400539886f96611ba3ba6cef9618f8c78118b37c5be000000000000000000000000000000b400017a33a91515ef48608a99c6adecd2eb258e11534a1acf66348f5678c8e2c8f83d243555ed67a0019d3500df98563ca31321c1a675b43ef79f146e322fe08df75103020000000000051a1ae3f911d8f1d46d7416bfbe4b593fd41eac19cb000000000007a12000000000000000000000000000000000000000000000000000000000000000000000\"\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"73169793-3040-4fae-ab03-8dbf6b595e52","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","hash"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"signed_transaction\": \"0x80800000000400539886f96611ba3ba6cef9618f8c78118b37c5be000000000000000000000000000000b400017a33a91515ef48608a99c6adecd2eb258e11534a1acf66348f5678c8e2c8f83d243555ed67a0019d3500df98563ca31321c1a675b43ef79f146e322fe08df75103020000000000051a1ae3f911d8f1d46d7416bfbe4b593fd41eac19cb000000000007a12000000000000000000000000000000000000000000000000000000000000000000000\"\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"transaction_identifier\": {\n  \"hash\": \"deserunt in\"\n },\n \"metadata\": {}\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"e901febe-aa58-4567-afc4-3c8f28dba83b","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","hash"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"signed_transaction\": \"0x80800000000400539886f96611ba3ba6cef9618f8c78118b37c5be000000000000000000000000000000b400017a33a91515ef48608a99c6adecd2eb258e11534a1acf66348f5678c8e2c8f83d243555ed67a0019d3500df98563ca31321c1a675b43ef79f146e322fe08df75103020000000000051a1ae3f911d8f1d46d7416bfbe4b593fd41eac19cb000000000007a12000000000000000000000000000000000000000000000000000000000000000000000\"\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"63d3fd54-f3c5-42fd-8c32-0c6dfd4727d1","name":"Get Metadata for Transaction Construction","request":{"name":"Get Metadata for Transaction Construction","description":{"content":"To Do","type":"text/plain"},"url":{"path":["rosetta","v1","construction","metadata"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"options\": {\n        \"sender_address\": \"SP3Y0BBCCCBFAMYCYN3F35CX9MH1J2GATP53JX3FA\",\n        \"type\": \"stack_stx\",\n        \"status\": \"success\",\n        \"token_transfer_recipient_address\": \"string\",\n        \"amount\": \"500000\",\n        \"symbol\": \"STX\",\n        \"decimals\": 6,\n        \"gas_limit\": 0,\n        \"gas_price\": 0,\n        \"suggested_fee_multiplier\": 0,\n        \"max_fee\": \"12380898\",\n        \"fee\": \"fee\",\n        \"size\": 260,\n        \"memo\": \"test.memo\",\n        \"number_of_cycles\": 0,\n        \"contract_address\": \"SP112T7BYCNEDCZ9TCYXCXFNJG9WXX5Q5SG6DSBAM\",\n        \"contract_name\": \"STX transfer\",\n        \"burn_block_height\": 0,\n        \"delegate_to\": \"cb3df38053d132895220b9ce471f6b676db5b9bf0b4adefb55f2118ece2478df01.STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n        \"pox_addr\": \"1Xik14zRm29UsyS6DjhYg4iZeZqsDa8D3\"\n    },\n    \"public_keys\": [\n        {\n            \"hex_bytes\": \"publicKey\",\n            \"curve_type\": \"secp256k1\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"524f7091-3f53-42d1-bad2-0d95d1aa475d","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","metadata"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"options\": {\n        \"sender_address\": \"SP3Y0BBCCCBFAMYCYN3F35CX9MH1J2GATP53JX3FA\",\n        \"type\": \"stack_stx\",\n        \"status\": \"success\",\n        \"token_transfer_recipient_address\": \"string\",\n        \"amount\": \"500000\",\n        \"symbol\": \"STX\",\n        \"decimals\": 6,\n        \"gas_limit\": 0,\n        \"gas_price\": 0,\n        \"suggested_fee_multiplier\": 0,\n        \"max_fee\": \"12380898\",\n        \"fee\": \"fee\",\n        \"size\": 260,\n        \"memo\": \"test.memo\",\n        \"number_of_cycles\": 0,\n        \"contract_address\": \"SP112T7BYCNEDCZ9TCYXCXFNJG9WXX5Q5SG6DSBAM\",\n        \"contract_name\": \"STX transfer\",\n        \"burn_block_height\": 0,\n        \"delegate_to\": \"cb3df38053d132895220b9ce471f6b676db5b9bf0b4adefb55f2118ece2478df01.STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n        \"pox_addr\": \"1Xik14zRm29UsyS6DjhYg4iZeZqsDa8D3\"\n    },\n    \"public_keys\": [\n        {\n            \"hex_bytes\": \"publicKey\",\n            \"curve_type\": \"secp256k1\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"metadata\": {\n  \"account_sequence\": 73627167,\n  \"recent_block_hash\": \"amet labore ullamco fugiat\"\n },\n \"suggested_fee\": [\n  {\n   \"value\": \"adipisicing cupidatat deserunt sint\",\n   \"currency\": {\n    \"symbol\": \"ullamco irure magna qui commodo\",\n    \"decimals\": 63977344,\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  },\n  {\n   \"value\": \"voluptate et anim laborum commodo\",\n   \"currency\": {\n    \"symbol\": \"est amet consectetur in qui\",\n    \"decimals\": 42005737,\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"73b28609-57f9-4ac8-b3fd-0809f3d2a033","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","metadata"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"options\": {\n        \"sender_address\": \"SP3Y0BBCCCBFAMYCYN3F35CX9MH1J2GATP53JX3FA\",\n        \"type\": \"stack_stx\",\n        \"status\": \"success\",\n        \"token_transfer_recipient_address\": \"string\",\n        \"amount\": \"500000\",\n        \"symbol\": \"STX\",\n        \"decimals\": 6,\n        \"gas_limit\": 0,\n        \"gas_price\": 0,\n        \"suggested_fee_multiplier\": 0,\n        \"max_fee\": \"12380898\",\n        \"fee\": \"fee\",\n        \"size\": 260,\n        \"memo\": \"test.memo\",\n        \"number_of_cycles\": 0,\n        \"contract_address\": \"SP112T7BYCNEDCZ9TCYXCXFNJG9WXX5Q5SG6DSBAM\",\n        \"contract_name\": \"STX transfer\",\n        \"burn_block_height\": 0,\n        \"delegate_to\": \"cb3df38053d132895220b9ce471f6b676db5b9bf0b4adefb55f2118ece2478df01.STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n        \"pox_addr\": \"1Xik14zRm29UsyS6DjhYg4iZeZqsDa8D3\"\n    },\n    \"public_keys\": [\n        {\n            \"hex_bytes\": \"publicKey\",\n            \"curve_type\": \"secp256k1\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"b535274e-3002-406a-b247-08f7385e6b16","name":"Parse a Transaction","request":{"name":"Parse a Transaction","description":{"content":"TODO","type":"text/plain"},"url":{"path":["rosetta","v1","construction","parse"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"ad reprehenderit commodo dolore\",\n        \"network\": \"voluptate elit pariatur\",\n        \"sub_network_identifier\": {\n            \"network\": \"voluptate est laborum sunt\",\n            \"metadata\": {\n                \"producer\": \"eiusmod proident in\"\n            }\n        }\n    },\n    \"signed\": false,\n    \"transaction\": \"sed nulla mollit\"\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"373c9336-3ad6-4227-8b21-04a56ca2a8a6","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","parse"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"ad reprehenderit commodo dolore\",\n        \"network\": \"voluptate elit pariatur\",\n        \"sub_network_identifier\": {\n            \"network\": \"voluptate est laborum sunt\",\n            \"metadata\": {\n                \"producer\": \"eiusmod proident in\"\n            }\n        }\n    },\n    \"signed\": false,\n    \"transaction\": \"sed nulla mollit\"\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"operations\": [\n  {\n   \"operation_identifier\": {\n    \"index\": 38847731,\n    \"network_index\": -95035446\n   },\n   \"type\": \"dolor fugiat ut tempor ex\",\n   \"related_operations\": [\n    {\n     \"index\": 43301511,\n     \"network_index\": -20857662\n    },\n    {\n     \"index\": -43714398,\n     \"network_index\": 99728439\n    }\n   ],\n   \"status\": \"ut et ut commodo non\",\n   \"account\": {\n    \"address\": \"in ut\",\n    \"sub_account\": {\n     \"address\": \"ex proident ut do\",\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   },\n   \"amount\": {\n    \"value\": \"eu enim anim\",\n    \"currency\": {\n     \"symbol\": \"v\",\n     \"decimals\": -4980440,\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   },\n   \"coin_change\": {\n    \"coin_identifier\": {\n     \"identifier\": \"irure adipisi\"\n    },\n    \"coin_action\": \"coin_spent\"\n   },\n   \"metadata\": {}\n  },\n  {\n   \"operation_identifier\": {\n    \"index\": -23195568,\n    \"network_index\": -12684408\n   },\n   \"type\": \"laboris\",\n   \"related_operations\": [\n    {\n     \"index\": -21246144,\n     \"network_index\": -93558693\n    },\n    {\n     \"index\": 74091093,\n     \"network_index\": 53990682\n    }\n   ],\n   \"status\": \"Ut\",\n   \"account\": {\n    \"address\": \"laboris\",\n    \"sub_account\": {\n     \"address\": \"amet consectetur non elit\",\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   },\n   \"amount\": {\n    \"value\": \"enim\",\n    \"currency\": {\n     \"symbol\": \"aliquip consequat sint qui\",\n     \"decimals\": -53391550,\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   },\n   \"coin_change\": {\n    \"coin_identifier\": {\n     \"identifier\": \"aute minim\"\n    },\n    \"coin_action\": \"coin_created\"\n   },\n   \"metadata\": {}\n  }\n ],\n \"signers\": [\n  \"min\",\n  \"conse\"\n ],\n \"account_identifier_signers\": [\n  {\n   \"address\": \"dolor enim\",\n   \"sub_account\": {\n    \"address\": \"in eiusmod\",\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  },\n  {\n   \"address\": \"in laborum Excepteur\",\n   \"sub_account\": {\n    \"address\": \"est consequat ex\",\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  }\n ],\n \"metadata\": {}\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"6f4a2b47-2529-4a5b-97fb-904699822599","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","parse"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"ad reprehenderit commodo dolore\",\n        \"network\": \"voluptate elit pariatur\",\n        \"sub_network_identifier\": {\n            \"network\": \"voluptate est laborum sunt\",\n            \"metadata\": {\n                \"producer\": \"eiusmod proident in\"\n            }\n        }\n    },\n    \"signed\": false,\n    \"transaction\": \"sed nulla mollit\"\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"1673c824-92d9-4c85-9419-04250cc50349","name":"Create a Request to Fetch Metadata","request":{"name":"Create a Request to Fetch Metadata","description":{"content":"TODO","type":"text/plain"},"url":{"path":["rosetta","v1","construction","preprocess"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"enim\",\n        \"network\": \"cillum ad\",\n        \"sub_network_identifier\": {\n            \"network\": \"occaecat Lorem\",\n            \"metadata\": {\n                \"producer\": \"in sint in Duis ex\"\n            }\n        }\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 30245744,\n                \"network_index\": -9382456\n            },\n            \"type\": \"eu\",\n            \"related_operations\": [\n                {\n                    \"index\": -66848675,\n                    \"network_index\": -78881267\n                },\n                {\n                    \"index\": 21919069,\n                    \"network_index\": -22633682\n                }\n            ],\n            \"status\": \"in \",\n            \"account\": {\n                \"address\": \"sunt anim irure\",\n                \"sub_account\": {\n                    \"address\": \"deserunt id in magna\",\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"amount\": {\n                \"value\": \"nostrud eu irure Excepte\",\n                \"currency\": {\n                    \"symbol\": \"ea ut exercitation sint\",\n                    \"decimals\": -7498201,\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"est incididunt labore\"\n                },\n                \"coin_action\": \"coin_created\"\n            },\n            \"metadata\": {}\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 30034297,\n                \"network_index\": 68671311\n            },\n            \"type\": \"pariatur\",\n            \"related_operations\": [\n                {\n                    \"index\": 47349867,\n                    \"network_index\": -81403538\n                },\n                {\n                    \"index\": -57056888,\n                    \"network_index\": -91426974\n                }\n            ],\n            \"status\": \"Duis dolore\",\n            \"account\": {\n                \"address\": \"quis sint dolor sit\",\n                \"sub_account\": {\n                    \"address\": \"deserunt in pariatur\",\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"amount\": {\n                \"value\": \"eiusmod amet sint culpa\",\n                \"currency\": {\n                    \"symbol\": \"ex Duis Ut\",\n                    \"decimals\": -83410053,\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"in ea\"\n                },\n                \"coin_action\": \"coin_created\"\n            },\n            \"metadata\": {}\n        }\n    ],\n    \"metadata\": {},\n    \"max_fee\": [\n        {\n            \"value\": \"cillum in\",\n            \"currency\": {\n                \"symbol\": \"\",\n                \"decimals\": -15487369,\n                \"metadata\": {}\n            },\n            \"metadata\": {}\n        },\n        {\n            \"value\": \"dolo\",\n            \"currency\": {\n                \"symbol\": \"id Ut ex nostrud\",\n                \"decimals\": -99459084,\n                \"metadata\": {}\n            },\n            \"metadata\": {}\n        }\n    ],\n    \"suggested_fee_multiplier\": -35245546\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"6f9fdcc4-d876-404e-8639-4dfe534f33fc","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","preprocess"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"nisi adipisicing Lorem\",\n        \"network\": \"laboris\",\n        \"sub_network_identifier\": {\n            \"network\": \"eu incididunt amet dolor enim\",\n            \"metadata\": {\n                \"producer\": \"ut labore\"\n            }\n        }\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": -82361426,\n                \"network_index\": 30303866\n            },\n            \"type\": \"in amet\",\n            \"related_operations\": [\n                {\n                    \"index\": 70793830,\n                    \"network_index\": -30944337\n                },\n                {\n                    \"index\": -11644725,\n                    \"network_index\": -49062987\n                }\n            ],\n            \"status\": \"consequat magna\",\n            \"account\": {\n                \"address\": \"dolor aliqua enim dolore\",\n                \"sub_account\": {\n                    \"address\": \"ipsum\",\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"amount\": {\n                \"value\": \"dolore ullam\",\n                \"currency\": {\n                    \"symbol\": \"quis proident id\",\n                    \"decimals\": -1807318,\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"irure non velit dolor\"\n                },\n                \"coin_action\": \"coin_spent\"\n            },\n            \"metadata\": {}\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 51287579,\n                \"network_index\": -53919442\n            },\n            \"type\": \"veniam sunt ullamco aute occaecat\",\n            \"related_operations\": [\n                {\n                    \"index\": -8328905,\n                    \"network_index\": -82397453\n                },\n                {\n                    \"index\": 87761920,\n                    \"network_index\": 31331707\n                }\n            ],\n            \"status\": \"o\",\n            \"account\": {\n                \"address\": \"culpa in veniam aliqua\",\n                \"sub_account\": {\n                    \"address\": \"esse adipisicing culpa\",\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"amount\": {\n                \"value\": \"aliquip qui\",\n                \"currency\": {\n                    \"symbol\": \"i\",\n                    \"decimals\": -23490071,\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"Ut Duis dolore voluptate\"\n                },\n                \"coin_action\": \"coin_spent\"\n            },\n            \"metadata\": {}\n        }\n    ],\n    \"metadata\": {},\n    \"max_fee\": [\n        {\n            \"value\": \"veniam in\",\n            \"currency\": {\n                \"symbol\": \"reprehenderit\",\n                \"decimals\": 34174627,\n                \"metadata\": {}\n            },\n            \"metadata\": {}\n        },\n        {\n            \"value\": \"pariatur et\",\n            \"currency\": {\n                \"symbol\": \"reprehenderit ad sit\",\n                \"decimals\": -49630008,\n                \"metadata\": {}\n            },\n            \"metadata\": {}\n        }\n    ],\n    \"suggested_fee_multiplier\": 13443598\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"options\": {\n  \"sender_address\": \"fugiat ut\",\n  \"type\": \"laboris proident velit ullamco\",\n  \"status\": \"eu\",\n  \"token_transfer_recipient_address\": \"sed\",\n  \"amount\": \"incididunt esse dolor qu\",\n  \"symbol\": \"enim aliquip ut adipisicing ullamco\",\n  \"decimals\": -88136739,\n  \"gas_limit\": -67488825.04844928,\n  \"gas_price\": 58044712.04053247,\n  \"suggested_fee_multiplier\": -11145367.35663107,\n  \"max_fee\": \"nisi\",\n  \"fee\": \"qui\",\n  \"size\": -63464100,\n  \"memo\": \"aliqua consequat\",\n  \"number_of_cycles\": -22605497,\n  \"contract_address\": \"occaecat repreh\",\n  \"contract_name\": \"nostrud in\",\n  \"burn_block_height\": -122447,\n  \"delegate_to\": \"sunt nostrud est\",\n  \"pox_addr\": \"in\"\n },\n \"required_public_keys\": [\n  {\n   \"address\": \"aliqua minim non Excepteur occaecat\",\n   \"sub_account\": {\n    \"address\": \"pariatur sint minim magna\",\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  },\n  {\n   \"address\": \"labore dolore esse exercitati\",\n   \"sub_account\": {\n    \"address\": \"nostrud tempor\",\n    \"metadata\": {}\n   },\n   \"metadata\": {}\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"6d373635-11f6-4406-a4f5-0b06ae630227","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","preprocess"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"nisi adipisicing Lorem\",\n        \"network\": \"laboris\",\n        \"sub_network_identifier\": {\n            \"network\": \"eu incididunt amet dolor enim\",\n            \"metadata\": {\n                \"producer\": \"ut labore\"\n            }\n        }\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": -82361426,\n                \"network_index\": 30303866\n            },\n            \"type\": \"in amet\",\n            \"related_operations\": [\n                {\n                    \"index\": 70793830,\n                    \"network_index\": -30944337\n                },\n                {\n                    \"index\": -11644725,\n                    \"network_index\": -49062987\n                }\n            ],\n            \"status\": \"consequat magna\",\n            \"account\": {\n                \"address\": \"dolor aliqua enim dolore\",\n                \"sub_account\": {\n                    \"address\": \"ipsum\",\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"amount\": {\n                \"value\": \"dolore ullam\",\n                \"currency\": {\n                    \"symbol\": \"quis proident id\",\n                    \"decimals\": -1807318,\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"irure non velit dolor\"\n                },\n                \"coin_action\": \"coin_spent\"\n            },\n            \"metadata\": {}\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 51287579,\n                \"network_index\": -53919442\n            },\n            \"type\": \"veniam sunt ullamco aute occaecat\",\n            \"related_operations\": [\n                {\n                    \"index\": -8328905,\n                    \"network_index\": -82397453\n                },\n                {\n                    \"index\": 87761920,\n                    \"network_index\": 31331707\n                }\n            ],\n            \"status\": \"o\",\n            \"account\": {\n                \"address\": \"culpa in veniam aliqua\",\n                \"sub_account\": {\n                    \"address\": \"esse adipisicing culpa\",\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"amount\": {\n                \"value\": \"aliquip qui\",\n                \"currency\": {\n                    \"symbol\": \"i\",\n                    \"decimals\": -23490071,\n                    \"metadata\": {}\n                },\n                \"metadata\": {}\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"Ut Duis dolore voluptate\"\n                },\n                \"coin_action\": \"coin_spent\"\n            },\n            \"metadata\": {}\n        }\n    ],\n    \"metadata\": {},\n    \"max_fee\": [\n        {\n            \"value\": \"veniam in\",\n            \"currency\": {\n                \"symbol\": \"reprehenderit\",\n                \"decimals\": 34174627,\n                \"metadata\": {}\n            },\n            \"metadata\": {}\n        },\n        {\n            \"value\": \"pariatur et\",\n            \"currency\": {\n                \"symbol\": \"reprehenderit ad sit\",\n                \"decimals\": -49630008,\n                \"metadata\": {}\n            },\n            \"metadata\": {}\n        }\n    ],\n    \"suggested_fee_multiplier\": 13443598\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"8d8c0897-cd0e-45dd-866e-123ae0b6a7af","name":"Submit a Signed Transaction","request":{"name":"Submit a Signed Transaction","description":{"content":"Submit a pre-signed transaction to the node. The examples below are illustrative only. You'll need to use your wallet to generate actual values to use them in the request payload.","type":"text/plain"},"url":{"path":["rosetta","v1","construction","submit"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"signed_transaction\": \"0x80800000000400539886f96611ba3ba6cef9618f8c78118b37c5be000000000000000000000000000000b400017a33a91515ef48608a99c6adecd2eb258e11534a1acf66348f5678c8e2c8f83d243555ed67a0019d3500df98563ca31321c1a675b43ef79f146e322fe08df75103020000000000051a1ae3f911d8f1d46d7416bfbe4b593fd41eac19cb000000000007a12000000000000000000000000000000000000000000000000000000000000000000000\"\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"fb5b9ef2-2e11-4bd0-9d46-b466a75e1e10","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","submit"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"signed_transaction\": \"0x80800000000400539886f96611ba3ba6cef9618f8c78118b37c5be000000000000000000000000000000b400017a33a91515ef48608a99c6adecd2eb258e11534a1acf66348f5678c8e2c8f83d243555ed67a0019d3500df98563ca31321c1a675b43ef79f146e322fe08df75103020000000000051a1ae3f911d8f1d46d7416bfbe4b593fd41eac19cb000000000007a12000000000000000000000000000000000000000000000000000000000000000000000\"\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"transaction_identifier\": {\n  \"hash\": \"v\"\n },\n \"metadata\": {}\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"6f4396c8-f911-41fb-9e3e-b2c95fb135cc","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","submit"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"signed_transaction\": \"0x80800000000400539886f96611ba3ba6cef9618f8c78118b37c5be000000000000000000000000000000b400017a33a91515ef48608a99c6adecd2eb258e11534a1acf66348f5678c8e2c8f83d243555ed67a0019d3500df98563ca31321c1a675b43ef79f146e322fe08df75103020000000000051a1ae3f911d8f1d46d7416bfbe4b593fd41eac19cb000000000007a12000000000000000000000000000000000000000000000000000000000000000000000\"\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"df0fe0f3-981b-488f-b30b-7bb50e383316","name":"Generate an Unsigned Transaction and Signing Payloads","request":{"name":"Generate an Unsigned Transaction and Signing Payloads","description":{"content":"Generate an unsigned transaction from operations and metadata. The examples below are illustrative only. You'll need to use your wallet to generate actual values to use them in the request payload.","type":"text/plain"},"url":{"path":["rosetta","v1","construction","payloads"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0,\n                    \"network_index\": 0\n                }\n            ],\n            \"type\": \"stack_stx\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n                \"metadata\": {}\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"8095c327-2908-45b0-9ff7-9a67e6df8b95","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","payloads"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0,\n                    \"network_index\": 0\n                }\n            ],\n            \"type\": \"stack_stx\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n                \"metadata\": {}\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"unsigned_transaction\": \"enim occaecat tempor cupidatat fugiat\",\n \"payloads\": [\n  {\n   \"hex_bytes\": \"in veniam eiusmod ad quis\",\n   \"address\": \"magna commodo\",\n   \"account_identifier\": {\n    \"address\": \"deserunt adipisicing Duis aute\",\n    \"sub_account\": {\n     \"address\": \"U\",\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   },\n   \"signature_type\": \"ecdsa_recovery\"\n  },\n  {\n   \"hex_bytes\": \"reprehenderit culpa enim Duis voluptate\",\n   \"address\": \"aliqua Duis labore adipisicing\",\n   \"account_identifier\": {\n    \"address\": \"culpa sed enim\",\n    \"sub_account\": {\n     \"address\": \"aute\",\n     \"metadata\": {}\n    },\n    \"metadata\": {}\n   },\n   \"signature_type\": \"ed25519\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"c949f05a-5982-4082-8410-719c24c793ad","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","payloads"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0,\n                    \"network_index\": 0\n                }\n            ],\n            \"type\": \"stack_stx\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n                \"metadata\": {}\n            }\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"6c8c6b47-2e13-45a3-a04f-9d625b88f834","name":"Create Network Transaction from Signatures","request":{"name":"Create Network Transaction from Signatures","description":{"content":"Take unsigned transaction and signature, combine both and return signed transaction. The examples below are illustrative only. You'll need to use your wallet to generate actual values to use them in the request payload.","type":"text/plain"},"url":{"path":["rosetta","v1","construction","combine"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"unsigned_transaction\": \"00000000010400539886f96611ba3ba6cef9618f8c78118b37c5be0000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003020000000000051ab71a091b4b8b7661a661c620966ab6573bc2dcd3000000000007a12074657374207472616e73616374696f6e000000000000000000000000000000000000\",\n    \"signatures\": [\n        {\n            \"signing_payload\": {\n                \"address\": \"string\",\n                \"account_identifier\": {\n                    \"address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n                    \"metadata\": {}\n                },\n                \"hex_bytes\": \"string\",\n                \"signature_type\": \"ecdsa\"\n            },\n            \"public_key\": {\n                \"hex_bytes\": \"025c13b2fc2261956d8a4ad07d481b1a3b2cbf93a24f992249a61c3a1c4de79c51\",\n                \"curve_type\": \"secp256k1\"\n            },\n            \"signature_type\": \"ecdsa\",\n            \"hex_bytes\": \"string\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"ed702dfa-8598-45bc-8d79-c06b6b062943","name":"Success","originalRequest":{"url":{"path":["rosetta","v1","construction","combine"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"unsigned_transaction\": \"00000000010400539886f96611ba3ba6cef9618f8c78118b37c5be0000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003020000000000051ab71a091b4b8b7661a661c620966ab6573bc2dcd3000000000007a12074657374207472616e73616374696f6e000000000000000000000000000000000000\",\n    \"signatures\": [\n        {\n            \"signing_payload\": {\n                \"address\": \"string\",\n                \"account_identifier\": {\n                    \"address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n                    \"metadata\": {}\n                },\n                \"hex_bytes\": \"string\",\n                \"signature_type\": \"ecdsa\"\n            },\n            \"public_key\": {\n                \"hex_bytes\": \"025c13b2fc2261956d8a4ad07d481b1a3b2cbf93a24f992249a61c3a1c4de79c51\",\n                \"curve_type\": \"secp256k1\"\n            },\n            \"signature_type\": \"ecdsa\",\n            \"hex_bytes\": \"string\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"signed_transaction\": \"fugiat\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"9f048a48-d596-4b2e-a13e-ab7214374815","name":"Error","originalRequest":{"url":{"path":["rosetta","v1","construction","combine"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"network_identifier\": {\n        \"blockchain\": \"stacks\",\n        \"network\": \"mainnet\"\n    },\n    \"unsigned_transaction\": \"00000000010400539886f96611ba3ba6cef9618f8c78118b37c5be0000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003020000000000051ab71a091b4b8b7661a661c620966ab6573bc2dcd3000000000007a12074657374207472616e73616374696f6e000000000000000000000000000000000000\",\n    \"signatures\": [\n        {\n            \"signing_payload\": {\n                \"address\": \"string\",\n                \"account_identifier\": {\n                    \"address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n                    \"metadata\": {}\n                },\n                \"hex_bytes\": \"string\",\n                \"signature_type\": \"ecdsa\"\n            },\n            \"public_key\": {\n                \"hex_bytes\": \"025c13b2fc2261956d8a4ad07d481b1a3b2cbf93a24f992249a61c3a1c4de79c51\",\n                \"curve_type\": \"secp256k1\"\n            },\n            \"signature_type\": \"ecdsa\",\n            \"hex_bytes\": \"string\"\n        }\n    ]\n}","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"code\": 91843858,\n \"message\": \"aute voluptate sunt exercitation\",\n \"retriable\": false,\n \"details\": {\n  \"address\": \"ipsum nulla\",\n  \"error\": \"sunt reprehenderit aute tempor\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"1017f9c1-ea7e-41be-9ff1-faf85c3073dd","name":"Search","description":{"content":"Read-only endpoints to search for accounts, blocks, smart contracts, and transactions","type":"text/plain"},"item":[{"id":"c4385f92-d91b-4fac-a2f4-c0b1decfb1b7","name":"Search","request":{"name":"Search","description":{"content":"Search blocks, transactions, contracts, or accounts by hash/ID","type":"text/plain"},"url":{"path":["extended","v1","search",":id"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"include_metadata","value":"false","description":"This includes the detailed data for purticular hash in the response"}],"variable":[{"disabled":false,"type":"any","value":"0xcf8b233f19f6c07d2dc1963302d2436efd36e9afac127bf6582824a13961c06d","key":"id","description":"(Required) The hex hash string for a block or transaction, account address, or contract address"}]},"method":"GET","auth":null},"response":[{"id":"65b7e975-caea-4fcd-94cc-2060749981d5","name":"Success","originalRequest":{"url":{"path":["extended","v1","search",":id"],"host":["{{baseUrl}}"],"query":[{"key":"include_metadata","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"0xcf8b233f19f6c07d2dc1963302d2436efd36e9afac127bf6582824a13961c06d","key":"id","description":"(Required) The hex hash string for a block or transaction, account address, or contract address"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"found\": true,\n \"result\": {\n  \"entity_id\": \"ST2P7B9G6Y55QWZJ9B93DVSEG5S6Z4PFJHB3XRKHW.hello_world\",\n  \"entity_type\": \"contract_address\",\n  \"tx_data\": {\n   \"canonical\": true,\n   \"block_hash\": \"0xb076fd3983e63bbf28ae615daa31c5b6084d23ceeb920c54f1ea666244415457\",\n   \"burn_block_time\": 1595229199,\n   \"block_height\": 648,\n   \"tx_type\": \"smart_contract\"\n  }\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"e4f8dd8f-8143-4c23-a0c1-78d3186ed232","name":"Not found","originalRequest":{"url":{"path":["extended","v1","search",":id"],"host":["{{baseUrl}}"],"query":[{"key":"include_metadata","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"0xcf8b233f19f6c07d2dc1963302d2436efd36e9afac127bf6582824a13961c06d","key":"id","description":"(Required) The hex hash string for a block or transaction, account address, or contract address"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"found\": false,\n \"result\": {\n  \"entity_type\": \"unknown_hash\"\n },\n \"error\": \"No block or transaction found with hash \\\"0xabc123\\\"\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"6cf40541-d5e0-42e2-bddc-b55564194535","name":"Smart Contracts","description":{"content":"Read-only endpoints to obtain Clarity smart contract details","type":"text/plain"},"item":[{"id":"e61b51a7-afc5-4e8f-a2d9-858bc9524e7d","name":"Get contract info","request":{"name":"Get contract info","description":{"content":"Retrieves details of a contract with a given `contract_id`","type":"text/plain"},"url":{"path":["extended","v1","contract",":contract_id"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C.satoshibles","key":"contract_id","description":"(Required) Contract identifier formatted as `<contract_address>.<contract_name>`"}]},"method":"GET","auth":null},"response":[{"id":"5c0abe88-1ddc-4f4a-99b0-be032a68c5b4","name":"Contract found","originalRequest":{"url":{"path":["extended","v1","contract",":contract_id"],"host":["{{baseUrl}}"],"query":[{"key":"unanchored","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C.satoshibles","key":"contract_id","description":"(Required) Contract identifier formatted as `<contract_address>.<contract_name>`"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"tx_id\": \"0xb8b822f30a063fda8f9d44a23530a562a1ed93867d5977fbb12b1c284736edbb\",\n \"canonical\": true,\n \"contract_id\": \"SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.btc-ft-swap\",\n \"block_height\": 23131,\n \"source_code\": \"(use-trait fungible-token 'SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.sip-010-trait-ft-standard.sip-010-trait) (define-constant expiry u100) (define-map swaps uint {sats: uint, btc-receiver: (buff 40), amount: uint, ft-receiver: (optional principal), ft-sender: principal, when: uint, done: uint, ft: principal}) (define-data-var next-id uint u0) (define-private (find-out (entry {scriptPubKey: (buff 128), value: (buff 8)}) (result {pubscriptkey: (buff 40), out: (optional {scriptPubKey: (buff 128), value: uint})})) (if (is-eq (get scriptPubKey entry) (get pubscriptkey result)) (merge result {out: (some {scriptPubKey: (get scriptPubKey entry), value: (get uint32 (unwrap-panic (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1 read-uint32 {txbuff: (get value entry), index: u0})))})}) result)) (define-public (get-out-value (tx { version: (buff 4), ins: (list 8 {outpoint: {hash: (buff 32), index: (buff 4)}, scriptSig: (buff 256), sequence: (buff 4)}), outs: (list 8 {value: (buff 8), scriptPubKey: (buff 128)}), locktime: (buff 4)}) (pubscriptkey (buff 40))) (ok (fold find-out (get outs tx) {pubscriptkey: pubscriptkey, out: none}))) ;; create a swap between btc and fungible token (define-public (create-swap (sats uint) (btc-receiver (buff 40)) (amount uint) (ft-receiver (optional principal)) (ft <fungible-token>)) (let ((id (var-get next-id))) (asserts! (map-insert swaps id {sats: sats, btc-receiver: btc-receiver, amount: amount, ft-receiver: ft-receiver, ft-sender: tx-sender, when: block-height, done: u0, ft: (contract-of ft)}) ERR_INVALID_ID) (var-set next-id (+ id u1)) (match (contract-call? ft transfer amount tx-sender (as-contract tx-sender) (some 0x636174616d6172616e2073776170)) success (ok id) error (err (* error u1000))))) (define-public (set-ft-receiver (id uint)) (let ((swap (unwrap! (map-get? swaps id) ERR_INVALID_ID))) (if (is-none (get ft-receiver swap)) (begin (asserts! (map-set swaps id (merge swap {ft-receiver: (some tx-sender)})) ERR_NATIVE_FAILURE) (ok true)) ERR_ALREADY_DONE))) ;; any user can cancle the swap after the expiry period (define-public (cancel (id uint) (ft <fungible-token>)) (let ((swap (unwrap! (map-get? swaps id) ERR_INVALID_ID))) (asserts! (is-eq (contract-of ft) (get ft swap)) ERR_INVALID_FUNGIBLE_TOKEN) (asserts! (< (+ (get when swap) expiry) block-height) ERR_TOO_EARLY) (asserts! (is-eq (get done swap) u0) ERR_ALREADY_DONE) (asserts! (map-set swaps id (merge swap {done: u1})) ERR_NATIVE_FAILURE) (as-contract (contract-call? ft transfer (get amount swap) tx-sender (get ft-sender swap) (some 0x72657665727420636174616d6172616e2073776170))))) ;; any user can submit a tx that contains the swap (define-public (submit-swap (id uint) (block { version: (buff 4), parent: (buff 32), merkle-root: (buff 32), timestamp: (buff 4), nbits: (buff 4), nonce: (buff 4), height: uint }) (tx {version: (buff 4), ins: (list 8 {outpoint: {hash: (buff 32), index: (buff 4)}, scriptSig: (buff 256), sequence: (buff 4)}), outs: (list 8 {value: (buff 8), scriptPubKey: (buff 128)}), locktime: (buff 4)}) (proof { tx-index: uint, hashes: (list 12 (buff 32)), tree-depth: uint }) (ft <fungible-token>)) (let ((swap (unwrap! (map-get? swaps id) ERR_INVALID_ID)) (tx-buff (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1 concat-tx tx))) (match (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1 was-tx-mined block tx-buff proof) result (begin (asserts! result ERR_VERIFICATION_FAILED) (asserts! (is-eq (get done swap) u0) ERR_ALREADY_DONE) (match (get out (unwrap! (get-out-value tx (get btc-receiver swap)) ERR_NATIVE_FAILURE)) out (if (>= (get value out) (get sats swap)) (begin (asserts! (is-eq (contract-of ft) (get ft swap)) ERR_INVALID_FUNGIBLE_TOKEN) (asserts! (map-set swaps id (merge swap {done: u1})) ERR_NATIVE_FAILURE) (as-contract (contract-call? ft transfer (get amount swap) tx-sender (unwrap! (get ft-receiver swap) ERR_NO_FT_RECEIVER) (some 0x636174616d6172616e2073776170)))) ERR_TX_VALUE_TOO_SMALL) ERR_TX_NOT_FOR_RECEIVER)) error (err (* error u1000))))) (define-constant ERR_VERIFICATION_FAILED (err u1)) (define-constant ERR_FAILED_TO_PARSE_TX (err u2)) (define-constant ERR_INVALID_ID (err u3)) (define-constant ERR_TOO_EARLY (err u4)) (define-constant ERR_TX_VALUE_TOO_SMALL (err u5)) (define-constant ERR_TX_NOT_FOR_RECEIVER (err u6)) (define-constant ERR_ALREADY_DONE (err u7)) (define-constant ERR_INVALID_FUNGIBLE_TOKEN (err u8)) (define-constant ERR_NO_FT_RECEIVER (err u9)) (define-constant ERR_NATIVE_FAILURE (err u99)) \",\n \"abi\": \"{\\\"maps\\\":[{\\\"key\\\":\\\"uint128\\\",\\\"name\\\":\\\"swaps\\\",\\\"value\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"btc-receiver\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}},{\\\"name\\\":\\\"done\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"principal\\\"},{\\\"name\\\":\\\"ft-receiver\\\",\\\"type\\\":{\\\"optional\\\":\\\"principal\\\"}},{\\\"name\\\":\\\"ft-sender\\\",\\\"type\\\":\\\"principal\\\"},{\\\"name\\\":\\\"sats\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"when\\\",\\\"type\\\":\\\"uint128\\\"}]}}],\\\"functions\\\":[{\\\"args\\\":[{\\\"name\\\":\\\"entry\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":8}}}]}},{\\\"name\\\":\\\"result\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"out\\\",\\\"type\\\":{\\\"optional\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint128\\\"}]}}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}]}}],\\\"name\\\":\\\"find-out\\\",\\\"access\\\":\\\"private\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"out\\\",\\\"type\\\":{\\\"optional\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint128\\\"}]}}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}]}}},{\\\"args\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"trait_reference\\\"}],\\\"name\\\":\\\"cancel\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"bool\\\",\\\"error\\\":\\\"uint128\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"sats\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"btc-receiver\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}},{\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"ft-receiver\\\",\\\"type\\\":{\\\"optional\\\":\\\"principal\\\"}},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"trait_reference\\\"}],\\\"name\\\":\\\"create-swap\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"uint128\\\",\\\"error\\\":\\\"uint128\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"tx\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"ins\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"outpoint\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"hash\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"index\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"scriptSig\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":256}}},{\\\"name\\\":\\\"sequence\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"locktime\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"outs\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":8}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"version\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}],\\\"name\\\":\\\"get-out-value\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"out\\\",\\\"type\\\":{\\\"optional\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint128\\\"}]}}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}]},\\\"error\\\":\\\"none\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint128\\\"}],\\\"name\\\":\\\"set-ft-receiver\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"bool\\\",\\\"error\\\":\\\"uint128\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"block\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"height\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"merkle-root\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"nbits\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"nonce\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"parent\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"timestamp\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"version\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"tx\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"ins\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"outpoint\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"hash\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"index\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"scriptSig\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":256}}},{\\\"name\\\":\\\"sequence\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"locktime\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"outs\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":8}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"version\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"proof\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"hashes\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}},\\\"length\\\":12}}},{\\\"name\\\":\\\"tree-depth\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"tx-index\\\",\\\"type\\\":\\\"uint128\\\"}]}},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"trait_reference\\\"}],\\\"name\\\":\\\"submit-swap\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"bool\\\",\\\"error\\\":\\\"uint128\\\"}}}}],\\\"variables\\\":[{\\\"name\\\":\\\"ERR_ALREADY_DONE\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_FAILED_TO_PARSE_TX\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_INVALID_FUNGIBLE_TOKEN\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_INVALID_ID\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_NATIVE_FAILURE\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_NO_FT_RECEIVER\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_TOO_EARLY\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_TX_NOT_FOR_RECEIVER\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_TX_VALUE_TOO_SMALL\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_VERIFICATION_FAILED\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"expiry\\\",\\\"type\\\":\\\"uint128\\\",\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"next-id\\\",\\\"type\\\":\\\"uint128\\\",\\\"access\\\":\\\"variable\\\"}],\\\"fungible_tokens\\\":[],\\\"non_fungible_tokens\\\":[]}\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"3f1758b8-fc83-432e-bc5c-fd78020af52b","name":"Cannot find contract of given ID","originalRequest":{"url":{"path":["extended","v1","contract",":contract_id"],"host":["{{baseUrl}}"],"query":[{"key":"unanchored","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C.satoshibles","key":"contract_id","description":"(Required) Contract identifier formatted as `<contract_address>.<contract_name>`"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"633987b4-ed62-4882-938f-0069d6606800","name":"Get contracts by trait","request":{"name":"Get contracts by trait","description":{"content":"Retrieves a list of contracts based on the following traits listed in JSON format -  functions, variables, maps, fungible tokens and non-fungible tokens","type":"text/plain"},"url":{"path":["extended","v1","contract","by_trait"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"trait_abi","value":"occaecat consequat laboris","description":"(Required) JSON abi of the trait."},{"disabled":false,"key":"limit","value":"62802150","description":"max number of contracts fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first contract event to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"ada597ea-1137-4a9a-ab2f-a00f6c4c792c","name":"List of contracts implement given trait","originalRequest":{"url":{"path":["extended","v1","contract","by_trait"],"host":["{{baseUrl}}"],"query":[{"key":"trait_abi","value":"occaecat consequat laboris"},{"key":"limit","value":"62802150"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"offset\": 0,\n \"limit\": 10,\n \"result\": [\n  {\n   \"tx_id\": \"0xb8b822f30a063fda8f9d44a23530a562a1ed93867d5977fbb12b1c284736edbb\",\n   \"canonical\": true,\n   \"contract_id\": \"SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.btc-ft-swap\",\n   \"block_height\": 23131,\n   \"source_code\": \"(use-trait fungible-token 'SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.sip-010-trait-ft-standard.sip-010-trait) (define-constant expiry u100) (define-map swaps uint {sats: uint, btc-receiver: (buff 40), amount: uint, ft-receiver: (optional principal), ft-sender: principal, when: uint, done: uint, ft: principal}) (define-data-var next-id uint u0) (define-private (find-out (entry {scriptPubKey: (buff 128), value: (buff 8)}) (result {pubscriptkey: (buff 40), out: (optional {scriptPubKey: (buff 128), value: uint})})) (if (is-eq (get scriptPubKey entry) (get pubscriptkey result)) (merge result {out: (some {scriptPubKey: (get scriptPubKey entry), value: (get uint32 (unwrap-panic (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1 read-uint32 {txbuff: (get value entry), index: u0})))})}) result)) (define-public (get-out-value (tx { version: (buff 4), ins: (list 8 {outpoint: {hash: (buff 32), index: (buff 4)}, scriptSig: (buff 256), sequence: (buff 4)}), outs: (list 8 {value: (buff 8), scriptPubKey: (buff 128)}), locktime: (buff 4)}) (pubscriptkey (buff 40))) (ok (fold find-out (get outs tx) {pubscriptkey: pubscriptkey, out: none}))) ;; create a swap between btc and fungible token (define-public (create-swap (sats uint) (btc-receiver (buff 40)) (amount uint) (ft-receiver (optional principal)) (ft <fungible-token>)) (let ((id (var-get next-id))) (asserts! (map-insert swaps id {sats: sats, btc-receiver: btc-receiver, amount: amount, ft-receiver: ft-receiver, ft-sender: tx-sender, when: block-height, done: u0, ft: (contract-of ft)}) ERR_INVALID_ID) (var-set next-id (+ id u1)) (match (contract-call? ft transfer amount tx-sender (as-contract tx-sender) (some 0x636174616d6172616e2073776170)) success (ok id) error (err (* error u1000))))) (define-public (set-ft-receiver (id uint)) (let ((swap (unwrap! (map-get? swaps id) ERR_INVALID_ID))) (if (is-none (get ft-receiver swap)) (begin (asserts! (map-set swaps id (merge swap {ft-receiver: (some tx-sender)})) ERR_NATIVE_FAILURE) (ok true)) ERR_ALREADY_DONE))) ;; any user can cancle the swap after the expiry period (define-public (cancel (id uint) (ft <fungible-token>)) (let ((swap (unwrap! (map-get? swaps id) ERR_INVALID_ID))) (asserts! (is-eq (contract-of ft) (get ft swap)) ERR_INVALID_FUNGIBLE_TOKEN) (asserts! (< (+ (get when swap) expiry) block-height) ERR_TOO_EARLY) (asserts! (is-eq (get done swap) u0) ERR_ALREADY_DONE) (asserts! (map-set swaps id (merge swap {done: u1})) ERR_NATIVE_FAILURE) (as-contract (contract-call? ft transfer (get amount swap) tx-sender (get ft-sender swap) (some 0x72657665727420636174616d6172616e2073776170))))) ;; any user can submit a tx that contains the swap (define-public (submit-swap (id uint) (block { version: (buff 4), parent: (buff 32), merkle-root: (buff 32), timestamp: (buff 4), nbits: (buff 4), nonce: (buff 4), height: uint }) (tx {version: (buff 4), ins: (list 8 {outpoint: {hash: (buff 32), index: (buff 4)}, scriptSig: (buff 256), sequence: (buff 4)}), outs: (list 8 {value: (buff 8), scriptPubKey: (buff 128)}), locktime: (buff 4)}) (proof { tx-index: uint, hashes: (list 12 (buff 32)), tree-depth: uint }) (ft <fungible-token>)) (let ((swap (unwrap! (map-get? swaps id) ERR_INVALID_ID)) (tx-buff (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1 concat-tx tx))) (match (contract-call? 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.clarity-bitcoin-lib-v1 was-tx-mined block tx-buff proof) result (begin (asserts! result ERR_VERIFICATION_FAILED) (asserts! (is-eq (get done swap) u0) ERR_ALREADY_DONE) (match (get out (unwrap! (get-out-value tx (get btc-receiver swap)) ERR_NATIVE_FAILURE)) out (if (>= (get value out) (get sats swap)) (begin (asserts! (is-eq (contract-of ft) (get ft swap)) ERR_INVALID_FUNGIBLE_TOKEN) (asserts! (map-set swaps id (merge swap {done: u1})) ERR_NATIVE_FAILURE) (as-contract (contract-call? ft transfer (get amount swap) tx-sender (unwrap! (get ft-receiver swap) ERR_NO_FT_RECEIVER) (some 0x636174616d6172616e2073776170)))) ERR_TX_VALUE_TOO_SMALL) ERR_TX_NOT_FOR_RECEIVER)) error (err (* error u1000))))) (define-constant ERR_VERIFICATION_FAILED (err u1)) (define-constant ERR_FAILED_TO_PARSE_TX (err u2)) (define-constant ERR_INVALID_ID (err u3)) (define-constant ERR_TOO_EARLY (err u4)) (define-constant ERR_TX_VALUE_TOO_SMALL (err u5)) (define-constant ERR_TX_NOT_FOR_RECEIVER (err u6)) (define-constant ERR_ALREADY_DONE (err u7)) (define-constant ERR_INVALID_FUNGIBLE_TOKEN (err u8)) (define-constant ERR_NO_FT_RECEIVER (err u9)) (define-constant ERR_NATIVE_FAILURE (err u99)) \",\n   \"abi\": \"{\\\"maps\\\":[{\\\"key\\\":\\\"uint128\\\",\\\"name\\\":\\\"swaps\\\",\\\"value\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"btc-receiver\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}},{\\\"name\\\":\\\"done\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"principal\\\"},{\\\"name\\\":\\\"ft-receiver\\\",\\\"type\\\":{\\\"optional\\\":\\\"principal\\\"}},{\\\"name\\\":\\\"ft-sender\\\",\\\"type\\\":\\\"principal\\\"},{\\\"name\\\":\\\"sats\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"when\\\",\\\"type\\\":\\\"uint128\\\"}]}}],\\\"functions\\\":[{\\\"args\\\":[{\\\"name\\\":\\\"entry\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":8}}}]}},{\\\"name\\\":\\\"result\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"out\\\",\\\"type\\\":{\\\"optional\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint128\\\"}]}}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}]}}],\\\"name\\\":\\\"find-out\\\",\\\"access\\\":\\\"private\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"out\\\",\\\"type\\\":{\\\"optional\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint128\\\"}]}}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}]}}},{\\\"args\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"trait_reference\\\"}],\\\"name\\\":\\\"cancel\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"bool\\\",\\\"error\\\":\\\"uint128\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"sats\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"btc-receiver\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}},{\\\"name\\\":\\\"amount\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"ft-receiver\\\",\\\"type\\\":{\\\"optional\\\":\\\"principal\\\"}},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"trait_reference\\\"}],\\\"name\\\":\\\"create-swap\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"uint128\\\",\\\"error\\\":\\\"uint128\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"tx\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"ins\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"outpoint\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"hash\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"index\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"scriptSig\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":256}}},{\\\"name\\\":\\\"sequence\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"locktime\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"outs\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":8}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"version\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}],\\\"name\\\":\\\"get-out-value\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"out\\\",\\\"type\\\":{\\\"optional\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":\\\"uint128\\\"}]}}},{\\\"name\\\":\\\"pubscriptkey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":40}}}]},\\\"error\\\":\\\"none\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint128\\\"}],\\\"name\\\":\\\"set-ft-receiver\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"bool\\\",\\\"error\\\":\\\"uint128\\\"}}}},{\\\"args\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"block\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"height\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"merkle-root\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"nbits\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"nonce\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"parent\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"timestamp\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"version\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"tx\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"ins\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"outpoint\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"hash\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}}},{\\\"name\\\":\\\"index\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"scriptSig\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":256}}},{\\\"name\\\":\\\"sequence\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"locktime\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}},{\\\"name\\\":\\\"outs\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"scriptPubKey\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":128}}},{\\\"name\\\":\\\"value\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":8}}}]},\\\"length\\\":8}}},{\\\"name\\\":\\\"version\\\",\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":4}}}]}},{\\\"name\\\":\\\"proof\\\",\\\"type\\\":{\\\"tuple\\\":[{\\\"name\\\":\\\"hashes\\\",\\\"type\\\":{\\\"list\\\":{\\\"type\\\":{\\\"buffer\\\":{\\\"length\\\":32}},\\\"length\\\":12}}},{\\\"name\\\":\\\"tree-depth\\\",\\\"type\\\":\\\"uint128\\\"},{\\\"name\\\":\\\"tx-index\\\",\\\"type\\\":\\\"uint128\\\"}]}},{\\\"name\\\":\\\"ft\\\",\\\"type\\\":\\\"trait_reference\\\"}],\\\"name\\\":\\\"submit-swap\\\",\\\"access\\\":\\\"public\\\",\\\"outputs\\\":{\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"bool\\\",\\\"error\\\":\\\"uint128\\\"}}}}],\\\"variables\\\":[{\\\"name\\\":\\\"ERR_ALREADY_DONE\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_FAILED_TO_PARSE_TX\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_INVALID_FUNGIBLE_TOKEN\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_INVALID_ID\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_NATIVE_FAILURE\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_NO_FT_RECEIVER\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_TOO_EARLY\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_TX_NOT_FOR_RECEIVER\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_TX_VALUE_TOO_SMALL\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"ERR_VERIFICATION_FAILED\\\",\\\"type\\\":{\\\"response\\\":{\\\"ok\\\":\\\"none\\\",\\\"error\\\":\\\"uint128\\\"}},\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"expiry\\\",\\\"type\\\":\\\"uint128\\\",\\\"access\\\":\\\"constant\\\"},{\\\"name\\\":\\\"next-id\\\",\\\"type\\\":\\\"uint128\\\",\\\"access\\\":\\\"variable\\\"}],\\\"fungible_tokens\\\":[],\\\"non_fungible_tokens\\\":[]}\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"521874c4-c493-4edf-838f-6bfc3091839c","name":"Get contract events","request":{"name":"Get contract events","description":{"content":"Retrieves a list of events that have been triggered by a given `contract_id`","type":"text/plain"},"url":{"path":["extended","v1","contract",":contract_id","events"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"62802150","description":"max number of contract events to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first contract event to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C.satoshibles","key":"contract_id","description":"(Required) Contract identifier formatted as `<contract_address>.<contract_name>`"}]},"method":"GET","auth":null},"response":[{"id":"16af10d2-1354-4623-acfb-6ab2872dbbbb","name":"List of events","originalRequest":{"url":{"path":["extended","v1","contract",":contract_id","events"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"62802150"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C.satoshibles","key":"contract_id","description":"(Required) Contract identifier formatted as `<contract_address>.<contract_name>`"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"results\": [\n  {\n   \"event_index\": 1,\n   \"event_type\": \"smart_contract_log\",\n   \"contract_log\": {\n    \"contract_id\": \"ST2P7B9G6Y55QWZJ9B93DVSEG5S6Z4PFJHB3XRKHW.hello_world\",\n    \"topic\": \"print\",\n    \"value\": {\n     \"hex\": \"0x02000000124576656e74212048656c6c6f20776f726c64\",\n     \"repr\": \"\\\"Event! Hello world\\\"\"\n    }\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"50bdff9c-6ad7-4586-9671-090e577bf5b4","name":"Get contract interface","request":{"name":"Get contract interface","description":{"content":"Retrieves a contract interface with a given `contract_address` and `contract name`","type":"text/plain"},"url":{"path":["v2","contracts","interface",":contract_address",":contract_name"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"tip","value":"occaecat consequat laboris","description":"The Stacks chain tip to query from"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"satoshibles","key":"contract_name","description":"(Required) Contract name"}]},"method":"GET","auth":null},"response":[{"id":"61ef808f-4d10-49ff-91bd-8d8a35ae5d35","name":"Contract interface","originalRequest":{"url":{"path":["v2","contracts","interface",":contract_address",":contract_name"],"host":["{{baseUrl}}"],"query":[{"key":"tip","value":"occaecat consequat laboris"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"satoshibles","key":"contract_name","description":"(Required) Contract name"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"functions\": [\n  {\n   \"name\": \"get-value\",\n   \"access\": \"public\",\n   \"args\": [\n    {\n     \"name\": \"key\",\n     \"type\": {\n      \"buffer\": {\n       \"length\": 32\n      }\n     }\n    }\n   ],\n   \"outputs\": {\n    \"type\": {\n     \"response\": {\n      \"ok\": {\n       \"buffer\": {\n        \"length\": 32\n       }\n      },\n      \"error\": \"int128\"\n     }\n    }\n   }\n  },\n  {\n   \"name\": \"set-value\",\n   \"access\": \"public\",\n   \"args\": [\n    {\n     \"name\": \"key\",\n     \"type\": {\n      \"buffer\": {\n       \"length\": 32\n      }\n     }\n    },\n    {\n     \"name\": \"value\",\n     \"type\": {\n      \"buffer\": {\n       \"length\": 32\n      }\n     }\n    }\n   ],\n   \"outputs\": {\n    \"type\": {\n     \"response\": {\n      \"ok\": \"uint128\",\n      \"error\": \"none\"\n     }\n    }\n   }\n  },\n  {\n   \"name\": \"test-emit-event\",\n   \"access\": \"public\",\n   \"args\": [],\n   \"outputs\": {\n    \"type\": {\n     \"response\": {\n      \"ok\": \"uint128\",\n      \"error\": \"none\"\n     }\n    }\n   }\n  },\n  {\n   \"name\": \"test-event-types\",\n   \"access\": \"public\",\n   \"args\": [],\n   \"outputs\": {\n    \"type\": {\n     \"response\": {\n      \"ok\": \"uint128\",\n      \"error\": \"none\"\n     }\n    }\n   }\n  }\n ],\n \"variables\": [\n  {\n   \"name\": \"recipient\",\n   \"type\": \"principal\",\n   \"access\": \"constant\"\n  },\n  {\n   \"name\": \"sender\",\n   \"type\": \"principal\",\n   \"access\": \"constant\"\n  }\n ],\n \"maps\": [\n  {\n   \"name\": \"store\",\n   \"key\": [\n    {\n     \"name\": \"key\",\n     \"type\": {\n      \"buffer\": {\n       \"length\": 32\n      }\n     }\n    }\n   ],\n   \"value\": [\n    {\n     \"name\": \"value\",\n     \"type\": {\n      \"buffer\": {\n       \"length\": 32\n      }\n     }\n    }\n   ]\n  }\n ],\n \"fungible_tokens\": [\n  {\n   \"name\": \"novel-token-19\"\n  }\n ],\n \"non_fungible_tokens\": [\n  {\n   \"name\": \"hello-nft\",\n   \"type\": \"uint128\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"8ab1b82e-7132-47b5-91f6-efa3137b3f3a","name":"Get specific data-map inside a contract","request":{"name":"Get specific data-map inside a contract","description":{"content":"Attempt to fetch data from a contract data map. The contract is identified with Stacks Address `contract_address` and Contract Name `contract_address` in the URL path. The map is identified with [Map Name].\n\nThe key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.\n\nIn the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object.\n","type":"text/plain"},"url":{"path":["v2","map_entry",":contract_address",":contract_name",":map_name"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"proof","value":"62802150","description":"Returns object without the proof field when set to 0"},{"disabled":false,"key":"tip","value":"occaecat consequat laboris","description":"The Stacks chain tip to query from"}],"variable":[{"disabled":false,"type":"any","value":"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"newyorkcitycoin-core-v2","key":"contract_name","description":"(Required) Contract name"},{"disabled":false,"type":"any","value":"approved-contracts","key":"map_name","description":"(Required) Map name"}]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"\"0x0100000000000000000000000000000095\"","options":{"raw":{"language":"json"}}}},"response":[{"id":"8f9ee52a-cc66-4a7f-9c08-852878fa66c5","name":"Success","originalRequest":{"url":{"path":["v2","map_entry",":contract_address",":contract_name",":map_name"],"host":["{{baseUrl}}"],"query":[{"key":"proof","value":"62802150"},{"key":"tip","value":"occaecat consequat laboris"}],"variable":[{"disabled":false,"type":"any","value":"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"newyorkcitycoin-core-v2","key":"contract_name","description":"(Required) Contract name"},{"disabled":false,"type":"any","value":"approved-contracts","key":"map_name","description":"(Required) Map name"}]},"method":"POST","body":{"mode":"raw","raw":"\"0x0100000000000000000000000000000095\"","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"data\": \"0x0a0c000000010a6d6f6e737465722d69640100000000000000000000000000000001\",\n \"proof\": \"0x123...\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"15eee5d7-ba79-4cb1-9649-4ebda09e3cd2","name":"Failed loading data map","originalRequest":{"url":{"path":["v2","map_entry",":contract_address",":contract_name",":map_name"],"host":["{{baseUrl}}"],"query":[{"key":"proof","value":"62802150"},{"key":"tip","value":"occaecat consequat laboris"}],"variable":[{"disabled":false,"type":"any","value":"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"newyorkcitycoin-core-v2","key":"contract_name","description":"(Required) Contract name"},{"disabled":false,"type":"any","value":"approved-contracts","key":"map_name","description":"(Required) Map name"}]},"method":"POST","body":{"mode":"raw","raw":"\"0x0100000000000000000000000000000095\"","options":{"raw":{"language":"json"}}}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"f9ef4dbf-5f3b-402a-9cbd-eb0a786d76dd","name":"Get contract source","request":{"name":"Get contract source","description":{"content":"Retrieves the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data","type":"text/plain"},"url":{"path":["v2","contracts","source",":contract_address",":contract_name"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"proof","value":"62802150","description":"Returns object without the proof field if set to 0"},{"disabled":false,"key":"tip","value":"occaecat consequat laboris","description":"The Stacks chain tip to query from"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"satoshibles","key":"contract_name","description":"(Required) Contract name"}]},"method":"GET","auth":null},"response":[{"id":"e0fa7ab3-309e-49e7-9215-230579eec2f2","name":"Success","originalRequest":{"url":{"path":["v2","contracts","source",":contract_address",":contract_name"],"host":["{{baseUrl}}"],"query":[{"key":"proof","value":"62802150"},{"key":"tip","value":"occaecat consequat laboris"}],"variable":[{"disabled":false,"type":"any","value":"SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"satoshibles","key":"contract_name","description":"(Required) Contract name"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"source\": \"(define-constant sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\\n(define-constant recipient 'SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G)\\n\\n(define-fungible-token novel-token-19)\\n(begin (ft-mint? novel-token-19 u12 sender))\\n(begin (ft-transfer? novel-token-19 u2 sender recipient))\\n\\n(define-non-fungible-token hello-nft uint)\\n(begin (nft-mint? hello-nft u1 sender))\\n(begin (nft-mint? hello-nft u2 sender))\\n(begin (nft-transfer? hello-nft u1 sender recipient))\\n\\n(define-public (test-emit-event)\\n    (begin\\n        (print \\\"Event! Hello world\\\")\\n        (ok u1)))\\n(begin (test-emit-event))\\n\\n(define-public (test-event-types)\\n    (begin\\n        (unwrap-panic (ft-mint? novel-token-19 u3 recipient))\\n        (unwrap-panic (nft-mint? hello-nft u2 recipient))\\n        (unwrap-panic (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR))\\n        (unwrap-panic (stx-burn? u20 tx-sender))\\n        (ok u1)))\\n\\n(define-map store ((key (buff 32))) ((value (buff 32))))\\n(define-public (get-value (key (buff 32)))\\n    (begin\\n        (match (map-get? store ((key key)))\\n            entry (ok (get value entry))\\n            (err 0))))\\n(define-public (set-value (key (buff 32)) (value (buff 32)))\\n    (begin\\n        (map-set store ((key key)) ((value value)))\\n        (ok u1)))\",\n \"publish_height\": 3196,\n \"proof\": \"0000001104060000001ec4e...\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"bd707142-9c38-48ae-ac4c-71ed28f6b2a8","name":"Call read-only function","request":{"name":"Call read-only function","description":{"content":"Call a read-only public function on a given smart contract.\n\nThe smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format:\n","type":"text/plain"},"url":{"path":["v2","contracts","call-read",":contract_address",":contract_name",":function_name"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"tip","value":"occaecat consequat laboris","description":"The Stacks chain tip to query from"}],"variable":[{"disabled":false,"type":"any","value":"SP187Y7NRSG3T9Z9WTSWNEN3XRV1YSJWS81C7JKV7","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"imaginary-friends-zebras","key":"contract_name","description":"(Required) Contract name"},{"disabled":false,"type":"any","value":"get-token-uri","key":"function_name","description":"(Required) Function name"}]},"header":[{"key":"Content-Type","value":"application/json"}],"method":"POST","auth":null,"body":{"mode":"raw","raw":"{\n    \"sender\": \"STM9EQRAB3QAKF8NKTP15WJT7VHH4EWG3DJB4W29\",\n    \"arguments\": [\n        \"0x0100000000000000000000000000000095\"\n    ]\n}","options":{"raw":{"language":"json"}}}},"response":[{"id":"7a652649-aebc-45a1-a2ae-f23048e3b464","name":"Success","originalRequest":{"url":{"path":["v2","contracts","call-read",":contract_address",":contract_name",":function_name"],"host":["{{baseUrl}}"],"query":[{"key":"tip","value":"occaecat consequat laboris"}],"variable":[{"disabled":false,"type":"any","value":"SP187Y7NRSG3T9Z9WTSWNEN3XRV1YSJWS81C7JKV7","key":"contract_address","description":"(Required) Stacks address"},{"disabled":false,"type":"any","value":"imaginary-friends-zebras","key":"contract_name","description":"(Required) Contract name"},{"disabled":false,"type":"any","value":"get-token-uri","key":"function_name","description":"(Required) Function name"}]},"method":"POST","body":{"mode":"raw","raw":"{\n    \"sender\": \"STM9EQRAB3QAKF8NKTP15WJT7VHH4EWG3DJB4W29\",\n    \"arguments\": [\n        \"0x0100000000000000000000000000000095\"\n    ]\n}","options":{"raw":{"language":"json"}}}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"okay\": true,\n \"result\": \"0x111...\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"ccd12371-74b4-4e6c-99c0-7de774a99847","name":"Stacking Rewards","description":{"content":"Read-only endpoints to obtain Stacking reward details","type":"text/plain"},"item":[{"id":"9278dcd7-c0b3-49bb-b32d-b875ca01f937","name":"Get recent reward slot holders","request":{"name":"Get recent reward slot holders","description":{"content":"Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments.","type":"text/plain"},"url":{"path":["extended","v1","burnchain","reward_slot_holders"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"96","description":"max number of items to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of the first items to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"0fba46dc-f76f-46db-844e-36bd4ea5b8e8","name":"List of burnchain reward recipients and amounts","originalRequest":{"url":{"path":["extended","v1","burnchain","reward_slot_holders"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"96"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"total\": 2,\n \"results\": [\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 331,\n   \"address\": \"1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6\",\n   \"slot_index\": 0\n  },\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 331,\n   \"address\": \"1M3bvWB9CRh5BTumeVxtHDEV6W4S2R9AZw\",\n   \"slot_index\": 0\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"e8fa450f-dfff-4922-ab29-f32149889c16","name":"Get recent reward slot holder entries for the given address","request":{"name":"Get recent reward slot holder entries for the given address","description":{"content":"Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address.","type":"text/plain"},"url":{"path":["extended","v1","burnchain","reward_slot_holders",":address"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"62802150","description":"max number of items to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of the first items to fetch"}],"variable":[{"disabled":false,"type":"any","value":"36hQtSEXBMevo5chpxhfAGiCTSC34QKgda","key":"address","description":"(Required) Reward slot holder recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format"}]},"method":"GET","auth":null},"response":[{"id":"65d70a0d-dca1-417b-a7ea-ded3b5c61cdc","name":"List of burnchain reward recipients and amounts","originalRequest":{"url":{"path":["extended","v1","burnchain","reward_slot_holders",":address"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"62802150"},{"key":"offset","value":"42000"}],"variable":[{"disabled":false,"type":"any","value":"36hQtSEXBMevo5chpxhfAGiCTSC34QKgda","key":"address","description":"(Required) Reward slot holder recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"total\": 2,\n \"results\": [\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 331,\n   \"address\": \"1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6\",\n   \"slot_index\": 0\n  },\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 331,\n   \"address\": \"1M3bvWB9CRh5BTumeVxtHDEV6W4S2R9AZw\",\n   \"slot_index\": 0\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"095ae4c3-d146-4216-a6d9-7cd2ec9adaa5","name":"Get recent burnchain reward recipients","request":{"name":"Get recent burnchain reward recipients","description":{"content":"Retrieves a list of recent burnchain (e.g. Bitcoin) reward recipients with the associated amounts and block info","type":"text/plain"},"url":{"path":["extended","v1","burnchain","rewards"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"96","description":"max number of rewards to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first rewards to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"cf5245c7-6a24-42f1-b264-119d2da8b73b","name":"List of burnchain reward recipients and amounts","originalRequest":{"url":{"path":["extended","v1","burnchain","rewards"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"96"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"results\": [\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 331,\n   \"burn_amount\": \"12000\",\n   \"reward_recipient\": \"1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6\",\n   \"reward_amount\": \"5000\",\n   \"reward_index\": 0\n  },\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 336,\n   \"burn_amount\": \"14000\",\n   \"reward_recipient\": \"1M3bvWB9CRh5BTumeVxtHDEV6W4S2R9AZw\",\n   \"reward_amount\": \"2000\",\n   \"reward_index\": 0\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"3191c808-d0c7-46b4-a992-a8f67617ac50","name":"Get recent burnchain reward for the given recipient","request":{"name":"Get recent burnchain reward for the given recipient","description":{"content":"Retrieves a list of recent burnchain (e.g. Bitcoin) rewards for the given recipient with the associated amounts and block info","type":"text/plain"},"url":{"path":["extended","v1","burnchain","rewards",":address"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"62802150","description":"max number of rewards to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first rewards to fetch"}],"variable":[{"disabled":false,"type":"any","value":"36hQtSEXBMevo5chpxhfAGiCTSC34QKgda","key":"address","description":"(Required) Reward recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format"}]},"method":"GET","auth":null},"response":[{"id":"181a6494-2eda-410c-b296-697d587aaa30","name":"List of burnchain reward recipients and amounts","originalRequest":{"url":{"path":["extended","v1","burnchain","rewards",":address"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"62802150"},{"key":"offset","value":"42000"}],"variable":[{"disabled":false,"type":"any","value":"36hQtSEXBMevo5chpxhfAGiCTSC34QKgda","key":"address","description":"(Required) Reward recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 20,\n \"offset\": 0,\n \"results\": [\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 331,\n   \"burn_amount\": \"12000\",\n   \"reward_recipient\": \"1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6\",\n   \"reward_amount\": \"5000\",\n   \"reward_index\": 0\n  },\n  {\n   \"canonical\": true,\n   \"burn_block_hash\": \"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904\",\n   \"burn_block_height\": 336,\n   \"burn_amount\": \"14000\",\n   \"reward_recipient\": \"1M3bvWB9CRh5BTumeVxtHDEV6W4S2R9AZw\",\n   \"reward_amount\": \"2000\",\n   \"reward_index\": 0\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"21357489-603e-4929-adbb-54ef7024ad43","name":"Get total burnchain rewards for the given recipient","request":{"name":"Get total burnchain rewards for the given recipient","description":{"content":"Retrieves the total burnchain (e.g. Bitcoin) rewards for a given recipient `address`","type":"text/plain"},"url":{"path":["extended","v1","burnchain","rewards",":address","total"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"36hQtSEXBMevo5chpxhfAGiCTSC34QKgda","key":"address","description":"(Required) Reward recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format"}]},"method":"GET","auth":null},"response":[{"id":"de224380-5d89-48ce-9675-fa28a8bd6920","name":"List of burnchain reward recipients and amounts","originalRequest":{"url":{"path":["extended","v1","burnchain","rewards",":address","total"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"36hQtSEXBMevo5chpxhfAGiCTSC34QKgda","key":"address","description":"(Required) Reward recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"reward_recipient\": \"1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6\",\n \"reward_amount\": \"18000\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"b166226d-f70c-4575-b656-9a54fd8bddd6","name":"Transactions","description":{"content":"Endpoints to obtain transaction details and to broadcast transactions to the network","type":"text/plain"},"item":[{"id":"e61f2436-2a64-40b1-b908-02bccb7243d8","name":"Get recent transactions","request":{"name":"Get recent transactions","description":{"content":"Retrieves all recently mined transactions\n\nIf using TypeScript, import typings for this response from our types package:\n\n`import type { TransactionResults } from '@stacks/stacks-blockchain-api-types';`\n","type":"text/plain"},"url":{"path":["extended","v1","tx"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"100","description":"max number of transactions to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first transaction to fetch"},{"disabled":false,"key":"type","value":"token_transfer","description":"Filter by transaction type"},{"disabled":false,"key":"type","value":"token_transfer","description":"Filter by transaction type"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"b6945e1a-27ec-41c0-a1ba-e78823ccf179","name":"List of transactions","originalRequest":{"url":{"path":["extended","v1","tx"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"100"},{"key":"offset","value":"42000"},{"key":"type","value":"contract_call"},{"key":"type","value":"smart_contract"},{"key":"unanchored","value":"true"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 10,\n \"offset\": 0,\n \"total\": 101922,\n \"results\": [\n  {\n   \"tx_id\": \"0x20dedbef812e44d712569224411b27324b68ab4667321a4badd5e81ba76bf0eb\",\n   \"nonce\": 269,\n   \"fee_rate\": \"0\",\n   \"sender_address\": \"SPQXK10DBF5ECAM30XVE3EJA8DNZF3VE0BK4MKV\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"on_chain_only\",\n   \"is_unanchored\": false,\n   \"block_hash\": \"0x28a9e2749b82bdc058776781a5abd5c9a6efed38f05545a8a51152655b8e1f4b\",\n   \"parent_block_hash\": \"0x3789b75ccfe7f2acf85c3f069fd5b8f95f73aba5332fa618243957d1c017a2a3\",\n   \"block_height\": 21709,\n   \"burn_block_time\": 1626286436,\n   \"burn_block_time_iso\": \"2021-07-14T18:13:56.000Z\",\n   \"canonical\": true,\n   \"tx_index\": 0,\n   \"tx_status\": \"success\",\n   \"tx_result\": {\n    \"hex\": \"0x0703\",\n    \"repr\": \"(ok true)\"\n   },\n   \"microblock_hash\": \"\",\n   \"microblock_sequence\": 2147483647,\n   \"microblock_canonical\": true,\n   \"event_count\": 0,\n   \"events\": [],\n   \"tx_type\": \"coinbase\",\n   \"coinbase_payload\": {\n    \"data\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"c8184c60-5edc-42e5-9de9-047a81271395","name":"Get mempool transactions","request":{"name":"Get mempool transactions","description":{"content":"Retrieves all transactions that have been recently broadcast to the mempool. These are pending transactions awaiting confirmation.\n\nIf you need to monitor new transactions, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.\n","type":"text/plain"},"url":{"path":["extended","v1","tx","mempool"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"sender_address","value":"SP1GPBP8NBRXDRJBFQBV7KMAZX1Z7W2RFWJEH0V10","description":"Filter to only return transactions with this sender address."},{"disabled":false,"key":"recipient_address","value":"occaecat consequat laboris","description":"Filter to only return transactions with this recipient address (only applicable for STX transfer tx types)."},{"disabled":false,"key":"address","value":"occaecat consequat laboris","description":"Filter to only return transactions with this address as the sender or recipient (recipient only applicable for STX transfer tx types)."},{"disabled":false,"key":"limit","value":"20","description":"max number of mempool transactions to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first mempool transaction to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"1d56dbbb-c83f-4e2a-b305-130f92b6487b","name":"List of mempool transactions","originalRequest":{"url":{"path":["extended","v1","tx","mempool"],"host":["{{baseUrl}}"],"query":[{"key":"sender_address","value":"SP1GPBP8NBRXDRJBFQBV7KMAZX1Z7W2RFWJEH0V10"},{"key":"recipient_address","value":"occaecat consequat laboris"},{"key":"address","value":"occaecat consequat laboris"},{"key":"limit","value":"20"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 96,\n \"offset\": 0,\n \"total\": 5,\n \"results\": [\n  {\n   \"tx_id\": \"0xb31df5a363dad31723324cb5e0eefa04d491519fd30827a521cbc830114aa50c\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"token_transfer\",\n   \"receipt_time\": 1598288370,\n   \"receipt_time_iso\": \"2020-08-24T16:59:30.000Z\",\n   \"fee_rate\": \"180\",\n   \"sender_address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"token_transfer\": {\n    \"recipient_address\": \"ST1GY25DM8RZV4X15X07THRZ2C5NMWPGQWKFGV87F\",\n    \"amount\": \"500000\",\n    \"memo\": \"0x46617563657400000000000000000000000000000000000000000000000000000000\"\n   }\n  },\n  {\n   \"tx_id\": \"0x5bed8e3f801cb4e2c74d2815a092f7c1c6a35f2fce4a80c80ca70848d34cb395\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"token_transfer\",\n   \"receipt_time\": 1598282326,\n   \"receipt_time_iso\": \"2020-08-24T15:18:46.000Z\",\n   \"fee_rate\": \"180\",\n   \"sender_address\": \"ST1PS1KF93VBY5A1JV7TM66KN046KP3E3761DBSAG\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"token_transfer\": {\n    \"recipient_address\": \"ST2H33S8SEY27QKEKQKR6S5PECYPKY45CQYGGQR8X\",\n    \"amount\": \"1000\",\n    \"memo\": \"0x00000000000000000000000000000000000000000000000000000000000000000000\"\n   }\n  },\n  {\n   \"tx_id\": \"0x9916036fde08a207e581cdcabc18ff55469861cb81194ab0e3e7c9a02cd5a17c\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598258958,\n   \"receipt_time_iso\": \"2020-08-24T08:49:18.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8.test-loans-1\",\n    \"source_code\": \"(define-data-var stx-loaned int 0)\\n(define-data-var lockup-period int 0)\\n(define-data-var stx-return int 0)\\n(define-public (get-stx-return (stx uint) (months uint))\\n    (ok\\n        (begin\\n            (var-set stx-loaned (to-int(stx))\\n            (var-set lockup-period (to-int(months))\\n            (calculate-stx-return)\\n            (print (var-get stx-return))\\n            (transfer-to-server)\\n        )\\n    )\\n)\\n(define-private (calculate-stx-return)\\n    (ok\\n        (begin\\n            (var-set stx-return (- (+ (* (/ (* (var-get stx-loaned) 5) 100) (var-get lockup-period)) (var-get stx-loaned)) 5))\\n        )\\n    )\\n)\\n(define-private (transfer-to-server)\\n  (begin\\n    (unwrap-panic (stx-transfer? (to-uint (var-get stx-loaned)) tx-sender 'ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8))\\n    (ok (to-uint (var-get stx-loaned)))\\n  )\\n)\"\n   }\n  },\n  {\n   \"tx_id\": \"0x871fb186c8d6ac6ede2822c71074d9884b593c0d7f2d0d6e8516e615484d7501\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598230365,\n   \"receipt_time_iso\": \"2020-08-24T00:52:45.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230358601\",\n    \"source_code\": \";; ## CUSTOM FUNCTION TO EXTRACT A SUBSTRING\\n\\n(define-read-only (subs (source (buff 10)) \\n                        (start int) \\n                        (end int))\\n (begin\\n  (unwrap-panic (if (and (<= 0 start) (<= start 10)) (ok 1) (err \\\"Out of bounds: start\\\")))\\n  (unwrap-panic (if (and (<= 0 end) (<= end 10)) (ok 1) (err \\\"Out of bounds: end\\\")))\\n  (let ((temp1 (fold subs1 source \\n                  {start: start, end: end, cursor: 1, data: \\\"\\\"})))\\n   (let ((data (get data temp1))) \\n       data))))\\n\\n    \\n;; Call the function to extract the substring between the bounds:\\n\\n;; (subs \\\"123456789\\\" 2 5)\\n\\n(define-read-only (subs1 \\n                    (ch (buff 1))\\n                    (acc {data: (buff 10), \\n                          start: int,\\n                          end: int,\\n                          cursor: int})) \\n  (let ((data (get data acc))\\n        (start (get start acc))\\n        (cursor (get cursor acc))\\n        (end (get end acc)))                                     \\n    (let ((temp2 \\n           {cursor: (+ 1 cursor),\\n            data: (default-to \\\"\\\"\\n                     (as-max-len?\\n                       (concat data \\n                         (if (let ((temp3 start)\\n                                   (temp4 cursor)\\n                                   (temp5 end))\\n                              (and (<= temp3 temp4)\\n                               (<= temp4 temp5)))\\n                           ch \\n                           \\\"\\\"))\\n                       u10))}))\\n     {start: (get start acc),\\n      end: (get end acc),\\n      cursor: (get cursor temp2),\\n      data: (get data temp2)})))\\n\"\n   }\n  },\n  {\n   \"tx_id\": \"0x66df10d99d3a26018f521d60e9f744b083386c73e47ad39c394d570abee55f1f\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598230066,\n   \"receipt_time_iso\": \"2020-08-24T00:47:46.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230054238\",\n    \"source_code\": \"(define-read-only (subs1 \\n                    (ch (buff 1))\\n                    (acc {data: (buff 10), \\n                          start: int,\\n                          end: int,\\n                          cursor: int}))\\n (begin\\n  (unwrap-panic (if (and (<= 1 (get start acc)) (<= (get start acc) 10)) (ok 1) (err \\\"Out of bounds: start\\\")))\\n  (unwrap-panic (if (and (<= 1 (get end acc)) (<= (get end acc) 10)) (ok 1) (err \\\"Out of bounds: end\\\")))\\n  (unwrap-panic (if (and (<= 1 (get cursor acc)) (<= (get cursor acc) 10)) (ok 1) (err \\\"Out of bounds: cursor\\\")))\\n  (let ((data (get data acc))\\n        (start (get start acc))\\n        (cursor (get cursor acc))\\n        (end (get end acc)))                                     \\n    (let ((temp1 \\n           {cursor: (+ 1 cursor),\\n            data: (default-to \\\"\\\"\\n                     (as-max-len?\\n                       (concat data \\n                         (if (let ((temp2 start)\\n                                   (temp3 cursor)\\n                                   (temp4 end))\\n                              (and (<= temp2 temp3)\\n                               (<= temp3 temp4)))\\n                           ch \\n                           \\\"\\\"))\\n                       u10))}))\\n     {start: (get start acc),\\n      end: (get end acc),\\n      cursor: (get cursor temp1),\\n      data: (get data temp1)}))))\\n\"\n   }\n  },\n  {\n   \"tx_id\": \"0x7402d8e52204d6c8cba7465e159e79750338c3ee31d4fe6ddef1d4d226304b65\",\n   \"nonce\": 1,\n   \"fee_rate\": \"227\",\n   \"sender_address\": \"SP1HJDP35SSMYP98CG8SHMYHMZDK0A495ZCH6ARYS\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [\n    {\n     \"type\": \"stx\",\n     \"condition_code\": \"sent_equal_to\",\n     \"amount\": \"88884500\",\n     \"principal\": {\n      \"type_id\": \"principal_standard\",\n      \"address\": \"SP2J6HSSDYSTM71S0K0KK4YWRKX59JN1AD52M4B59\"\n     }\n    }\n   ],\n   \"anchor_mode\": \"any\",\n   \"tx_status\": \"pending\",\n   \"receipt_time\": 1626286631,\n   \"receipt_time_iso\": \"2021-07-14T18:17:11.000Z\",\n   \"tx_type\": \"contract_call\",\n   \"contract_call\": {\n    \"contract_id\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo\",\n    \"function_name\": \"send-many\",\n    \"function_signature\": \"(define-public (send-many (recipients (list 200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))\",\n    \"function_args\": [\n     {\n      \"hex\": \"0x0b000000010c00000003046d656d6f020000000e357a62597346716a52336d736b7102746f0516b734e97043840503dc1091661c105d32b7c5c75d047573747801000000000000000000000000054c4514\",\n      \"repr\": \"(list (tuple (memo 0x357a62597346716a52336d736b71) (to SP2VK9TBG8E20A0YW228PC70GBMSBFHE7BNVMKB57) (ustx u88884500)))\",\n      \"name\": \"recipients\",\n      \"type\": \"(list 200 (tuple (memo (buff 34)) (to principal) (ustx uint)))\"\n     }\n    ]\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"dd77ce4c-1b05-4f2b-94ef-417a28f7fef3","name":"Get dropped mempool transactions","request":{"name":"Get dropped mempool transactions","description":{"content":"Retrieves all recently-broadcast transactions that have been dropped from the mempool.\n\nTransactions are dropped from the mempool if:\n * they were stale and awaiting garbage collection or,\n * were expensive,  or\n * were replaced with a new fee\n","type":"text/plain"},"url":{"path":["extended","v1","tx","mempool","dropped"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"96","description":"max number of mempool transactions to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first mempool transaction to fetch"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"f25f1913-2364-4304-90e9-9c6dce9eb342","name":"List of dropped mempool transactions","originalRequest":{"url":{"path":["extended","v1","tx","mempool","dropped"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"96"},{"key":"offset","value":"42000"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 96,\n \"offset\": 0,\n \"total\": 5,\n \"results\": [\n  {\n   \"tx_id\": \"0xb31df5a363dad31723324cb5e0eefa04d491519fd30827a521cbc830114aa50c\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"token_transfer\",\n   \"receipt_time\": 1598288370,\n   \"receipt_time_iso\": \"2020-08-24T16:59:30.000Z\",\n   \"fee_rate\": \"180\",\n   \"sender_address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"token_transfer\": {\n    \"recipient_address\": \"ST1GY25DM8RZV4X15X07THRZ2C5NMWPGQWKFGV87F\",\n    \"amount\": \"500000\",\n    \"memo\": \"0x46617563657400000000000000000000000000000000000000000000000000000000\"\n   }\n  },\n  {\n   \"tx_id\": \"0x5bed8e3f801cb4e2c74d2815a092f7c1c6a35f2fce4a80c80ca70848d34cb395\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"token_transfer\",\n   \"receipt_time\": 1598282326,\n   \"receipt_time_iso\": \"2020-08-24T15:18:46.000Z\",\n   \"fee_rate\": \"180\",\n   \"sender_address\": \"ST1PS1KF93VBY5A1JV7TM66KN046KP3E3761DBSAG\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"token_transfer\": {\n    \"recipient_address\": \"ST2H33S8SEY27QKEKQKR6S5PECYPKY45CQYGGQR8X\",\n    \"amount\": \"1000\",\n    \"memo\": \"0x00000000000000000000000000000000000000000000000000000000000000000000\"\n   }\n  },\n  {\n   \"tx_id\": \"0x9916036fde08a207e581cdcabc18ff55469861cb81194ab0e3e7c9a02cd5a17c\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598258958,\n   \"receipt_time_iso\": \"2020-08-24T08:49:18.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8.test-loans-1\",\n    \"source_code\": \"(define-data-var stx-loaned int 0)\\n(define-data-var lockup-period int 0)\\n(define-data-var stx-return int 0)\\n(define-public (get-stx-return (stx uint) (months uint))\\n    (ok\\n        (begin\\n            (var-set stx-loaned (to-int(stx))\\n            (var-set lockup-period (to-int(months))\\n            (calculate-stx-return)\\n            (print (var-get stx-return))\\n            (transfer-to-server)\\n        )\\n    )\\n)\\n(define-private (calculate-stx-return)\\n    (ok\\n        (begin\\n            (var-set stx-return (- (+ (* (/ (* (var-get stx-loaned) 5) 100) (var-get lockup-period)) (var-get stx-loaned)) 5))\\n        )\\n    )\\n)\\n(define-private (transfer-to-server)\\n  (begin\\n    (unwrap-panic (stx-transfer? (to-uint (var-get stx-loaned)) tx-sender 'ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8))\\n    (ok (to-uint (var-get stx-loaned)))\\n  )\\n)\"\n   }\n  },\n  {\n   \"tx_id\": \"0x871fb186c8d6ac6ede2822c71074d9884b593c0d7f2d0d6e8516e615484d7501\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598230365,\n   \"receipt_time_iso\": \"2020-08-24T00:52:45.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230358601\",\n    \"source_code\": \";; ## CUSTOM FUNCTION TO EXTRACT A SUBSTRING\\n\\n(define-read-only (subs (source (buff 10)) \\n                        (start int) \\n                        (end int))\\n (begin\\n  (unwrap-panic (if (and (<= 0 start) (<= start 10)) (ok 1) (err \\\"Out of bounds: start\\\")))\\n  (unwrap-panic (if (and (<= 0 end) (<= end 10)) (ok 1) (err \\\"Out of bounds: end\\\")))\\n  (let ((temp1 (fold subs1 source \\n                  {start: start, end: end, cursor: 1, data: \\\"\\\"})))\\n   (let ((data (get data temp1))) \\n       data))))\\n\\n    \\n;; Call the function to extract the substring between the bounds:\\n\\n;; (subs \\\"123456789\\\" 2 5)\\n\\n(define-read-only (subs1 \\n                    (ch (buff 1))\\n                    (acc {data: (buff 10), \\n                          start: int,\\n                          end: int,\\n                          cursor: int})) \\n  (let ((data (get data acc))\\n        (start (get start acc))\\n        (cursor (get cursor acc))\\n        (end (get end acc)))                                     \\n    (let ((temp2 \\n           {cursor: (+ 1 cursor),\\n            data: (default-to \\\"\\\"\\n                     (as-max-len?\\n                       (concat data \\n                         (if (let ((temp3 start)\\n                                   (temp4 cursor)\\n                                   (temp5 end))\\n                              (and (<= temp3 temp4)\\n                               (<= temp4 temp5)))\\n                           ch \\n                           \\\"\\\"))\\n                       u10))}))\\n     {start: (get start acc),\\n      end: (get end acc),\\n      cursor: (get cursor temp2),\\n      data: (get data temp2)})))\\n\"\n   }\n  },\n  {\n   \"tx_id\": \"0x66df10d99d3a26018f521d60e9f744b083386c73e47ad39c394d570abee55f1f\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598230066,\n   \"receipt_time_iso\": \"2020-08-24T00:47:46.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230054238\",\n    \"source_code\": \"(define-read-only (subs1 \\n                    (ch (buff 1))\\n                    (acc {data: (buff 10), \\n                          start: int,\\n                          end: int,\\n                          cursor: int}))\\n (begin\\n  (unwrap-panic (if (and (<= 1 (get start acc)) (<= (get start acc) 10)) (ok 1) (err \\\"Out of bounds: start\\\")))\\n  (unwrap-panic (if (and (<= 1 (get end acc)) (<= (get end acc) 10)) (ok 1) (err \\\"Out of bounds: end\\\")))\\n  (unwrap-panic (if (and (<= 1 (get cursor acc)) (<= (get cursor acc) 10)) (ok 1) (err \\\"Out of bounds: cursor\\\")))\\n  (let ((data (get data acc))\\n        (start (get start acc))\\n        (cursor (get cursor acc))\\n        (end (get end acc)))                                     \\n    (let ((temp1 \\n           {cursor: (+ 1 cursor),\\n            data: (default-to \\\"\\\"\\n                     (as-max-len?\\n                       (concat data \\n                         (if (let ((temp2 start)\\n                                   (temp3 cursor)\\n                                   (temp4 end))\\n                              (and (<= temp2 temp3)\\n                               (<= temp3 temp4)))\\n                           ch \\n                           \\\"\\\"))\\n                       u10))}))\\n     {start: (get start acc),\\n      end: (get end acc),\\n      cursor: (get cursor temp1),\\n      data: (get data temp1)}))))\\n\"\n   }\n  },\n  {\n   \"tx_id\": \"0x7402d8e52204d6c8cba7465e159e79750338c3ee31d4fe6ddef1d4d226304b65\",\n   \"nonce\": 1,\n   \"fee_rate\": \"227\",\n   \"sender_address\": \"SP1HJDP35SSMYP98CG8SHMYHMZDK0A495ZCH6ARYS\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [\n    {\n     \"type\": \"stx\",\n     \"condition_code\": \"sent_equal_to\",\n     \"amount\": \"88884500\",\n     \"principal\": {\n      \"type_id\": \"principal_standard\",\n      \"address\": \"SP2J6HSSDYSTM71S0K0KK4YWRKX59JN1AD52M4B59\"\n     }\n    }\n   ],\n   \"anchor_mode\": \"any\",\n   \"tx_status\": \"pending\",\n   \"receipt_time\": 1626286631,\n   \"receipt_time_iso\": \"2021-07-14T18:17:11.000Z\",\n   \"tx_type\": \"contract_call\",\n   \"contract_call\": {\n    \"contract_id\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo\",\n    \"function_name\": \"send-many\",\n    \"function_signature\": \"(define-public (send-many (recipients (list 200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))\",\n    \"function_args\": [\n     {\n      \"hex\": \"0x0b000000010c00000003046d656d6f020000000e357a62597346716a52336d736b7102746f0516b734e97043840503dc1091661c105d32b7c5c75d047573747801000000000000000000000000054c4514\",\n      \"repr\": \"(list (tuple (memo 0x357a62597346716a52336d736b71) (to SP2VK9TBG8E20A0YW228PC70GBMSBFHE7BNVMKB57) (ustx u88884500)))\",\n      \"name\": \"recipients\",\n      \"type\": \"(list 200 (tuple (memo (buff 34)) (to principal) (ustx uint)))\"\n     }\n    ]\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"4d96a89f-8daa-4e2f-abfb-b2c517133794","name":"Get statistics for mempool transactions","request":{"name":"Get statistics for mempool transactions","description":{"content":"Queries for transactions counts, age (by block height), fees (simple average), and size.\nAll results broken down by transaction type and percentiles (p25, p50, p75, p95).\n","type":"text/plain"},"url":{"path":["extended","v1","tx","mempool","stats"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","auth":null},"response":[{"id":"69ec457e-b1c3-4a2c-9333-d99a584321a0","name":"Statistics for mempool transactions","originalRequest":{"url":{"path":["extended","v1","tx","mempool","stats"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"tx_type_counts\": {\n  \"token_transfer\": 130,\n  \"smart_contract\": 2,\n  \"contract_call\": 310,\n  \"poison_microblock\": 0\n },\n \"tx_simple_fee_averages\": {\n  \"token_transfer\": {\n   \"p25\": 3000,\n   \"p50\": 3000,\n   \"p75\": 6000,\n   \"p95\": 401199.9999999995\n  },\n  \"smart_contract\": {\n   \"p25\": 837500,\n   \"p50\": 925000,\n   \"p75\": 1012500,\n   \"p95\": 1082500\n  },\n  \"contract_call\": {\n   \"p25\": 3000,\n   \"p50\": 10368,\n   \"p75\": 100000,\n   \"p95\": 1000000\n  },\n  \"poison_microblock\": {\n   \"p25\": null,\n   \"p50\": null,\n   \"p75\": null,\n   \"p95\": null\n  }\n },\n \"tx_ages\": {\n  \"token_transfer\": {\n   \"p25\": 167.5,\n   \"p50\": 45,\n   \"p75\": 1,\n   \"p95\": 0\n  },\n  \"smart_contract\": {\n   \"p25\": 185.5,\n   \"p50\": 129,\n   \"p75\": 72.5,\n   \"p95\": 27.30000000000001\n  },\n  \"contract_call\": {\n   \"p25\": 189,\n   \"p50\": 127.5,\n   \"p75\": 9.5,\n   \"p95\": 0\n  },\n  \"poison_microblock\": {\n   \"p25\": null,\n   \"p50\": null,\n   \"p75\": null,\n   \"p95\": null\n  }\n },\n \"tx_byte_sizes\": {\n  \"token_transfer\": {\n   \"p25\": 180,\n   \"p50\": 180,\n   \"p75\": 180,\n   \"p95\": 180\n  },\n  \"smart_contract\": {\n   \"p25\": 706.75,\n   \"p50\": 814.5,\n   \"p75\": 922.25,\n   \"p95\": 1008.45\n  },\n  \"contract_call\": {\n   \"p25\": 291,\n   \"p50\": 435,\n   \"p75\": 462,\n   \"p95\": 597\n  },\n  \"poison_microblock\": {\n   \"p25\": null,\n   \"p50\": null,\n   \"p75\": null,\n   \"p95\": null\n  }\n }\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"ed7dd94b-187c-4c0d-9596-91b8a816e115","name":"Get list of details for transactions","request":{"name":"Get list of details for transactions","description":{"content":"Retrieves a list of transactions for a given list of transaction IDs\n\nIf using TypeScript, import typings for this response from our types package:\n\n`import type { Transaction } from '@stacks/stacks-blockchain-api-types';`\n","type":"text/plain"},"url":{"path":["extended","v1","tx","multiple"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"tx_id","value":"ullamco Excepteur","description":"(Required) Array of transaction ids"},{"disabled":false,"key":"tx_id","value":"voluptate eu minim","description":"(Required) Array of transaction ids"},{"disabled":false,"key":"event_offset","value":"0","description":"The number of events to skip"},{"disabled":false,"key":"event_limit","value":"96","description":"The numbers of events to return"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"3361bfdc-da72-4d77-8fe2-70b5fb601a30","name":"Returns list of transactions with their details for corresponding requested tx_ids.","originalRequest":{"url":{"path":["extended","v1","tx","multiple"],"host":["{{baseUrl}}"],"query":[{"key":"tx_id","value":"cupidatat et"},{"key":"tx_id","value":"ea do elit"},{"key":"event_offset","value":"0"},{"key":"event_limit","value":"96"},{"key":"unanchored","value":"true"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"0x8911000000000000000000000000000000000000000000000000000000000000\": {\n  \"found\": true,\n  \"result\": {\n   \"tx_id\": \"0x8911000000000000000000000000000000000000000000000000000000000000\",\n   \"nonce\": 0,\n   \"fee_rate\": \"1234\",\n   \"sender_address\": \"sender-addr\",\n   \"sponsored\": true,\n   \"sponsor_address\": \"sponsor-addr\",\n   \"post_condition_mode\": \"allow\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"is_unanchored\": false,\n   \"block_hash\": \"0x0123\",\n   \"parent_block_hash\": \"0x5678\",\n   \"block_height\": 0,\n   \"burn_block_time\": 39486,\n   \"burn_block_time_iso\": \"1970-01-01T10:58:06.000Z\",\n   \"parent_burn_block_time\": 1626122935,\n   \"parent_burn_block_time_iso\": \"2021-07-12T20:48:55.000Z\",\n   \"canonical\": true,\n   \"tx_index\": 4,\n   \"tx_status\": \"success\",\n   \"microblock_hash\": \"\",\n   \"microblock_sequence\": 2147483647,\n   \"microblock_canonical\": true,\n   \"event_count\": 0,\n   \"events\": [],\n   \"execution_cost_read_count\": 0,\n   \"execution_cost_read_length\": 0,\n   \"execution_cost_runtime\": 0,\n   \"execution_cost_write_count\": 0,\n   \"execution_cost_write_length\": 0,\n   \"tx_type\": \"coinbase\"\n  }\n },\n \"0x8915000000000000000000000000000000000000000000000000000000000000\": {\n  \"found\": true,\n  \"result\": {\n   \"tx_id\": \"0x8915000000000000000000000000000000000000000000000000000000000000\",\n   \"nonce\": 1000,\n   \"fee_rate\": \"1234\",\n   \"sender_address\": \"sender-addr\",\n   \"sponsored\": true,\n   \"sponsor_address\": \"sponsor-addr\",\n   \"post_condition_mode\": \"allow\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"is_unanchored\": false,\n   \"block_hash\": \"0x0123\",\n   \"parent_block_hash\": \"0x5678\",\n   \"block_height\": 0,\n   \"burn_block_time\": 39486,\n   \"burn_block_time_iso\": \"1970-01-01T10:58:06.000Z\",\n   \"parent_burn_block_time\": 1626122935,\n   \"parent_burn_block_time_iso\": \"2021-07-12T20:48:55.000Z\",\n   \"canonical\": true,\n   \"tx_index\": 4,\n   \"tx_status\": \"success\",\n   \"microblock_hash\": \"\",\n   \"microblock_sequence\": 2147483647,\n   \"microblock_canonical\": true,\n   \"event_count\": 0,\n   \"events\": [],\n   \"execution_cost_read_count\": 0,\n   \"execution_cost_read_length\": 0,\n   \"execution_cost_runtime\": 0,\n   \"execution_cost_write_count\": 0,\n   \"execution_cost_write_length\": 0,\n   \"tx_type\": \"coinbase\"\n  }\n },\n \"0x8912000000000000000000000000000000000000000000000000000000000000\": {\n  \"found\": true,\n  \"result\": {\n   \"tx_id\": \"0x8912000000000000000000000000000000000000000000000000000000000000\",\n   \"nonce\": 0,\n   \"fee_rate\": \"1234\",\n   \"sender_address\": \"sender-addr\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"allow\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"tx_status\": \"pending\",\n   \"receipt_time\": 1594307695,\n   \"receipt_time_iso\": \"2020-07-09T15:14:55.000Z\",\n   \"tx_type\": \"coinbase\"\n  }\n },\n \"0x8914000000000000000000000000000000000000000000000000000000000000\": {\n  \"found\": false,\n  \"result\": {\n   \"tx_id\": \"0x8914000000000000000000000000000000000000000000000000000000000000\"\n  }\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"a1050f26-0b07-4992-a55e-0c5e437ebd26","name":"Could not find any transaction by ID","originalRequest":{"url":{"path":["extended","v1","tx","multiple"],"host":["{{baseUrl}}"],"query":[{"key":"tx_id","value":"cupidatat et"},{"key":"tx_id","value":"ea do elit"},{"key":"event_offset","value":"0"},{"key":"event_limit","value":"96"},{"key":"unanchored","value":"true"}],"variable":[]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"fd513f82-2568-48b3-a593-dbd5b90055d2","name":"Get transaction","request":{"name":"Get transaction","description":{"content":"Retrieves transaction details for a given transaction ID\n\n`import type { Transaction } from '@stacks/stacks-blockchain-api-types';`\n","type":"text/plain"},"url":{"path":["extended","v1","tx",":tx_id"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"event_offset","value":"0","description":"The number of events to skip"},{"disabled":false,"key":"event_limit","value":"96","description":"The numbers of events to return"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[{"disabled":false,"type":"any","value":"0x0a411719e3bfde95f9e227a2d7f8fac3d6c646b1e6cc186db0e2838a2c6cd9c0","key":"tx_id","description":"(Required) Hash of transaction"}]},"method":"GET","auth":null},"response":[{"id":"d61f3fb9-ebe2-4559-b721-8f36e4894335","name":"Transaction","originalRequest":{"url":{"path":["extended","v1","tx",":tx_id"],"host":["{{baseUrl}}"],"query":[{"key":"event_offset","value":"0"},{"key":"event_limit","value":"96"},{"key":"unanchored","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"0x0a411719e3bfde95f9e227a2d7f8fac3d6c646b1e6cc186db0e2838a2c6cd9c0","key":"tx_id","description":"(Required) Hash of transaction"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"tx_id\": \"0x5e9f3933e358df6a73fec0d47ce3e1062c20812c129f5294e6f37a8d27c051d9\",\n \"tx_status\": \"success\",\n \"tx_type\": \"coinbase\",\n \"fee_rate\": \"0\",\n \"sender_address\": \"ST3WCQ6S0DFT7YHF53M8JPKGDS1N1GSSR91677XF1\",\n \"sponsored\": false,\n \"post_condition_mode\": \"deny\",\n \"is_unanchored\": false,\n \"microblock_hash\": \"\",\n \"microblock_sequence\": 2147483647,\n \"microblock_canonical\": true,\n \"block_hash\": \"0x58412b50266debd0c35b1a20348ad9c0f17e5525fb155a97033256c83c9e2491\",\n \"block_height\": 3231,\n \"burn_block_time\": 1594230455,\n \"canonical\": true,\n \"tx_index\": 0,\n \"tx_result\": {\n  \"hex\": \"0x03\",\n  \"repr\": \"true\"\n },\n \"coinbase_payload\": {\n  \"data\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n }\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"2640a7fd-13d8-40e3-858a-03d719dcc86b","name":"Cannot find transaction for given ID","originalRequest":{"url":{"path":["extended","v1","tx",":tx_id"],"host":["{{baseUrl}}"],"query":[{"key":"event_offset","value":"0"},{"key":"event_limit","value":"96"},{"key":"unanchored","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"0x0a411719e3bfde95f9e227a2d7f8fac3d6c646b1e6cc186db0e2838a2c6cd9c0","key":"tx_id","description":"(Required) Hash of transaction"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"9747b086-dee2-4d86-b83a-cafd5c578d1b","name":"Get Raw Transaction","request":{"name":"Get Raw Transaction","description":{"content":"Retrieves a hex encoded serialized transaction for a given ID\n","type":"text/plain"},"url":{"path":["extended","v1","tx",":tx_id","raw"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x0a411719e3bfde95f9e227a2d7f8fac3d6c646b1e6cc186db0e2838a2c6cd9c0","key":"tx_id","description":"(Required) Hash of transaction"}]},"method":"GET","auth":null},"response":[{"id":"2a3b1ffe-0749-40a6-a2ce-1d963fec8260","name":"Hex encoded serialized transaction","originalRequest":{"url":{"path":["extended","v1","tx",":tx_id","raw"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x0a411719e3bfde95f9e227a2d7f8fac3d6c646b1e6cc186db0e2838a2c6cd9c0","key":"tx_id","description":"(Required) Hash of transaction"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"raw_tx\": \"0x1234\"\n}","cookie":[],"_postman_previewlanguage":"json"},{"id":"44e01eb1-1c19-4487-a59b-78284c622f6a","name":"Cannot find transaction for given ID","originalRequest":{"url":{"path":["extended","v1","tx",":tx_id","raw"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"type":"any","value":"0x0a411719e3bfde95f9e227a2d7f8fac3d6c646b1e6cc186db0e2838a2c6cd9c0","key":"tx_id","description":"(Required) Hash of transaction"}]},"method":"GET","body":{}},"status":"Not Found","code":404,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"","cookie":[],"_postman_previewlanguage":"text"}],"event":[]},{"id":"92ec94a4-b3e9-4e26-b46f-6bf18919a8b9","name":"Broadcast raw transaction","request":{"name":"Broadcast raw transaction","description":{"content":"Broadcasts raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.","type":"text/plain"},"url":{"path":["v2","transactions"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/octet-stream"}],"method":"POST","auth":null,"body":{"mode":"file"}},"response":[{"id":"41398060-cbdf-417d-b54c-06128988653b","name":"Transaction id of successful post of a raw tx to the node's mempool","originalRequest":{"url":{"path":["v2","transactions"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"file"}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"text/plain"}],"body":"e161978626f216b2141b156ade10501207ae535fa365a13ef5d7a7c9310a09f2","cookie":[],"_postman_previewlanguage":"text"},{"id":"98761e27-921f-4bb7-a13a-db860a2a3b08","name":"Rejections result in a 400 error","originalRequest":{"url":{"path":["v2","transactions"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"method":"POST","body":{"mode":"file"}},"status":"Bad Request","code":400,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"error\": \"transaction rejected\",\n \"reason\": \"BadNonce\",\n \"reason_data\": {\n  \"actual\": 4,\n  \"expected\": 0,\n  \"is_origin\": true,\n  \"principal\": \"ST2ZRX0K27GW0SP3GJCEMHD95TQGJMKB7G9Y0X1MH\"\n },\n \"txid\": \"caf6fd60ae05b0c2d19ef14ab6a7670b1095d117fa7c80224c74e76214d0a791\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"62453ea7-e795-48c5-b7d0-6215b9d778ec","name":"Transactions by block hash","request":{"name":"Transactions by block hash","description":{"content":"Retrieves a list of all transactions within a block for a given block hash.","type":"text/plain"},"url":{"path":["extended","v1","tx","block",":block_hash"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"10","description":"max number of transactions to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first transaction to fetch"}],"variable":[{"disabled":false,"type":"any","value":"0x0a83d82a65460a9e711f85a44616350280040b75317dbe486a923c1131b5ff99","key":"block_hash","description":"(Required) Hash of block"}]},"method":"GET","auth":null},"response":[{"id":"dcc87069-7bd1-4998-9ffd-ef0238c49a4c","name":"List of Transactions","originalRequest":{"url":{"path":["extended","v1","tx","block",":block_hash"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"10"},{"key":"offset","value":"42000"}],"variable":[{"disabled":false,"type":"any","value":"0x0a83d82a65460a9e711f85a44616350280040b75317dbe486a923c1131b5ff99","key":"block_hash","description":"(Required) Hash of block"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 10,\n \"offset\": 0,\n \"total\": 101922,\n \"results\": [\n  {\n   \"tx_id\": \"0x20dedbef812e44d712569224411b27324b68ab4667321a4badd5e81ba76bf0eb\",\n   \"nonce\": 269,\n   \"fee_rate\": \"0\",\n   \"sender_address\": \"SPQXK10DBF5ECAM30XVE3EJA8DNZF3VE0BK4MKV\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"on_chain_only\",\n   \"is_unanchored\": false,\n   \"block_hash\": \"0x28a9e2749b82bdc058776781a5abd5c9a6efed38f05545a8a51152655b8e1f4b\",\n   \"parent_block_hash\": \"0x3789b75ccfe7f2acf85c3f069fd5b8f95f73aba5332fa618243957d1c017a2a3\",\n   \"block_height\": 21709,\n   \"burn_block_time\": 1626286436,\n   \"burn_block_time_iso\": \"2021-07-14T18:13:56.000Z\",\n   \"canonical\": true,\n   \"tx_index\": 0,\n   \"tx_status\": \"success\",\n   \"tx_result\": {\n    \"hex\": \"0x0703\",\n    \"repr\": \"(ok true)\"\n   },\n   \"microblock_hash\": \"\",\n   \"microblock_sequence\": 2147483647,\n   \"microblock_canonical\": true,\n   \"event_count\": 0,\n   \"events\": [],\n   \"tx_type\": \"coinbase\",\n   \"coinbase_payload\": {\n    \"data\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"69a554b1-e911-4c94-9b71-2ccbf84e5445","name":"Transactions by block height","request":{"name":"Transactions by block height","description":{"content":"Retrieves all transactions within a block at a given height","type":"text/plain"},"url":{"path":["extended","v1","tx","block_height",":height"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"10","description":"max number of transactions to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first transaction to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[{"disabled":false,"type":"any","value":"66119","key":"height","description":"(Required) Height of block"}]},"method":"GET","auth":null},"response":[{"id":"f4bf65f8-5451-4aca-b38e-371477a90bbb","name":"List of Transactions","originalRequest":{"url":{"path":["extended","v1","tx","block_height",":height"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"10"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"66119","key":"height","description":"(Required) Height of block"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 10,\n \"offset\": 0,\n \"total\": 101922,\n \"results\": [\n  {\n   \"tx_id\": \"0x20dedbef812e44d712569224411b27324b68ab4667321a4badd5e81ba76bf0eb\",\n   \"nonce\": 269,\n   \"fee_rate\": \"0\",\n   \"sender_address\": \"SPQXK10DBF5ECAM30XVE3EJA8DNZF3VE0BK4MKV\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"on_chain_only\",\n   \"is_unanchored\": false,\n   \"block_hash\": \"0x28a9e2749b82bdc058776781a5abd5c9a6efed38f05545a8a51152655b8e1f4b\",\n   \"parent_block_hash\": \"0x3789b75ccfe7f2acf85c3f069fd5b8f95f73aba5332fa618243957d1c017a2a3\",\n   \"block_height\": 21709,\n   \"burn_block_time\": 1626286436,\n   \"burn_block_time_iso\": \"2021-07-14T18:13:56.000Z\",\n   \"canonical\": true,\n   \"tx_index\": 0,\n   \"tx_status\": \"success\",\n   \"tx_result\": {\n    \"hex\": \"0x0703\",\n    \"repr\": \"(ok true)\"\n   },\n   \"microblock_hash\": \"\",\n   \"microblock_sequence\": 2147483647,\n   \"microblock_canonical\": true,\n   \"event_count\": 0,\n   \"events\": [],\n   \"tx_type\": \"coinbase\",\n   \"coinbase_payload\": {\n    \"data\": \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"93ca4b81-89b3-49ca-80fa-73c0dfbbd376","name":"Transactions for address","request":{"name":"Transactions for address","description":{"content":"Retrieves all transactions for a given address that are currently in mempool","type":"text/plain"},"url":{"path":["extended","v1","address",":address","mempool"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"limit","value":"90","description":"max number of transactions to fetch"},{"disabled":false,"key":"offset","value":"42000","description":"index of first transaction to fetch"},{"disabled":false,"key":"unanchored","value":"true","description":"Include transaction data from unanchored (i.e. unconfirmed) microblocks"}],"variable":[{"disabled":false,"type":"any","value":"SP197DVH8KTJGX4STM61QN0WJV8Y9QJWXV83ZGNR9","key":"address","description":"(Required) Transactions for the address"}]},"method":"GET","auth":null},"response":[{"id":"07c2f5a9-2aa0-4ccd-851a-5f8c9fe05df6","name":"List of Transactions","originalRequest":{"url":{"path":["extended","v1","address",":address","mempool"],"host":["{{baseUrl}}"],"query":[{"key":"limit","value":"90"},{"key":"offset","value":"42000"},{"key":"unanchored","value":"true"}],"variable":[{"disabled":false,"type":"any","value":"SP197DVH8KTJGX4STM61QN0WJV8Y9QJWXV83ZGNR9","key":"address","description":"(Required) Transactions for the address"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 96,\n \"offset\": 0,\n \"total\": 5,\n \"results\": [\n  {\n   \"tx_id\": \"0xb31df5a363dad31723324cb5e0eefa04d491519fd30827a521cbc830114aa50c\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"token_transfer\",\n   \"receipt_time\": 1598288370,\n   \"receipt_time_iso\": \"2020-08-24T16:59:30.000Z\",\n   \"fee_rate\": \"180\",\n   \"sender_address\": \"STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"token_transfer\": {\n    \"recipient_address\": \"ST1GY25DM8RZV4X15X07THRZ2C5NMWPGQWKFGV87F\",\n    \"amount\": \"500000\",\n    \"memo\": \"0x46617563657400000000000000000000000000000000000000000000000000000000\"\n   }\n  },\n  {\n   \"tx_id\": \"0x5bed8e3f801cb4e2c74d2815a092f7c1c6a35f2fce4a80c80ca70848d34cb395\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"token_transfer\",\n   \"receipt_time\": 1598282326,\n   \"receipt_time_iso\": \"2020-08-24T15:18:46.000Z\",\n   \"fee_rate\": \"180\",\n   \"sender_address\": \"ST1PS1KF93VBY5A1JV7TM66KN046KP3E3761DBSAG\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"token_transfer\": {\n    \"recipient_address\": \"ST2H33S8SEY27QKEKQKR6S5PECYPKY45CQYGGQR8X\",\n    \"amount\": \"1000\",\n    \"memo\": \"0x00000000000000000000000000000000000000000000000000000000000000000000\"\n   }\n  },\n  {\n   \"tx_id\": \"0x9916036fde08a207e581cdcabc18ff55469861cb81194ab0e3e7c9a02cd5a17c\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598258958,\n   \"receipt_time_iso\": \"2020-08-24T08:49:18.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8.test-loans-1\",\n    \"source_code\": \"(define-data-var stx-loaned int 0)\\n(define-data-var lockup-period int 0)\\n(define-data-var stx-return int 0)\\n(define-public (get-stx-return (stx uint) (months uint))\\n    (ok\\n        (begin\\n            (var-set stx-loaned (to-int(stx))\\n            (var-set lockup-period (to-int(months))\\n            (calculate-stx-return)\\n            (print (var-get stx-return))\\n            (transfer-to-server)\\n        )\\n    )\\n)\\n(define-private (calculate-stx-return)\\n    (ok\\n        (begin\\n            (var-set stx-return (- (+ (* (/ (* (var-get stx-loaned) 5) 100) (var-get lockup-period)) (var-get stx-loaned)) 5))\\n        )\\n    )\\n)\\n(define-private (transfer-to-server)\\n  (begin\\n    (unwrap-panic (stx-transfer? (to-uint (var-get stx-loaned)) tx-sender 'ST2R1XSFXYHCSFE426HP45TTD8ZWV9XHX2SRP3XA8))\\n    (ok (to-uint (var-get stx-loaned)))\\n  )\\n)\"\n   }\n  },\n  {\n   \"tx_id\": \"0x871fb186c8d6ac6ede2822c71074d9884b593c0d7f2d0d6e8516e615484d7501\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598230365,\n   \"receipt_time_iso\": \"2020-08-24T00:52:45.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230358601\",\n    \"source_code\": \";; ## CUSTOM FUNCTION TO EXTRACT A SUBSTRING\\n\\n(define-read-only (subs (source (buff 10)) \\n                        (start int) \\n                        (end int))\\n (begin\\n  (unwrap-panic (if (and (<= 0 start) (<= start 10)) (ok 1) (err \\\"Out of bounds: start\\\")))\\n  (unwrap-panic (if (and (<= 0 end) (<= end 10)) (ok 1) (err \\\"Out of bounds: end\\\")))\\n  (let ((temp1 (fold subs1 source \\n                  {start: start, end: end, cursor: 1, data: \\\"\\\"})))\\n   (let ((data (get data temp1))) \\n       data))))\\n\\n    \\n;; Call the function to extract the substring between the bounds:\\n\\n;; (subs \\\"123456789\\\" 2 5)\\n\\n(define-read-only (subs1 \\n                    (ch (buff 1))\\n                    (acc {data: (buff 10), \\n                          start: int,\\n                          end: int,\\n                          cursor: int})) \\n  (let ((data (get data acc))\\n        (start (get start acc))\\n        (cursor (get cursor acc))\\n        (end (get end acc)))                                     \\n    (let ((temp2 \\n           {cursor: (+ 1 cursor),\\n            data: (default-to \\\"\\\"\\n                     (as-max-len?\\n                       (concat data \\n                         (if (let ((temp3 start)\\n                                   (temp4 cursor)\\n                                   (temp5 end))\\n                              (and (<= temp3 temp4)\\n                               (<= temp4 temp5)))\\n                           ch \\n                           \\\"\\\"))\\n                       u10))}))\\n     {start: (get start acc),\\n      end: (get end acc),\\n      cursor: (get cursor temp2),\\n      data: (get data temp2)})))\\n\"\n   }\n  },\n  {\n   \"tx_id\": \"0x66df10d99d3a26018f521d60e9f744b083386c73e47ad39c394d570abee55f1f\",\n   \"tx_status\": \"pending\",\n   \"tx_type\": \"smart_contract\",\n   \"receipt_time\": 1598230066,\n   \"receipt_time_iso\": \"2020-08-24T00:47:46.000Z\",\n   \"fee_rate\": \"2000\",\n   \"sender_address\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [],\n   \"anchor_mode\": \"any\",\n   \"smart_contract\": {\n    \"contract_id\": \"ST1FJGMWPGM1P7N0K3N9QEPZK5H1VDC5YWTVMEAZ1.contract-hook-1598230054238\",\n    \"source_code\": \"(define-read-only (subs1 \\n                    (ch (buff 1))\\n                    (acc {data: (buff 10), \\n                          start: int,\\n                          end: int,\\n                          cursor: int}))\\n (begin\\n  (unwrap-panic (if (and (<= 1 (get start acc)) (<= (get start acc) 10)) (ok 1) (err \\\"Out of bounds: start\\\")))\\n  (unwrap-panic (if (and (<= 1 (get end acc)) (<= (get end acc) 10)) (ok 1) (err \\\"Out of bounds: end\\\")))\\n  (unwrap-panic (if (and (<= 1 (get cursor acc)) (<= (get cursor acc) 10)) (ok 1) (err \\\"Out of bounds: cursor\\\")))\\n  (let ((data (get data acc))\\n        (start (get start acc))\\n        (cursor (get cursor acc))\\n        (end (get end acc)))                                     \\n    (let ((temp1 \\n           {cursor: (+ 1 cursor),\\n            data: (default-to \\\"\\\"\\n                     (as-max-len?\\n                       (concat data \\n                         (if (let ((temp2 start)\\n                                   (temp3 cursor)\\n                                   (temp4 end))\\n                              (and (<= temp2 temp3)\\n                               (<= temp3 temp4)))\\n                           ch \\n                           \\\"\\\"))\\n                       u10))}))\\n     {start: (get start acc),\\n      end: (get end acc),\\n      cursor: (get cursor temp1),\\n      data: (get data temp1)}))))\\n\"\n   }\n  },\n  {\n   \"tx_id\": \"0x7402d8e52204d6c8cba7465e159e79750338c3ee31d4fe6ddef1d4d226304b65\",\n   \"nonce\": 1,\n   \"fee_rate\": \"227\",\n   \"sender_address\": \"SP1HJDP35SSMYP98CG8SHMYHMZDK0A495ZCH6ARYS\",\n   \"sponsored\": false,\n   \"post_condition_mode\": \"deny\",\n   \"post_conditions\": [\n    {\n     \"type\": \"stx\",\n     \"condition_code\": \"sent_equal_to\",\n     \"amount\": \"88884500\",\n     \"principal\": {\n      \"type_id\": \"principal_standard\",\n      \"address\": \"SP2J6HSSDYSTM71S0K0KK4YWRKX59JN1AD52M4B59\"\n     }\n    }\n   ],\n   \"anchor_mode\": \"any\",\n   \"tx_status\": \"pending\",\n   \"receipt_time\": 1626286631,\n   \"receipt_time_iso\": \"2021-07-14T18:17:11.000Z\",\n   \"tx_type\": \"contract_call\",\n   \"contract_call\": {\n    \"contract_id\": \"SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo\",\n    \"function_name\": \"send-many\",\n    \"function_signature\": \"(define-public (send-many (recipients (list 200 (tuple (memo (buff 34)) (to principal) (ustx uint))))))\",\n    \"function_args\": [\n     {\n      \"hex\": \"0x0b000000010c00000003046d656d6f020000000e357a62597346716a52336d736b7102746f0516b734e97043840503dc1091661c105d32b7c5c75d047573747801000000000000000000000000054c4514\",\n      \"repr\": \"(list (tuple (memo 0x357a62597346716a52336d736b71) (to SP2VK9TBG8E20A0YW228PC70GBMSBFHE7BNVMKB57) (ustx u88884500)))\",\n      \"name\": \"recipients\",\n      \"type\": \"(list 200 (tuple (memo (buff 34)) (to principal) (ustx uint)))\"\n     }\n    ]\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]},{"id":"931c2136-a942-4e03-ac44-436b32a75a84","name":"Transaction Events","request":{"name":"Transaction Events","description":{"content":"Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is ('smart_contract_log', 'stx_lock', 'stx_asset', 'fungible_token_asset', 'non_fungible_token_asset').","type":"text/plain"},"url":{"path":["extended","v1","tx","events"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"tx_id","value":"0x29e25515652dad41ef675bd0670964e3d537b80ec19cf6ca6f1dd65d5bc642c5","description":"Hash of transaction"},{"disabled":false,"key":"address","value":"ST1HB64MAJ1MBV4CQ80GF01DZS4T1DSMX20ADCRA4","description":"Stacks address or a Contract identifier"},{"disabled":false,"key":"limit","value":"100","description":"number of items to return"},{"disabled":false,"key":"offset","value":"42000","description":"number of items to skip"},{"disabled":false,"key":"type","value":"stx_lock","description":"Filter the events on event type"},{"disabled":false,"key":"type","value":"fungible_token_asset","description":"Filter the events on event type"}],"variable":[]},"method":"GET","auth":null},"response":[{"id":"1b489bdf-8c1b-4299-8555-8aa13776f12f","name":"Success","originalRequest":{"url":{"path":["extended","v1","tx","events"],"host":["{{baseUrl}}"],"query":[{"key":"tx_id","value":"0x29e25515652dad41ef675bd0670964e3d537b80ec19cf6ca6f1dd65d5bc642c5"},{"key":"address","value":"ST1HB64MAJ1MBV4CQ80GF01DZS4T1DSMX20ADCRA4"},{"key":"limit","value":"100"},{"key":"offset","value":"42000"},{"key":"type","value":"smart_contract_log"},{"key":"type","value":"stx_asset"}],"variable":[]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 96,\n \"offset\": 0,\n \"events\": [\n  {\n   \"event_index\": 0,\n   \"event_type\": \"non_fungible_token_asset\",\n   \"tx_id\": \"0x05ccc123db703a2808afaaf88b6b3240f14391d14fde701bd20d7206c9133af6\",\n   \"asset\": {\n    \"asset_event_type\": \"transfer\",\n    \"asset_id\": \"ST000000000000000000002AMW42H.bns::names\",\n    \"sender\": \"STKVDRCTN8C81T22QHR9PG9GPD3V3WPQYBYFHPT4\",\n    \"recipient\": \"STRWN68C36Z7WTDD1TJERTAZ4SXDRMMDB29M4VNQ\",\n    \"value\": {\n     \"hex\": \"0x0c00000002046e616d65020000000a62696c616c7465737435096e616d6573706163650200000003627463\",\n     \"repr\": \"(tuple (name 0x62696c616c7465737435) (namespace 0x627463))\"\n    }\n   }\n  },\n  {\n   \"event_index\": 1,\n   \"event_type\": \"smart_contract_log\",\n   \"tx_id\": \"0x05ccc123db703a2808afaaf88b6b3240f14391d14fde701bd20d7206c9133af6\",\n   \"contract_log\": {\n    \"contract_id\": \"ST000000000000000000002AMW42H.bns\",\n    \"topic\": \"print\",\n    \"value\": {\n     \"hex\": \"0x0c000000010a6174746163686d656e740c00000003106174746163686d656e742d696e646578010000000000000000000000000000028304686173680200000014b472a266d0bd89c13706a4132ccfb16f7c3b9fcb086d657461646174610c00000004046e616d65020000000a62696c616c7465737435096e616d6573706163650200000003627463026f700d0000000d6e616d652d7472616e736665720974782d73656e646572051a27b6e19aaa1880e842bc709b4130b347b1f2d7f2\",\n     \"repr\": \"(tuple (attachment (tuple (attachment-index u643) (hash 0xb472a266d0bd89c13706a4132ccfb16f7c3b9fcb) (metadata (tuple (name 0x62696c616c7465737435) (namespace 0x627463) (op \\\"name-transfer\\\") (tx-sender STKVDRCTN8C81T22QHR9PG9GPD3V3WPQYBYFHPT4))))))\"\n    }\n   }\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]},{"id":"465e72f9-a507-401d-aab7-955328715ab1","name":"Stacking","description":{"content":"","type":"text/plain"},"item":[{"id":"f67b7691-1171-44ad-b36b-ad3ec060296f","name":"Stacking pool members","request":{"name":"Stacking pool members","description":{"content":"Retrieves the list of stacking pool members for a given delegator principal.","type":"text/plain"},"url":{"path":["extended","beta","stacking",":pool_principal","delegations"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"key":"after_block","value":"62802150","description":"If specified, only delegation events after the given block will be included"},{"disabled":false,"key":"unanchored","value":"true","description":"whether or not to include Stackers from unconfirmed transactions"},{"disabled":false,"key":"limit","value":"100","description":"number of items to return"},{"disabled":false,"key":"offset","value":"300","description":"number of items to skip"}],"variable":[{"disabled":false,"type":"any","value":"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11","key":"pool_principal","description":"(Required) Address principal of the stacking pool delegator"}]},"method":"GET","auth":null},"response":[{"id":"9a961bec-e51a-4846-b89d-51d00597b89f","name":"Success","originalRequest":{"url":{"path":["extended","beta","stacking",":pool_principal","delegations"],"host":["{{baseUrl}}"],"query":[{"key":"after_block","value":"62802150"},{"key":"unanchored","value":"true"},{"key":"limit","value":"100"},{"key":"offset","value":"300"}],"variable":[{"disabled":false,"type":"any","value":"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11","key":"pool_principal","description":"(Required) Address principal of the stacking pool delegator"}]},"method":"GET","body":{}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n \"limit\": 200,\n \"offset\": 0,\n \"total\": 2,\n \"results\": [\n  {\n   \"stacker\": \"SPDGWQ60E1QXTC6E4VHKK0NG34EAX554WDFFFHMF\",\n   \"pox_addr\": \"bc1qxhmdufsvnuaaaer4ynz88fspdsxq2h9e9cetdj\",\n   \"amount_ustx\": \"2062697998\",\n   \"burn_block_unlock_height\": 781984,\n   \"block_height\": 65917,\n   \"tx_id\": \"0x3c81cd26ed172a7e552ed245b8b290abefa4f82dfc610a0091ac91c2eed7f9e6\"\n  },\n  {\n   \"stacker\": \"SP7RNXF7YBSS43TECXTHF7W1MAB221WWW8RKPGSN\",\n   \"pox_addr\": \"1Di1YoMov6Ua3gPedfQz7TkP6iTLqbPUzi\",\n   \"amount_ustx\": \"4815793194\",\n   \"block_height\": 65910,\n   \"tx_id\": \"0x1692cd26ed172a7e552ed245b8b290abefa4f82dfc610a0091ac91c2eed7f9e6\"\n  }\n ]\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[]}],"event":[]}],"event":[],"variable":[{"type":"string","value":"https://api.mainnet.hiro.so/","key":"baseUrl"}],"info":{"_postman_id":"4fce559a-cc6e-494e-a028-e9be52e7e988","name":"Stacks Blockchain API","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","description":{"content":"Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/get-started/stacks-blockchain-api).\n\n[Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)\n","type":"text/plain"}}}